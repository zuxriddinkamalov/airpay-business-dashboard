{"version":3,"sources":["webpack:///./node_modules/chart.js/src/plugins/plugin.legend.js","webpack:///./node_modules/chart.js/src/helpers/helpers.options.js","webpack:///./node_modules/chart.js/src/core/core.animation.js","webpack:///./node_modules/chart.js/src/core/core.defaults.js","webpack:///./node_modules/core-js/modules/_flags.js","webpack:///./node_modules/chart.js/src/controllers/controller.line.js","webpack:///./node_modules/chart.js/src/platforms/platform.basic.js","webpack:///./node_modules/core-js/modules/_fix-re-wks.js","webpack:///./node_modules/chart.js/src/core/core.datasetController.js","webpack:///./node_modules/chart.js/src/core/core.element.js","webpack:///./node_modules/chartjs-color/node_modules/color-convert/conversions.js","webpack:///./src/mixins/text.js","webpack:///./node_modules/chart.js/src/charts/Chart.Bar.js","webpack:///./node_modules/core-js/modules/es6.regexp.flags.js","webpack:///./node_modules/chart.js/src/elements/element.point.js","webpack:///./node_modules/chartjs-color/node_modules/color-convert/index.js","webpack:///./src/views/dashboard/views/dashboard/Dashboard.vue?16fe","webpack:///./node_modules/vue-chartjs/es/mixins/index.js","webpack:///./node_modules/vue-chartjs/es/BaseCharts.js","webpack:///./src/views/dashboard/views/dashboard/components/AnalyticsChart.js","webpack:///src/views/dashboard/views/dashboard/Dashboard.vue","webpack:///./src/views/dashboard/views/dashboard/Dashboard.vue?bd31","webpack:///./src/views/dashboard/views/dashboard/Dashboard.vue?6450","webpack:///./node_modules/chart.js/src/charts/Chart.Bubble.js","webpack:///./node_modules/chart.js/src/scales/scale.time.js","webpack:///./node_modules/chart.js/src/helpers/index.js","webpack:///./node_modules/chart.js/src/helpers/helpers.canvas.js","webpack:///./node_modules/chart.js/src/charts/Chart.Scatter.js","webpack:///./node_modules/chart.js/src/charts/Chart.Doughnut.js","webpack:///./node_modules/chart.js/src/helpers/helpers.core.js","webpack:///./node_modules/color-name/index.js","webpack:///./node_modules/chart.js/src/elements/element.line.js","webpack:///./node_modules/chart.js/src/core/core.plugins.js","webpack:///./node_modules/chart.js/src/chart.js","webpack:///./node_modules/chart.js/src/controllers/controller.doughnut.js","webpack:///./node_modules/chart.js/src/elements/element.arc.js","webpack:///./node_modules/chart.js/src/scales/scale.linear.js","webpack:///./node_modules/chart.js/src/scales/scale.logarithmic.js","webpack:///./node_modules/chart.js/src/controllers/controller.bar.js","webpack:///./src/views/dashboard/views/dashboard/Dashboard.vue?a023","webpack:///./node_modules/chart.js/src/controllers/controller.radar.js","webpack:///./node_modules/core-js/modules/es6.regexp.to-string.js","webpack:///./node_modules/chart.js/src/controllers/controller.bubble.js","webpack:///./node_modules/chart.js/src/core/core.scale.js","webpack:///./node_modules/chart.js/src/core/core.animations.js","webpack:///./node_modules/chart.js/src/core/core.layouts.js","webpack:///./node_modules/chart.js/src/core/core.ticks.js","webpack:///./node_modules/chart.js/src/platforms/platform.js","webpack:///./node_modules/chart.js/src/charts/Chart.Radar.js","webpack:///./node_modules/chart.js/src/plugins/index.js","webpack:///./node_modules/chartjs-color-string/color-string.js","webpack:///./node_modules/chart.js/src/plugins/plugin.title.js","webpack:///./node_modules/chart.js/src/core/core.interaction.js","webpack:///./node_modules/chart.js/src/core/core.helpers.js","webpack:///./node_modules/core-js/modules/es6.regexp.replace.js","webpack:///./node_modules/chart.js/src/scales/scale.linearbase.js","webpack:///./node_modules/chart.js/src/charts/Chart.PolarArea.js","webpack:///./node_modules/chart.js/src/platforms/platform.dom.js","webpack:///./node_modules/chart.js/src/core/core.scaleService.js","webpack:///./node_modules/chart.js/src/helpers/helpers.easing.js","webpack:///./node_modules/chart.js/src/plugins/plugin.filler.js","webpack:///./node_modules/chart.js/src/elements/index.js","webpack:///./node_modules/chart.js/src/core/core.tooltip.js","webpack:///./node_modules/chart.js/src/core/core.js","webpack:///./node_modules/chart.js/src/elements/element.rectangle.js","webpack:///./node_modules/chart.js/src/controllers/controller.scatter.js","webpack:///./node_modules/chart.js/src/controllers/controller.polarArea.js","webpack:///./node_modules/chart.js/src/core/core.controller.js","webpack:///./node_modules/chartjs-color/index.js","webpack:///./node_modules/chart.js/src/charts/Chart.Line.js","webpack:///./node_modules/chart.js/src/scales/scale.category.js","webpack:///./node_modules/chart.js/src/scales/scale.radialLinear.js"],"names":["defaults","__webpack_require__","Element","helpers","layouts","noop","getBoxWidth","labelOpts","fontSize","usePointStyle","Math","SQRT2","boxWidth","_set","legend","display","position","fullWidth","reverse","weight","onClick","e","legendItem","index","datasetIndex","ci","this","chart","meta","getDatasetMeta","hidden","data","datasets","update","onHover","labels","padding","generateLabels","isArray","map","dataset","i","text","label","fillStyle","backgroundColor","isDatasetVisible","lineCap","borderCapStyle","lineDash","borderDash","lineDashOffset","borderDashOffset","lineJoin","borderJoinStyle","lineWidth","borderWidth","strokeStyle","borderColor","pointStyle","legendCallback","push","id","length","join","Legend","extend","initialize","config","legendHitBoxes","doughnutMode","beforeUpdate","maxWidth","maxHeight","margins","me","beforeSetDimensions","setDimensions","afterSetDimensions","beforeBuildLabels","buildLabels","afterBuildLabels","beforeFit","fit","afterFit","afterUpdate","minSize","isHorizontal","width","left","right","height","top","bottom","paddingLeft","paddingTop","paddingRight","paddingBottom","options","legendItems","callback","filter","item","opts","ctx","globalDefault","global","valueOrDefault","defaultFontSize","fontStyle","defaultFontStyle","fontFamily","defaultFontFamily","labelFont","fontString","hitboxes","font","lineWidths","totalHeight","textAlign","textBaseline","each","measureText","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","max","draw","lineDefault","elements","line","legendWidth","cursor","fontColor","defaultFontColor","drawLegendBox","x","y","isNaN","save","defaultColor","isLineWidthZero","setLineDash","radius","offSet","centerX","centerY","canvas","drawPoint","strokeRect","fillRect","restore","fillText","textWidth","halfFontSize","xLeft","yMiddle","beginPath","moveTo","lineTo","stroke","handleEvent","type","changed","lh","hitBox","call","native","createNewLegendAndAttach","legendOpts","configure","addBox","module","exports","_element","beforeInit","mergeIf","removeBox","afterEvent","toLineHeight","value","size","matches","match","toPadding","t","r","b","l","isObject","resolve","inputs","context","ilen","undefined","currentStep","numSteps","easing","render","onAnimationProgress","onAnimationComplete","Object","defineProperty","prototype","get","set","scope","values","merge","anObject","that","result","ignoreCase","multiline","unicode","sticky","showLines","spanGaps","hover","mode","scales","xAxes","yAxes","Chart","lineEnabled","showLine","controllers","DatasetController","datasetElementType","Line","dataElementType","Point","reset","custom","getMeta","points","lineElementOptions","scale","getScaleForId","yAxisID","getDataset","tension","lineTension","_scale","_datasetIndex","_children","_model","fill","steppedLine","stepped","cubicInterpolationMode","pivot","updateElement","updateBezierControlPoints","getPointBackgroundColor","point","pointBackgroundColor","valueAtIndexOrDefault","getPointBorderColor","pointBorderColor","getPointBorderWidth","pointBorderWidth","getPointRotation","pointRotation","rotation","yScale","xScale","xAxisID","pointOptions","pointRadius","hitRadius","pointHitRadius","getPixelForValue","NaN","getBasePixel","calculatePointY","_xScale","_yScale","_index","skip","ds","dsMeta","sumPos","sumNeg","stacked","stackedRightValue","Number","getRightValue","rightValue","model","controlPoints","area","chartArea","capControlPoint","pt","min","splineCurveMonotone","splineCurve","previousItem","nextItem","controlPointPreviousX","previous","controlPointPreviousY","controlPointNextX","next","controlPointNextY","capBezierPoints","halfBorderWidth","clipArea","unclipArea","setHoverStyle","element","$previousStyle","hoverBackgroundColor","pointHoverBackgroundColor","getHoverColor","hoverBorderColor","pointHoverBorderColor","hoverBorderWidth","pointHoverBorderWidth","hoverRadius","pointHoverRadius","acquireContext","getContext","hide","redefine","fails","defined","wks","KEY","exec","SYMBOL","fns","strfn","rxfn","O","String","RegExp","string","arg","arrayEvents","listenArrayEvents","array","listener","_chartjs","listeners","configurable","enumerable","forEach","key","method","charAt","toUpperCase","slice","base","args","Array","arguments","res","apply","object","unlistenArrayEvents","stub","indexOf","splice","linkScales","addElements","updateIndex","scaleID","destroy","_data","createMetaDataset","_chart","createMetaData","metaData","addElementAndReset","buildOrUpdateElements","resyncElements","transition","easingValue","removeHoverStyle","numMeta","numData","insertElements","start","count","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","inherits","color","interpolate","view","ease","actual","origin","target","c0","c1","keys","hasOwnProperty","valid","mix","rgbString","isFinite","configuration","_view","clone","_start","tooltipPosition","hasValue","isNumber","rgb2hsl","rgb","h","s","g","delta","rgb2hsv","v","rgb2hwb","w","rgb2cmyk","c","m","k","rgb2keyword","reverseKeywords","JSON","stringify","rgb2xyz","pow","z","rgb2lab","a","xyz","rgb2lch","lab2lch","hsl2rgb","hsl","t1","t2","t3","val","hsl2hsv","sv","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hsv","hi","floor","f","p","q","hsv2hsl","sl","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","hwb","n","wh","bl","ratio","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab","y2","hr","atan2","PI","sqrt","lab2rgb","lch2lab","lch","cos","sin","lch2xyz","lch2rgb","keyword2rgb","keyword","cssKeywords","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","__webpack_exports__","filters","shortEmail","email","re","replace","money","price","parseInt","toString","Bar","flags","xRange","mouseX","vm","abs","yRange","mouseY","inRange","inLabelRange","inXRange","inYRange","getCenterPoint","getArea","errMargin","conversions","convert","Converter","func","pair","from","to","round","convs","routeSpace","space","getValues","setValues","vals","fspace","_vm","_h","$createElement","_c","_self","staticClass","_v","_m","_s","_f","currentData","date","attrs","chartData","analyticData","title","slot","xs","md","clearable","default-first-option","$$v","$set","expression","range-separator","format","value-format","start-placeholder","end-placeholder","label-width","aria-hidden","staticRenderFns","dataHandler","newData","oldData","$data","newDatasetLabels","oldDatasetLabels","oldLabels","newLabels","oldDatasetKeys","newDatasetKeys","deletionKeys","attribute","deletionKey","$emit","xLabels","yLabels","renderChart","reactiveData","watch","reactiveProp","props","required","mixins","generateChart","chartId","chartType","createElement","style","styles","class","cssClasses","ref","default","plugins","_plugins","methods","addPlugin","plugin","generateLegend","chart_default","$refs","beforeDestroy","AnalyticsChart","extends","mounted","TEST_DATA","OPTIONS","responsive","layout","maintainAspectRatio","gridLines","Dashboardvue_type_script_lang_js_","name","computed","query","startDate","es","endDate","self","objectSpread","tooltips","enabled","callbacks","tooltipItem","newValue","oldValue","oldQuery","$route","$router","mixins_text","components","Analytics","VBody","Body","dashboard_Dashboardvue_type_script_lang_js_","component","componentNormalizer","__file","Bubble","moment","window","Scale","scaleService","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","MAX_SAFE_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","items","hash","out","buildLookupTable","timestamps","distribution","time","pos","prev","curr","table","lookup","mid","i0","i1","lo","skey","sval","tkey","range","span","offset","momentify","parser","isValid","parse","input","isNullOrUndef","startOf","valueOf","determineStepSize","unit","capacity","factor","interval","milliseconds","ceil","determineUnitForAutoTicks","minUnit","determineUnitForFormatting","ticks","duration","diff","as","determineMajorUnit","generate","timeOpts","minor","major","stepSize","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","last","add","computeOffsets","upper","lower","ticksFromTimestamps","majorUnit","determineLabelFormat","momentDate","hasTime","defaultConfig","bounds","displayFormat","displayFormats","autoSkip","source","TimeScale","Error","mergeTicksOptions","console","warn","rawValue","determineDataLimits","j","jlen","timestamp","sort","endOf","_horizontal","_table","_timestamps","buildTicks","getLabelCapacity","_unit","_majorUnit","_offsets","_labelFormat","getLabelForIndex","tooltipFormat","tickFormatFunction","tick","formatOverride","formats","minorFormat","majorFormat","majorTime","majorTickOpts","tickOpts","formatter","userCallback","convertTicksToLabels","getPixelForOffset","getPixelForTick","getTicks","getValueForPixel","pixel","getLabelWidth","ticksOpts","tickLabelWidth","angle","toRadians","maxRotation","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","innerWidth","registerScaleType","clear","clearRect","roundedRect","epsilon","arcTo","closePath","rect","edgeLength","xOffset","yOffset","drawImage","translate","rotate","arc","leftX","topY","sideSize","clip","flip","bezierCurveTo","drawRoundedRectangle","Scatter","Doughnut","uid","defaultValue","fn","thisArg","loopable","len","arrayEquals","a0","a1","v0","v1","klen","_merger","tval","_mergerIf","sources","merger","setFn","extensions","ChartElement","constructor","Surrogate","__super__","callCallback","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","globalDefaults","current","currentVM","globalOptionLineElements","lastDrawnIndex","_loop","_cacheId","register","concat","unregister","idx","getAll","notify","hook","descriptor","params","descriptors","cache","$plugins","_invalidate","Animation","animationService","Interaction","platform","Ticks","Tooltip","Title","pluginService","PluginBase","canvasHelpers","layoutService","animation","animateRotate","animateScale","arcOpts","bw","cutoutPercentage","circumference","dataLabel","doughnut","pie","Arc","getRingIndex","ringIndex","availableWidth","availableHeight","startAngle","endAngle","end","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","outerRadius","innerRadius","radiusLength","getVisibleDatasetCount","offsetX","offsetY","total","calculateTotal","animationOpts","calculateCircumference","elementOpts","arcs","hoverWidth","chartX","chartY","pointRelativePosition","getAngleFromPoint","distance","betweenAngles","withinRadius","halfAngle","halfRadius","centreAngle","rangeFromCentre","sA","eA","formatters","linear","LinearScale","LinearScaleBase","DEFAULT_MIN","DEFAULT_MAX","IDMatches","hasStacks","stack","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","handleTickRangeOptions","getTickLimit","maxTicks","maxTicksLimit","handleDirectionalChanges","innerDimension","ticksAsNumbers","generateTicks","generationOptions","dataRange","exp","significand","tickVal","log10","endExp","endSignificand","minNotZero","precision","lastTick","logarithmic","LogarithmicScale","tickValues","_getFirstTickValue","sign","firstTickValue","computeMinSampleSize","pixels","computeFitCategoryTraits","ruler","thickness","barThickness","stackCount","categoryPercentage","barPercentage","chunk","computeFlexCategoryTraits","percent","offsetGridLines","axis","rectangle","borderSkipped","yLabel","datasetLabel","xLabel","bar","Rectangle","rects","_ruler","getRuler","rectangleOptions","updateElementGeometry","vscale","getValueScale","horizontal","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","getValueScaleId","getIndexScaleId","getIndexScale","_getStacks","stacks","getStackCount","getStackIndex","imeta","ivalue","controller","stackIndex","maxBarThickness","Infinity","horizontalBar","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_9_oneOf_1_0_node_modules_css_loader_index_js_ref_9_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_9_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_9_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Dashboard_vue_vue_type_style_index_0_lang_sass___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_9_oneOf_1_0_node_modules_css_loader_index_js_ref_9_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_9_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_9_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Dashboard_vue_vue_type_style_index_0_lang_sass___WEBPACK_IMPORTED_MODULE_0___default","radar","pointElementOptions","pointPosition","getPointPositionForValue","xCenter","yCenter","$flags","DESCRIPTORS","TO_STRING","$toString","define","R","dataPoint","bubble","_resolveElementOptions","dsIndex","getPixelForDecimal","_options","dataIndex","labelsFromTicks","getLineValue","lineValue","computeTextSize","longestText","parseFontOptions","family","parseLineHeight","lineHeight","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","beginAtZero","minRotation","mirror","autoSkipPadding","labelOffset","getPadding","_ticks","longestTextCache","beforeDataLimits","afterDataLimits","beforeBuildTicks","afterBuildTicks","beforeTickToLabelConversion","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","tickFont","labelRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","scaleLabelOpts","gridLineOpts","isFullWidth","scaleLabelLineHeight","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","longestLabelWidth","labelHeight","firstLabelWidth","lastLabelWidth","handleMargins","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","skipRatio","shouldSkip","optionTicks","tickCount","labelRotationRadians","longestRotatedLabel","optionMajorTicks","isRotated","tickFontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","scaleLabelFont","itemsToDraw","axisWidth","xTickStart","xTickEnd","yTickStart","yTickEnd","lineColor","tx1","ty1","tx2","ty2","x1","y1","x2","labelX","labelY","zeroLineIndex","labelYOffset","xLineValue","aliasPixel","labelXOffset","isLeft","yLineValue","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","lineCount","scaleLabelX","scaleLabelY","halfLineHeight","onProgress","onComplete","frameDuration","animations","dropFrames","request","addAnimation","lazy","animating","requestAnimationFrame","cancelAnimation","findIndex","requestAnimFrame","startDigest","startTime","Date","now","framesToDrop","advance","endTime","filterByPosition","where","sortByWeight","_tmpIndex_","boxes","layoutItem","prop","layoutOptions","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","chartWidth","chartHeight","chartAreaWidth","chartAreaHeight","verticalBoxWidth","horizontalBoxHeight","maxChartAreaWidth","maxChartAreaHeight","minBoxSizes","getMinimumBoxSize","maxHorizontalLeftPadding","maxHorizontalRightPadding","maxVerticalTopPadding","maxVerticalBottomPadding","horizontalBox","boxPadding","verticalBox","totalLeftBoxesWidth","totalRightBoxesWidth","totalTopBoxesHeight","totalBottomBoxesHeight","fitBox","box","finalFitVerticalBox","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBoxSize","findNextWhere","minBox","scaleMargin","tickValue","logDelta","tickString","maxTick","logTick","toExponential","numDecimal","toFixed","remain","basic","dom","implementation","_enabled","releaseContext","addEventListener","removeEventListener","Radar","filler","colorNames","getRgba","abbr","hex","rgba","per","parseFloat","getHsla","alpha","getHwb","getRgb","getHsl","hsla","getAlpha","hexString","hexDouble","rgbaString","percentString","percentaString","hslString","hslaString","hwbString","reverseNames","num","str","textSize","titleX","titleY","titleFont","createNewTitleBlockAndAttach","titleOpts","titleBlock","getRelativePosition","parseVisibleItems","handler","getIntersectItems","getNearestItems","intersect","distanceMetric","minDistance","POSITIVE_INFINITY","nearestItems","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","indexMode","modes","single","x-axis","nearest","sizeA","sizeB","ret","intersectsItem","parseMaxStyle","styleValue","node","parentProperty","valueInPixels","parentNode","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","document","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","configMerge","scaleMerge","getScaleDefaults","slen","collection","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","almostEquals","almostWhole","rounded","reduce","NEGATIVE_INFINITY","exponent","log","LOG10E","powerOf10","isPowerOf10","degrees","toDegrees","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","distanceBetweenPoints","pixelWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","loop","niceNum","niceFraction","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getStyle","currentDevicePixelRatio","getConstraintWidth","getConstraintHeight","_calculatePadding","container","parentDimension","parent","host","getMaximumWidth","clientWidth","cw","getMaximumHeight","clientHeight","ch","el","property","currentStyle","getPropertyValue","retinaScale","forceRatio","pixelRatio","devicePixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","numberOfLines","CanvasGradient","error","colorValue","CanvasPattern","saturate","darken","REPLACE","$replace","searchValue","replaceValue","spacing","niceRange","niceMin","niceMax","numSpaces","minSign","maxSign","setMin","suggestedMin","setMax","suggestedMax","numericGeneratorOptions","fixedStepSize","PolarArea","EXPANDO_KEY","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","initCanvas","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","supportsEventListenerOptions","supports","eventListenerOptions","passive","createEvent","nativeEvent","fromNativeEvent","event","throttled","ticking","createResizer","resizer","cls","maxSize","cssText","className","innerHTML","expand","childNodes","shrink","_reset","scrollLeft","scrollTop","onScroll","bind","watchForRender","expando","proxy","renderProxy","animationName","reflow","offsetParent","classList","unwatchForRender","remove","addResizeListener","insertBefore","firstChild","removeResizeListener","removeChild","injectCSS","css","_style","setAttribute","getElementsByTagName","appendChild","createTextNode","keyframes","getElementById","removeAttribute","proxies","addEvent","removeEvent","constructors","scaleConstructor","scaleDefaults","getScaleConstructor","updateScaleDefaults","additions","addScalesToLayout","effects","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","easingEffects","propagate","mappers","visible","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","getBasePosition","resolveTarget","visited","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","doFill","mapper","p0","p1","d0","d1","afterDatasetsUpdate","$filler","beforeDatasetDraw","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","cornerRadius","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","eventPosition","nearestElement","d","tp","mergeOpacity","colorString","opacity","pushOrConcat","toPush","splitNewlines","split","createTooltipItem","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","legendColorBackground","getTooltipSize","tooltip","body","combinedBodyLength","bodyItem","before","lines","after","titleLineCount","footerLineCount","widthPadding","maxLineWidth","determineAlignment","lf","rf","olf","orf","yf","midX","midY","getBackgroundPoint","alignment","paddingAndSize","radiusAndPadding","getBeforeAfterBodyLines","_lastActive","getTitle","getBeforeBody","getBody","bodyItems","getAfterBody","getFooter","existingModel","active","_active","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","itemSort","dataPoints","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","drawBody","xLinePadding","fillLineOfText","drawColorBoxes","textColor","drawFooter","drawBackground","quadraticCurveTo","hasTooltipContent","getElementsAtEventForMode","responsiveAnimationDuration","events","animationDuration","construct","isVertical","getBarBounds","halfWidth","halfHeight","signX","signY","barSize","halfStroke","borderLeft","borderRight","borderTop","borderBottom","corners","borders","startCorner","cornerAt","corner","scatter","angleLines","circular","pointLabels","polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","initConfig","updateConfig","newOptions","ensureScalesHaveIDs","buildOrUpdateScales","positionIsHorizontal","types","instances","_bufferedRender","bindEvents","resize","initToolTip","stop","silent","newWidth","newHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","obj","dtype","dposition","isDefault","scaleType","scaleClass","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","resetElements","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","drawDatasets","_drawTooltip","drawDataset","getElementAtEvent","getElementsAtEvent","getElementsAtXAxis","getDatasetAtEvent","_meta","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","Controller","Color","lightness","whiteness","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","setChannel","hue","saturation","saturationv","blackness","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","yiq","light","negate","lighten","desaturate","whiten","blacken","greyscale","clearer","opaquer","mixinColor","color1","w1","w2","toJSON","spaces","maxes","capped","chans","sname","svalues","DatasetScale","getLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getPointLabelFontOptions","pointLabelOptions","measureLabelSize","determineLimits","fitWithPointLabels","plFont","largestPossibleRadius","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","hLimits","vLimits","setReductions","drawingArea","setCenterPoint","getTextAlignForAngle","adjustPointPositionForLabelHeight","drawPointLabels","angleLineOpts","pointLabelOpts","outerDistance","outerPosition","pointLabelPosition","pointLabelFontColor","drawRadiusLine","numberOrZero","param","LinearRadialScale","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","startAngleRadians","scalingFactor","distanceFromCenter","thisAngle","tickFontStyle","tickFontFamily","tickLabelFont","yCenterOffset"],"mappings":"kHAEA,IAAAA,EAAeC,EAAQ,QACvBC,EAAcD,EAAQ,QACtBE,EAAcF,EAAQ,QACtBG,EAAcH,EAAQ,QAEtBI,EAAAF,EAAAE,KAmFA,SAAAC,EAAAC,EAAAC,GACA,OAAAD,EAAAE,cACAD,EAAAE,KAAAC,MACAJ,EAAAK,SApFAZ,EAAAa,KAAA,UACAC,QACAC,SAAA,EACAC,SAAA,MACAC,WAAA,EACAC,SAAA,EACAC,OAAA,IAGAC,QAAA,SAAAC,EAAAC,GACA,IAAAC,EAAAD,EAAAE,aACAC,EAAAC,KAAAC,MACAC,EAAAH,EAAAI,eAAAN,GAGAK,EAAAE,OAAA,OAAAF,EAAAE,QAAAL,EAAAM,KAAAC,SAAAT,GAAAO,OAAA,KAGAL,EAAAQ,UAGAC,QAAA,KAEAC,QACAvB,SAAA,GACAwB,QAAA,GAYAC,eAAA,SAAAV,GACA,IAAAI,EAAAJ,EAAAI,KACA,OAAA5B,EAAAmC,QAAAP,EAAAC,UAAAD,EAAAC,SAAAO,IAAA,SAAAC,EAAAC,GACA,OACAC,KAAAF,EAAAG,MACAC,UAAAzC,EAAAmC,QAAAE,EAAAK,iBAAAL,EAAAK,gBAAA,GAAAL,EAAAK,gBACAf,QAAAH,EAAAmB,iBAAAL,GACAM,QAAAP,EAAAQ,eACAC,SAAAT,EAAAU,WACAC,eAAAX,EAAAY,iBACAC,SAAAb,EAAAc,gBACAC,UAAAf,EAAAgB,YACAC,YAAAjB,EAAAkB,YACAC,WAAAnB,EAAAmB,WAGAnC,aAAAiB,IAEKf,YAKLkC,eAAA,SAAAjC,GACA,IAAAe,KACAA,EAAAmB,KAAA,cAAAlC,EAAAmC,GAAA,aACA,QAAArB,EAAA,EAAiBA,EAAAd,EAAAI,KAAAC,SAAA+B,OAAgCtB,IACjDC,EAAAmB,KAAA,qCAAAlC,EAAAI,KAAAC,SAAAS,GAAAI,gBAAA,aACAlB,EAAAI,KAAAC,SAAAS,GAAAE,OACAD,EAAAmB,KAAAlC,EAAAI,KAAAC,SAAAS,GAAAE,OAEAD,EAAAmB,KAAA,SAGA,OADAnB,EAAAmB,KAAA,SACAnB,EAAAsB,KAAA,OAmBA,IAAAC,EAAA/D,EAAAgE,QAEAC,WAAA,SAAAC,GACAjE,EAAA+D,OAAAxC,KAAA0C,GAGA1C,KAAA2C,kBAGA3C,KAAA4C,cAAA,GAOAC,aAAAlE,EACA4B,OAAA,SAAAuC,EAAAC,EAAAC,GACA,IAAAC,EAAAjD,KA0BA,OAvBAiD,EAAAJ,eAGAI,EAAAH,WACAG,EAAAF,YACAE,EAAAD,UAGAC,EAAAC,sBACAD,EAAAE,gBACAF,EAAAG,qBAEAH,EAAAI,oBACAJ,EAAAK,cACAL,EAAAM,mBAGAN,EAAAO,YACAP,EAAAQ,MACAR,EAAAS,WAEAT,EAAAU,cAEAV,EAAAW,SAEAD,YAAAhF,EAIAuE,oBAAAvE,EACAwE,cAAA,WACA,IAAAF,EAAAjD,KAEAiD,EAAAY,gBAEAZ,EAAAa,MAAAb,EAAAH,SACAG,EAAAc,KAAA,EACAd,EAAAe,MAAAf,EAAAa,QAEAb,EAAAgB,OAAAhB,EAAAF,UAGAE,EAAAiB,IAAA,EACAjB,EAAAkB,OAAAlB,EAAAgB,QAIAhB,EAAAmB,YAAA,EACAnB,EAAAoB,WAAA,EACApB,EAAAqB,aAAA,EACArB,EAAAsB,cAAA,EAGAtB,EAAAW,SACAE,MAAA,EACAG,OAAA,IAGAb,mBAAAzE,EAIA0E,kBAAA1E,EACA2E,YAAA,WACA,IAAAL,EAAAjD,KACAnB,EAAAoE,EAAAuB,QAAA/D,WACAgE,EAAAhG,EAAAiG,SAAA7F,EAAA8B,gBAAAsC,EAAAhD,OAAAgD,OAEApE,EAAA8F,SACAF,IAAAE,OAAA,SAAAC,GACA,OAAA/F,EAAA8F,OAAAC,EAAA3B,EAAAhD,MAAAI,SAIA4C,EAAAuB,QAAAhF,SACAiF,EAAAjF,UAGAyD,EAAAwB,eAEAlB,iBAAA5E,EAIA6E,UAAA7E,EACA8E,IAAA,WACA,IAAAR,EAAAjD,KACA6E,EAAA5B,EAAAuB,QACA3F,EAAAgG,EAAApE,OACApB,EAAAwF,EAAAxF,QAEAyF,EAAA7B,EAAA6B,IAEAC,EAAAzG,EAAA0G,OACAC,EAAAxG,EAAAwG,eACAnG,EAAAmG,EAAApG,EAAAC,SAAAiG,EAAAG,iBACAC,EAAAF,EAAApG,EAAAsG,UAAAJ,EAAAK,kBACAC,EAAAJ,EAAApG,EAAAwG,WAAAN,EAAAO,mBACAC,EAAA9G,EAAA+G,WAAA1G,EAAAqG,EAAAE,GAGAI,EAAAxC,EAAAN,kBAEAiB,EAAAX,EAAAW,QACAC,EAAAZ,EAAAY,eAWA,GATAA,GACAD,EAAAE,MAAAb,EAAAH,SACAc,EAAAK,OAAA5E,EAAA,OAEAuE,EAAAE,MAAAzE,EAAA,KACAuE,EAAAK,OAAAhB,EAAAF,WAIA1D,EAGA,GAFAyF,EAAAY,KAAAH,EAEA1B,EAAA,CAIA,IAAA8B,EAAA1C,EAAA0C,YAAA,GACAC,EAAA3C,EAAAwB,YAAApC,OAAAvD,EAAAD,EAAA,UAEAiG,EAAAe,UAAA,OACAf,EAAAgB,aAAA,MAEArH,EAAAsH,KAAA9C,EAAAwB,YAAA,SAAA7E,EAAAmB,GACA,IAAA7B,EAAAN,EAAAC,EAAAC,GACAgF,EAAA5E,EAAAJ,EAAA,EAAAgG,EAAAkB,YAAApG,EAAAoB,MAAA8C,MAEA6B,IAAAtD,OAAA,GAAAyB,EAAAjF,EAAA6B,SAAAuC,EAAAa,QACA8B,GAAA9G,EAAAD,EAAA,QACA8G,IAAAtD,QAAAY,EAAAc,MAIA0B,EAAA1E,IACAgD,KAAA,EACAG,IAAA,EACAJ,QACAG,OAAAnF,GAGA6G,IAAAtD,OAAA,IAAAyB,EAAAjF,EAAA6B,UAGAkD,EAAAK,QAAA2B,MAEI,CACJ,IAAAK,EAAApH,EAAA6B,QACAwF,EAAAjD,EAAAiD,gBACAC,EAAAtH,EAAA6B,QACA0F,EAAA,EACAC,EAAA,EACAC,EAAAxH,EAAAmH,EAEAxH,EAAAsH,KAAA9C,EAAAwB,YAAA,SAAA7E,EAAAmB,GACA,IAAA7B,EAAAN,EAAAC,EAAAC,GACAyH,EAAArH,EAAAJ,EAAA,EAAAgG,EAAAkB,YAAApG,EAAAoB,MAAA8C,MAGAuC,EAAAC,EAAA1C,EAAAK,SACAkC,GAAAC,EAAAvH,EAAA6B,QACAwF,EAAA/D,KAAAiE,GAEAA,EAAA,EACAC,EAAA,GAIAD,EAAApH,KAAAwH,IAAAJ,EAAAG,GACAF,GAAAC,EAGAb,EAAA1E,IACAgD,KAAA,EACAG,IAAA,EACAJ,MAAAyC,EACAtC,OAAAnF,KAIAqH,GAAAC,EACAF,EAAA/D,KAAAiE,GACAxC,EAAAE,OAAAqC,EAIAlD,EAAAa,MAAAF,EAAAE,MACAb,EAAAgB,OAAAL,EAAAK,QAEAP,SAAA/E,EAGAkF,aAAA,WACA,cAAA7D,KAAAwE,QAAAlF,UAAA,WAAAU,KAAAwE,QAAAlF,UAIAmH,KAAA,WACA,IAAAxD,EAAAjD,KACA6E,EAAA5B,EAAAuB,QACA3F,EAAAgG,EAAApE,OACAsE,EAAAzG,EAAA0G,OACA0B,EAAA3B,EAAA4B,SAAAC,KACAC,EAAA5D,EAAAa,MACA6B,EAAA1C,EAAA0C,WAEA,GAAAd,EAAAxF,QAAA,CACA,IAOAyH,EAPAhC,EAAA7B,EAAA6B,IACAG,EAAAxG,EAAAwG,eACA8B,EAAA9B,EAAApG,EAAAkI,UAAAhC,EAAAiC,kBACAlI,EAAAmG,EAAApG,EAAAC,SAAAiG,EAAAG,iBACAC,EAAAF,EAAApG,EAAAsG,UAAAJ,EAAAK,kBACAC,EAAAJ,EAAApG,EAAAwG,WAAAN,EAAAO,mBACAC,EAAA9G,EAAA+G,WAAA1G,EAAAqG,EAAAE,GAIAP,EAAAe,UAAA,OACAf,EAAAgB,aAAA,SACAhB,EAAAjD,UAAA,GACAiD,EAAA/C,YAAAgF,EACAjC,EAAA5D,UAAA6F,EACAjC,EAAAY,KAAAH,EAEA,IAAArG,EAAAN,EAAAC,EAAAC,GACA2G,EAAAxC,EAAAN,eAGAsE,EAAA,SAAAC,EAAAC,EAAAvH,GACA,KAAAwH,MAAAlI,OAAA,IAKA4F,EAAAuC,OAEAvC,EAAA5D,UAAA+D,EAAArF,EAAAsB,UAAA6D,EAAAuC,cACAxC,EAAAzD,QAAA4D,EAAArF,EAAAyB,QAAAqF,EAAApF,gBACAwD,EAAArD,eAAAwD,EAAArF,EAAA6B,eAAAiF,EAAAhF,kBACAoD,EAAAnD,SAAAsD,EAAArF,EAAA+B,SAAA+E,EAAA9E,iBACAkD,EAAAjD,UAAAoD,EAAArF,EAAAiC,UAAA6E,EAAA5E,aACAgD,EAAA/C,YAAAkD,EAAArF,EAAAmC,YAAAgD,EAAAuC,cACA,IAAAC,EAAA,IAAAtC,EAAArF,EAAAiC,UAAA6E,EAAA5E,aAOA,GALAgD,EAAA0C,aAEA1C,EAAA0C,YAAAvC,EAAArF,EAAA2B,SAAAmF,EAAAlF,aAGAqD,EAAApE,QAAAoE,EAAApE,OAAA1B,cAAA,CAGA,IAAA0I,EAAA3I,EAAAE,KAAAC,MAAA,EACAyI,EAAAD,EAAAzI,KAAAC,MACA0I,EAAAT,EAAAQ,EACAE,EAAAT,EAAAO,EAGAjJ,EAAAoJ,OAAAC,UAAAhD,EAAAlF,EAAAqC,WAAAwF,EAAAE,EAAAC,QAGAL,GACAzC,EAAAiD,WAAAb,EAAAC,EAAAjI,EAAAJ,GAEAgG,EAAAkD,SAAAd,EAAAC,EAAAjI,EAAAJ,GAGAgG,EAAAmD,YAEAC,EAAA,SAAAhB,EAAAC,EAAAvH,EAAAuI,GACA,IAAAC,EAAAtJ,EAAA,EACAuJ,EAAAnJ,EAAAkJ,EAAAlB,EACAoB,EAAAnB,EAAAiB,EAEAtD,EAAAoD,SAAAtI,EAAAoB,KAAAqH,EAAAC,GAEA1I,EAAAQ,SAEA0E,EAAAyD,YACAzD,EAAAjD,UAAA,EACAiD,EAAA0D,OAAAH,EAAAC,GACAxD,EAAA2D,OAAAJ,EAAAF,EAAAG,GACAxD,EAAA4D,WAKA7E,EAAAZ,EAAAY,eAEAiD,EADAjD,GAEAqD,EAAAjE,EAAAc,MAAA8C,EAAAlB,EAAA,MACAwB,EAAAlE,EAAAiB,IAAArF,EAAA6B,QACAkG,KAAA,IAIAM,EAAAjE,EAAAc,KAAAlF,EAAA6B,QACAyG,EAAAlE,EAAAiB,IAAArF,EAAA6B,QACAkG,KAAA,GAIA,IAAAN,EAAAxH,EAAAD,EAAA6B,QACAjC,EAAAsH,KAAA9C,EAAAwB,YAAA,SAAA7E,EAAAmB,GACA,IAAAoH,EAAArD,EAAAkB,YAAApG,EAAAoB,MAAA8C,MACAA,EAAA5E,EAAAJ,EAAA,EAAAqJ,EACAjB,EAAAJ,EAAAI,EACAC,EAAAL,EAAAK,EAEAtD,EACAqD,EAAApD,GAAA+C,IACAM,EAAAL,EAAAK,GAAAb,EACAQ,EAAAF,OACAM,EAAAJ,EAAAI,EAAAjE,EAAAc,MAAA8C,EAAAlB,EAAAmB,EAAAF,OAAA,GAEKO,EAAAb,EAAArD,EAAAkB,SACL+C,EAAAJ,EAAAI,IAAAjE,EAAAiD,aAAAY,EAAAF,MAAA/H,EAAA6B,QACAyG,EAAAL,EAAAK,EAAAlE,EAAAiB,IAAArF,EAAA6B,QACAoG,EAAAF,QAGAK,EAAAC,EAAAC,EAAAvH,GAEA6F,EAAA1E,GAAAgD,KAAAmD,EACAzB,EAAA1E,GAAAmD,IAAAiD,EAGAe,EAAAhB,EAAAC,EAAAvH,EAAAuI,GAEAtE,EACAiD,EAAAI,GAAApD,EAAAjF,EAAA,QAEAiI,EAAAK,GAAAb,MAaAqC,YAAA,SAAAhJ,GACA,IAAAsD,EAAAjD,KACA6E,EAAA5B,EAAAuB,QACAoE,EAAA,YAAAjJ,EAAAiJ,KAAA,QAAAjJ,EAAAiJ,KACAC,GAAA,EAEA,iBAAAD,GACA,IAAA/D,EAAArE,QACA,WAEG,cAAAoI,EAKH,OAJA,IAAA/D,EAAAnF,QACA,OAOA,IAAAwH,EAAAvH,EAAAuH,EACAC,EAAAxH,EAAAwH,EAEA,GAAAD,GAAAjE,EAAAc,MAAAmD,GAAAjE,EAAAe,OAAAmD,GAAAlE,EAAAiB,KAAAiD,GAAAlE,EAAAkB,OAGA,IADA,IAAA2E,EAAA7F,EAAAN,eACA5B,EAAA,EAAkBA,EAAA+H,EAAAzG,SAAetB,EAAA,CACjC,IAAAgI,EAAAD,EAAA/H,GAEA,GAAAmG,GAAA6B,EAAAhF,MAAAmD,GAAA6B,EAAAhF,KAAAgF,EAAAjF,OAAAqD,GAAA4B,EAAA7E,KAAAiD,GAAA4B,EAAA7E,IAAA6E,EAAA9E,OAAA,CAEA,aAAA2E,EAAA,CAEA/D,EAAAnF,QAAAsJ,KAAA/F,EAAAtD,EAAAsJ,OAAAhG,EAAAwB,YAAA1D,IACA8H,GAAA,EACA,MACM,iBAAAD,EAAA,CAEN/D,EAAArE,QAAAwI,KAAA/F,EAAAtD,EAAAsJ,OAAAhG,EAAAwB,YAAA1D,IACA8H,GAAA,EACA,QAMA,OAAAA,KAIA,SAAAK,EAAAjJ,EAAAkJ,GACA,IAAA/J,EAAA,IAAAmD,GACAuC,IAAA7E,EAAA6E,IACAN,QAAA2E,EACAlJ,UAGAvB,EAAA0K,UAAAnJ,EAAAb,EAAA+J,GACAzK,EAAA2K,OAAApJ,EAAAb,GACAa,EAAAb,SAGAkK,EAAAC,SACAnH,GAAA,SASAoH,SAAAjH,EAEAkH,WAAA,SAAAxJ,GACA,IAAAkJ,EAAAlJ,EAAAuE,QAAApF,OAEA+J,GACAD,EAAAjJ,EAAAkJ,IAIAtG,aAAA,SAAA5C,GACA,IAAAkJ,EAAAlJ,EAAAuE,QAAApF,OACAA,EAAAa,EAAAb,OAEA+J,GACA1K,EAAAiL,QAAAP,EAAA7K,EAAA0G,OAAA5F,QAEAA,GACAV,EAAA0K,UAAAnJ,EAAAb,EAAA+J,GACA/J,EAAAoF,QAAA2E,GAEAD,EAAAjJ,EAAAkJ,IAEG/J,IACHV,EAAAiL,UAAA1J,EAAAb,UACAa,EAAAb,SAIAwK,WAAA,SAAA3J,EAAAN,GACA,IAAAP,EAAAa,EAAAb,OACAA,GACAA,EAAAuJ,YAAAhJ,0CC1jBA,IAAAlB,EAAcF,EAAQ,QAMtB+K,EAAAC,SASAM,aAAA,SAAAC,EAAAC,GACA,IAAAC,GAAA,GAAAF,GAAAG,MAAA,wCACA,IAAAD,GAAA,WAAAA,EAAA,GACA,WAAAD,EAKA,OAFAD,GAAAE,EAAA,GAEAA,EAAA,IACA,SACA,OAAAF,EACA,QACAA,GAAA,IACA,MACA,QACA,MAGA,OAAAC,EAAAD,GAUAI,UAAA,SAAAJ,GACA,IAAAK,EAAAC,EAAAC,EAAAC,EAWA,OATA7L,EAAA8L,SAAAT,IACAK,GAAAL,EAAA5F,KAAA,EACAkG,GAAAN,EAAA9F,OAAA,EACAqG,GAAAP,EAAA3F,QAAA,EACAmG,GAAAR,EAAA/F,MAAA,GAEAoG,EAAAC,EAAAC,EAAAC,GAAAR,GAAA,GAIA5F,IAAAiG,EACAnG,MAAAoG,EACAjG,OAAAkG,EACAtG,KAAAuG,EACArG,OAAAkG,EAAAE,EACAvG,MAAAwG,EAAAF,IAaAI,QAAA,SAAAC,EAAAC,EAAA7K,GACA,IAAAkB,EAAA4J,EAAAb,EAEA,IAAA/I,EAAA,EAAA4J,EAAAF,EAAApI,OAAmCtB,EAAA4J,IAAU5J,EAE7C,GADA+I,EAAAW,EAAA1J,QACA6J,IAAAd,SAGAc,IAAAF,GAAA,oBAAAZ,IACAA,IAAAY,SAEAE,IAAA/K,GAAApB,EAAAmC,QAAAkJ,KACAA,IAAAjK,SAEA+K,IAAAd,GACA,OAAAA,yCCzFA,IAAAtL,EAAcD,EAAQ,QAEtBgL,EAAAD,EAAAC,QAAA/K,EAAAgE,QACAvC,MAAA,KACA4K,YAAA,EACAC,SAAA,GACAC,OAAA,GACAC,OAAA,KAEAC,oBAAA,KACAC,oBAAA,OAWAC,OAAAC,eAAA7B,EAAA8B,UAAA,mBACAC,IAAA,WACA,OAAAtL,QAUAmL,OAAAC,eAAA7B,EAAA8B,UAAA,iBACAC,IAAA,WACA,OAAAtL,KAAAC,OAEAsL,IAAA,SAAAzB,GACA9J,KAAAC,MAAA6J,0CCtCA,IAAArL,EAAcF,EAAQ,QAEtB+K,EAAAC,SAIApK,KAAA,SAAAqM,EAAAC,GACA,OAAAhN,EAAAiN,MAAA1L,KAAAwL,KAAAxL,KAAAwL,OAAuDC,0CCPvD,IAAAE,EAAepN,EAAQ,QACvB+K,EAAAC,QAAA,WACA,IAAAqC,EAAAD,EAAA3L,MACA6L,EAAA,GAMA,OALAD,EAAA5G,SAAA6G,GAAA,KACAD,EAAAE,aAAAD,GAAA,KACAD,EAAAG,YAAAF,GAAA,KACAD,EAAAI,UAAAH,GAAA,KACAD,EAAAK,SAAAJ,GAAA,KACAA,iECTA,IAAAvN,EAAeC,EAAQ,QACvBoI,EAAepI,EAAQ,QACvBE,EAAcF,EAAQ,QAEtBD,EAAAa,KAAA,QACA+M,WAAA,EACAC,UAAA,EAEAC,OACAC,KAAA,SAGAC,QACAC,QACA3D,KAAA,WACAxG,GAAA,aAEAoK,QACA5D,KAAA,SACAxG,GAAA,gBAKAkH,EAAAC,QAAA,SAAAkD,GAEA,SAAAC,EAAA5L,EAAA0D,GACA,OAAA/F,EAAAwG,eAAAnE,EAAA6L,SAAAnI,EAAA0H,WAGAO,EAAAG,YAAAhG,KAAA6F,EAAAI,kBAAArK,QAEAsK,mBAAAnG,EAAAoG,KAEAC,gBAAArG,EAAAsG,MAEA1M,OAAA,SAAA2M,GACA,IAOAnM,EAAA4J,EAAAwC,EAPAlK,EAAAjD,KACAE,EAAA+C,EAAAmK,UACAxG,EAAA1G,EAAAY,QACAuM,EAAAnN,EAAAG,SACAmE,EAAAvB,EAAAhD,MAAAuE,QACA8I,EAAA9I,EAAAmC,SAAAC,KACA2G,EAAAtK,EAAAuK,cAAAtN,EAAAuN,SAEA3M,EAAAmC,EAAAyK,aACAf,EAAAD,EAAA5L,EAAA0D,GAwCA,IArCAmI,IACAQ,EAAAvG,EAAAuG,gBAGAvC,IAAA9J,EAAA6M,cAAA/C,IAAA9J,EAAA8M,cACA9M,EAAA8M,YAAA9M,EAAA6M,SAIA/G,EAAAiH,OAAAN,EACA3G,EAAAkH,cAAA7K,EAAApD,MAEA+G,EAAAmH,UAAAV,EAEAzG,EAAAoH,QAKA7B,SAAArL,EAAAqL,SAAArL,EAAAqL,SAAA3H,EAAA2H,SACAwB,QAAAR,EAAAQ,QAAAR,EAAAQ,QAAAlP,EAAAwG,eAAAnE,EAAA8M,YAAAN,EAAAK,SACAxM,gBAAAgM,EAAAhM,gBAAAgM,EAAAhM,gBAAAL,EAAAK,iBAAAmM,EAAAnM,gBACAW,YAAAqL,EAAArL,YAAAqL,EAAArL,YAAAhB,EAAAgB,aAAAwL,EAAAxL,YACAE,YAAAmL,EAAAnL,YAAAmL,EAAAnL,YAAAlB,EAAAkB,aAAAsL,EAAAtL,YACAV,eAAA6L,EAAA7L,eAAA6L,EAAA7L,eAAAR,EAAAQ,gBAAAgM,EAAAhM,eACAE,WAAA2L,EAAA3L,WAAA2L,EAAA3L,WAAAV,EAAAU,YAAA8L,EAAA9L,WACAE,iBAAAyL,EAAAzL,iBAAAyL,EAAAzL,iBAAAZ,EAAAY,kBAAA4L,EAAA5L,iBACAE,gBAAAuL,EAAAvL,gBAAAuL,EAAAvL,gBAAAd,EAAAc,iBAAA0L,EAAA1L,gBACAqM,KAAAd,EAAAc,KAAAd,EAAAc,UAAArD,IAAA9J,EAAAmN,KAAAnN,EAAAmN,KAAAX,EAAAW,KACAC,YAAAf,EAAAe,YAAAf,EAAAe,YAAAzP,EAAAwG,eAAAnE,EAAAoN,YAAAZ,EAAAa,SACAC,uBAAAjB,EAAAiB,uBAAAjB,EAAAiB,uBAAA3P,EAAAwG,eAAAnE,EAAAsN,uBAAAd,EAAAc,yBAGAxH,EAAAyH,SAIAtN,EAAA,EAAA4J,EAAA0C,EAAAhL,OAAoCtB,EAAA4J,IAAU5J,EAC9CkC,EAAAqL,cAAAjB,EAAAtM,KAAAmM,GAQA,IALAP,GAAA,IAAA/F,EAAAoH,OAAAL,SACA1K,EAAAsL,4BAIAxN,EAAA,EAAA4J,EAAA0C,EAAAhL,OAAoCtB,EAAA4J,IAAU5J,EAC9CsM,EAAAtM,GAAAsN,SAIAG,wBAAA,SAAAC,EAAA5O,GACA,IAAAsB,EAAAnB,KAAAC,MAAAuE,QAAAmC,SAAA8H,MAAAtN,gBACAL,EAAAd,KAAA0N,aACAP,EAAAsB,EAAAtB,WAUA,OARAA,EAAAhM,gBACAA,EAAAgM,EAAAhM,gBACIL,EAAA4N,qBACJvN,EAAA1C,EAAAkQ,sBAAA7N,EAAA4N,qBAAA7O,EAAAsB,GACIL,EAAAK,kBACJA,EAAAL,EAAAK,iBAGAA,GAGAyN,oBAAA,SAAAH,EAAA5O,GACA,IAAAmC,EAAAhC,KAAAC,MAAAuE,QAAAmC,SAAA8H,MAAAzM,YACAlB,EAAAd,KAAA0N,aACAP,EAAAsB,EAAAtB,WAUA,OARAA,EAAAnL,YACAA,EAAAmL,EAAAnL,YACIlB,EAAA+N,iBACJ7M,EAAAvD,EAAAkQ,sBAAA7N,EAAA+N,iBAAAhP,EAAAmC,GACIlB,EAAAkB,cACJA,EAAAlB,EAAAkB,aAGAA,GAGA8M,oBAAA,SAAAL,EAAA5O,GACA,IAAAiC,EAAA9B,KAAAC,MAAAuE,QAAAmC,SAAA8H,MAAA3M,YACAhB,EAAAd,KAAA0N,aACAP,EAAAsB,EAAAtB,WAUA,OARA/F,MAAA+F,EAAArL,cAEIsF,MAAAtG,EAAAiO,mBAAAtQ,EAAAmC,QAAAE,EAAAiO,kBACJjN,EAAArD,EAAAkQ,sBAAA7N,EAAAiO,iBAAAlP,EAAAiC,GACIsF,MAAAtG,EAAAgB,eACJA,EAAAhB,EAAAgB,aAJAA,EAAAqL,EAAArL,YAOAA,GAGAkN,iBAAA,SAAAP,EAAA5O,GACA,IAAAoP,EAAAjP,KAAAC,MAAAuE,QAAAmC,SAAA8H,MAAAS,SACApO,EAAAd,KAAA0N,aACAP,EAAAsB,EAAAtB,WAOA,OALA/F,MAAA+F,EAAA+B,UAEI9H,MAAAtG,EAAAmO,iBAAAxQ,EAAAmC,QAAAE,EAAAmO,iBACJA,EAAAxQ,EAAAkQ,sBAAA7N,EAAAmO,cAAApP,EAAAoP,IAFAA,EAAA9B,EAAA+B,SAIAD,GAGAX,cAAA,SAAAG,EAAA5O,EAAAqN,GACA,IASAhG,EAAAC,EATAlE,EAAAjD,KACAE,EAAA+C,EAAAmK,UACAD,EAAAsB,EAAAtB,WACArM,EAAAmC,EAAAyK,aACA5N,EAAAmD,EAAApD,MACAiK,EAAAhJ,EAAAT,KAAAR,GACAsP,EAAAlM,EAAAuK,cAAAtN,EAAAuN,SACA2B,EAAAnM,EAAAuK,cAAAtN,EAAAmP,SACAC,EAAArM,EAAAhD,MAAAuE,QAAAmC,SAAA8H,WAIA7D,IAAA9J,EAAA2G,aAAAmD,IAAA9J,EAAAyO,cACAzO,EAAAyO,YAAAzO,EAAA2G,aAEAmD,IAAA9J,EAAA0O,gBAAA5E,IAAA9J,EAAA2O,iBACA3O,EAAA2O,eAAA3O,EAAA0O,WAGAtI,EAAAkI,EAAAM,iBAAA,kBAAA5F,IAAA6F,IAAA9P,EAAAC,GACAqH,EAAA+F,EAAAiC,EAAAS,eAAA3M,EAAA4M,gBAAA/F,EAAAjK,EAAAC,GAGA2O,EAAAqB,QAAAV,EACAX,EAAAsB,QAAAZ,EACAV,EAAAX,cAAAhO,EACA2O,EAAAuB,OAAAnQ,EAGA4O,EAAAT,QACA9G,IACAC,IACA8I,KAAA9C,EAAA8C,MAAA7I,MAAAF,IAAAE,MAAAD,GAEAM,OAAA0F,EAAA1F,QAAAhJ,EAAAkQ,sBAAA7N,EAAAyO,YAAA1P,EAAAyP,EAAA7H,QACAxF,WAAAkL,EAAAlL,YAAAxD,EAAAkQ,sBAAA7N,EAAAmB,WAAApC,EAAAyP,EAAArN,YACAiN,SAAAjM,EAAA+L,iBAAAP,EAAA5O,GACAsB,gBAAA8B,EAAAuL,wBAAAC,EAAA5O,GACAmC,YAAAiB,EAAA2L,oBAAAH,EAAA5O,GACAiC,YAAAmB,EAAA6L,oBAAAL,EAAA5O,GACA8N,QAAAzN,EAAAY,QAAAkN,OAAA9N,EAAAY,QAAAkN,OAAAL,QAAA,EACAO,cAAAhO,EAAAY,QAAAkN,QAAA9N,EAAAY,QAAAkN,OAAAE,YAEAsB,UAAArC,EAAAqC,WAAA/Q,EAAAkQ,sBAAA7N,EAAA2O,eAAA5P,EAAAyP,EAAAE,aAIAK,gBAAA,SAAA/F,EAAAjK,EAAAC,GACA,IAMAiB,EAAAmP,EAAAC,EANAlN,EAAAjD,KACAC,EAAAgD,EAAAhD,MACAC,EAAA+C,EAAAmK,UACA+B,EAAAlM,EAAAuK,cAAAtN,EAAAuN,SACA2C,EAAA,EACAC,EAAA,EAGA,GAAAlB,EAAA3K,QAAA8L,QAAA,CACA,IAAAvP,EAAA,EAAeA,EAAAjB,EAAkBiB,IAGjC,GAFAmP,EAAAjQ,EAAAI,KAAAC,SAAAS,GACAoP,EAAAlQ,EAAAE,eAAAY,GACA,SAAAoP,EAAAvH,MAAAuH,EAAA1C,UAAA0B,EAAA/M,IAAAnC,EAAAmB,iBAAAL,GAAA,CACA,IAAAwP,EAAAC,OAAArB,EAAAsB,cAAAP,EAAA7P,KAAAR,KACA0Q,EAAA,EACAF,GAAAE,GAAA,EAEAH,GAAAG,GAAA,EAKA,IAAAG,EAAAF,OAAArB,EAAAsB,cAAA3G,IACA,OAAA4G,EAAA,EACAvB,EAAAO,iBAAAW,EAAAK,GAEAvB,EAAAO,iBAAAU,EAAAM,GAGA,OAAAvB,EAAAO,iBAAA5F,IAGAyE,0BAAA,WACA,IAIAxN,EAAA4J,EAAA8D,EAAAkC,EAAAC,EAJA3N,EAAAjD,KACAE,EAAA+C,EAAAmK,UACAyD,EAAA5N,EAAAhD,MAAA6Q,UACAzD,EAAAnN,EAAAG,SAUA,SAAA0Q,EAAAC,EAAAC,EAAAzK,GACA,OAAAxH,KAAAwH,IAAAxH,KAAAiS,IAAAD,EAAAxK,GAAAyK,GAGA,GAVA/Q,EAAAY,QAAAkN,OAAA7B,WACAkB,IAAA1I,OAAA,SAAAqM,GACA,OAAAA,EAAAhD,OAAAiC,QAQA,aAAA/P,EAAAY,QAAAkN,OAAAI,uBACA3P,EAAAyS,oBAAA7D,QAEA,IAAAtM,EAAA,EAAA4J,EAAA0C,EAAAhL,OAAqCtB,EAAA4J,IAAU5J,EAC/C0N,EAAApB,EAAAtM,GACA4P,EAAAlC,EAAAT,OACA4C,EAAAnS,EAAA0S,YACA1S,EAAA2S,aAAA/D,EAAAtM,GAAAiN,OACA2C,EACAlS,EAAA4S,SAAAhE,EAAAtM,GAAAiN,OACA9N,EAAAY,QAAAkN,OAAAL,SAEAgD,EAAAW,sBAAAV,EAAAW,SAAArK,EACAyJ,EAAAa,sBAAAZ,EAAAW,SAAApK,EACAwJ,EAAAc,kBAAAb,EAAAc,KAAAxK,EACAyJ,EAAAgB,kBAAAf,EAAAc,KAAAvK,EAIA,GAAAlE,EAAAhD,MAAAuE,QAAAmC,SAAAC,KAAAgL,gBACA,IAAA7Q,EAAA,EAAA4J,EAAA0C,EAAAhL,OAAqCtB,EAAA4J,IAAU5J,EAC/C4P,EAAAtD,EAAAtM,GAAAiN,OACA2C,EAAAW,sBAAAP,EAAAJ,EAAAW,sBAAAT,EAAA9M,KAAA8M,EAAA7M,OACA2M,EAAAa,sBAAAT,EAAAJ,EAAAa,sBAAAX,EAAA3M,IAAA2M,EAAA1M,QACAwM,EAAAc,kBAAAV,EAAAJ,EAAAc,kBAAAZ,EAAA9M,KAAA8M,EAAA7M,OACA2M,EAAAgB,kBAAAZ,EAAAJ,EAAAgB,kBAAAd,EAAA3M,IAAA2M,EAAA1M,SAKAsC,KAAA,WACA,IAMAoL,EANA5O,EAAAjD,KACAC,EAAAgD,EAAAhD,MACAC,EAAA+C,EAAAmK,UACAC,EAAAnN,EAAAG,SACAwQ,EAAA5Q,EAAA6Q,UACAnG,EAAA0C,EAAAhL,OAEAtB,EAAA,EAkBA,IAhBA2L,EAAAzJ,EAAAyK,aAAAzN,EAAAuE,WACAqN,GAAA3R,EAAAY,QAAAkN,OAAAlM,aAAA,KAEArD,EAAAoJ,OAAAiK,SAAA7R,EAAA6E,KACAf,KAAA8M,EAAA9M,KACAC,MAAA6M,EAAA7M,MACAE,IAAA2M,EAAA3M,IAAA2N,EACA1N,OAAA0M,EAAA1M,OAAA0N,IAGA3R,EAAAY,QAAA2F,OAEAhI,EAAAoJ,OAAAkK,WAAA9R,EAAA6E,MAIS/D,EAAA4J,IAAU5J,EACnBsM,EAAAtM,GAAA0F,KAAAoK,IAIAmB,cAAA,SAAAC,GAEA,IAAAnR,EAAAd,KAAAC,MAAAI,KAAAC,SAAA2R,EAAAnE,eACAjO,EAAAoS,EAAAjC,OACA7C,EAAA8E,EAAA9E,WACAwD,EAAAsB,EAAAjE,OAEAiE,EAAAC,gBACA/Q,gBAAAwP,EAAAxP,gBACAa,YAAA2O,EAAA3O,YACAF,YAAA6O,EAAA7O,YACA2F,OAAAkJ,EAAAlJ,QAGAkJ,EAAAxP,gBAAAgM,EAAAgF,sBAAA1T,EAAAkQ,sBAAA7N,EAAAsR,0BAAAvS,EAAApB,EAAA4T,cAAA1B,EAAAxP,kBACAwP,EAAA3O,YAAAmL,EAAAmF,kBAAA7T,EAAAkQ,sBAAA7N,EAAAyR,sBAAA1S,EAAApB,EAAA4T,cAAA1B,EAAA3O,cACA2O,EAAA7O,YAAAqL,EAAAqF,kBAAA/T,EAAAkQ,sBAAA7N,EAAA2R,sBAAA5S,EAAA8Q,EAAA7O,aACA6O,EAAAlJ,OAAA0F,EAAAuF,aAAAjU,EAAAkQ,sBAAA7N,EAAA6R,iBAAA9S,EAAAG,KAAAC,MAAAuE,QAAAmC,SAAA8H,MAAAiE,uCC/UApJ,EAAAC,SACAqJ,eAAA,SAAAhO,GAMA,OALAA,KAAAiD,SAEAjD,IAAAiD,QAGAjD,KAAAiO,WAAA,mDCXA,IAAAC,EAAWvU,EAAQ,QACnBwU,EAAexU,EAAQ,QACvByU,EAAYzU,EAAQ,QACpB0U,EAAc1U,EAAQ,QACtB2U,EAAU3U,EAAQ,QAElB+K,EAAAC,QAAA,SAAA4J,EAAA9Q,EAAA+Q,GACA,IAAAC,EAAAH,EAAAC,GACAG,EAAAF,EAAAH,EAAAI,EAAA,GAAAF,IACAI,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAN,EAAA,WACA,IAAAS,KAEA,OADAA,EAAAJ,GAAA,WAA6B,UAC7B,MAAAF,GAAAM,OAEAV,EAAAW,OAAArI,UAAA8H,EAAAI,GACAT,EAAAa,OAAAtI,UAAAgI,EAAA,GAAAhR,EAGA,SAAAuR,EAAAC,GAAgC,OAAAL,EAAAxK,KAAA4K,EAAA5T,KAAA6T,IAGhC,SAAAD,GAA2B,OAAAJ,EAAAxK,KAAA4K,EAAA5T,6CCtB3B,IAAAvB,EAAcF,EAAQ,QAEtB+K,EAAAC,QAAA,SAAAkD,GAEA,IAAAqH,GAAA,yCAOA,SAAAC,EAAAC,EAAAC,GACAD,EAAAE,SACAF,EAAAE,SAAAC,UAAAhS,KAAA8R,IAIA9I,OAAAC,eAAA4I,EAAA,YACAI,cAAA,EACAC,YAAA,EACAvK,OACAqK,WAAAF,MAIAH,EAAAQ,QAAA,SAAAC,GACA,IAAAC,EAAA,SAAAD,EAAAE,OAAA,GAAAC,cAAAH,EAAAI,MAAA,GACAC,EAAAZ,EAAAO,GAEApJ,OAAAC,eAAA4I,EAAAO,GACAH,cAAA,EACAC,YAAA,EACAvK,MAAA,WACA,IAAA+K,EAAAC,MAAAzJ,UAAAsJ,MAAA3L,KAAA+L,WACAC,EAAAJ,EAAAK,MAAAjV,KAAA6U,GAQA,OANApW,EAAAsH,KAAAiO,EAAAE,SAAAC,UAAA,SAAAe,GACA,oBAAAA,EAAAV,IACAU,EAAAV,GAAAS,MAAAC,EAAAL,KAIAG,QAUA,SAAAG,EAAAnB,EAAAC,GACA,IAAAmB,EAAApB,EAAAE,SACA,GAAAkB,EAAA,CAIA,IAAAjB,EAAAiB,EAAAjB,UACAtU,EAAAsU,EAAAkB,QAAApB,IACA,IAAApU,GACAsU,EAAAmB,OAAAzV,EAAA,GAGAsU,EAAA9R,OAAA,IAIAyR,EAAAQ,QAAA,SAAAC,UACAP,EAAAO,YAGAP,EAAAE,WAIAzH,EAAAI,kBAAA,SAAA5M,EAAAH,GACAE,KAAAyC,WAAAxC,EAAAH,IAGArB,EAAA+D,OAAAiK,EAAAI,kBAAAxB,WAMAyB,mBAAA,KAMAE,gBAAA,KAEAvK,WAAA,SAAAxC,EAAAH,GACA,IAAAmD,EAAAjD,KACAiD,EAAAhD,QACAgD,EAAApD,MAAAC,EACAmD,EAAAsS,aACAtS,EAAAuS,eAGAC,YAAA,SAAA3V,GACAE,KAAAH,MAAAC,GAGAyV,WAAA,WACA,IAAAtS,EAAAjD,KACAE,EAAA+C,EAAAmK,UACAtM,EAAAmC,EAAAyK,aAEA,OAAAxN,EAAAmP,SAAAnP,EAAAmP,WAAApM,EAAAhD,MAAAqM,SACApM,EAAAmP,QAAAvO,EAAAuO,SAAApM,EAAAhD,MAAAuE,QAAA8H,OAAAC,MAAA,GAAAnK,IAEA,OAAAlC,EAAAuN,SAAAvN,EAAAuN,WAAAxK,EAAAhD,MAAAqM,SACApM,EAAAuN,QAAA3M,EAAA2M,SAAAxK,EAAAhD,MAAAuE,QAAA8H,OAAAE,MAAA,GAAApK,KAIAsL,WAAA,WACA,OAAA1N,KAAAC,MAAAI,KAAAC,SAAAN,KAAAH,QAGAuN,QAAA,WACA,OAAApN,KAAAC,MAAAE,eAAAH,KAAAH,QAGA2N,cAAA,SAAAkI,GACA,OAAA1V,KAAAC,MAAAqM,OAAAoJ,IAGAxI,MAAA,WACAlN,KAAAO,QAAA,IAMAoV,QAAA,WACA3V,KAAA4V,OACAT,EAAAnV,KAAA4V,MAAA5V,OAIA6V,kBAAA,WACA,IAAA5S,EAAAjD,KACA4I,EAAA3F,EAAA6J,mBACA,OAAAlE,GAAA,IAAAA,GACAkN,OAAA7S,EAAAhD,MACA6N,cAAA7K,EAAApD,SAIAkW,eAAA,SAAAlW,GACA,IAAAoD,EAAAjD,KACA4I,EAAA3F,EAAA+J,gBACA,OAAApE,GAAA,IAAAA,GACAkN,OAAA7S,EAAAhD,MACA6N,cAAA7K,EAAApD,MACAmQ,OAAAnQ,KAIA2V,YAAA,WACA,IAIAzU,EAAA4J,EAJA1H,EAAAjD,KACAE,EAAA+C,EAAAmK,UACA/M,EAAA4C,EAAAyK,aAAArN,SACA2V,EAAA9V,EAAAG,KAGA,IAAAU,EAAA,EAAA4J,EAAAtK,EAAAgC,OAAkCtB,EAAA4J,IAAU5J,EAC5CiV,EAAAjV,GAAAiV,EAAAjV,IAAAkC,EAAA8S,eAAAhV,GAGAb,EAAAY,QAAAZ,EAAAY,SAAAmC,EAAA4S,qBAGAI,mBAAA,SAAApW,GACA,IAAAoS,EAAAjS,KAAA+V,eAAAlW,GACAG,KAAAoN,UAAA/M,KAAAiV,OAAAzV,EAAA,EAAAoS,GACAjS,KAAAsO,cAAA2D,EAAApS,GAAA,IAGAqW,sBAAA,WACA,IAAAjT,EAAAjD,KACAc,EAAAmC,EAAAyK,aACArN,EAAAS,EAAAT,OAAAS,EAAAT,SAKA4C,EAAA2S,QAAAvV,IACA4C,EAAA2S,OAEAT,EAAAlS,EAAA2S,MAAA3S,GAGA8Q,EAAA1T,EAAA4C,GACAA,EAAA2S,MAAAvV,GAKA4C,EAAAkT,kBAGA5V,OAAA9B,EAAAE,KAEAyX,WAAA,SAAAC,GAMA,IALA,IAAAnW,EAAAF,KAAAoN,UACAzG,EAAAzG,EAAAG,SACAsK,EAAAhE,EAAAtE,OACAtB,EAAA,EAESA,EAAA4J,IAAU5J,EACnB4F,EAAA5F,GAAAqV,WAAAC,GAGAnW,EAAAY,SACAZ,EAAAY,QAAAsV,WAAAC,IAIA5P,KAAA,WACA,IAAAvG,EAAAF,KAAAoN,UACAzG,EAAAzG,EAAAG,SACAsK,EAAAhE,EAAAtE,OACAtB,EAAA,EAMA,IAJAb,EAAAY,SACAZ,EAAAY,QAAA2F,OAGS1F,EAAA4J,IAAU5J,EACnB4F,EAAA5F,GAAA0F,QAIA6P,iBAAA,SAAArE,GACAxT,EAAAiN,MAAAuG,EAAAjE,OAAAiE,EAAAC,2BACAD,EAAAC,gBAGAF,cAAA,SAAAC,GACA,IAAAnR,EAAAd,KAAAC,MAAAI,KAAAC,SAAA2R,EAAAnE,eACAjO,EAAAoS,EAAAjC,OACA7C,EAAA8E,EAAA9E,WACAlI,EAAAxG,EAAAkQ,sBACA0D,EAAA5T,EAAA4T,cACA1B,EAAAsB,EAAAjE,OAEAiE,EAAAC,gBACA/Q,gBAAAwP,EAAAxP,gBACAa,YAAA2O,EAAA3O,YACAF,YAAA6O,EAAA7O,aAGA6O,EAAAxP,gBAAAgM,EAAAgF,qBAAAhF,EAAAgF,qBAAAlN,EAAAnE,EAAAqR,qBAAAtS,EAAAwS,EAAA1B,EAAAxP,kBACAwP,EAAA3O,YAAAmL,EAAAmF,iBAAAnF,EAAAmF,iBAAArN,EAAAnE,EAAAwR,iBAAAzS,EAAAwS,EAAA1B,EAAA3O,cACA2O,EAAA7O,YAAAqL,EAAAqF,iBAAArF,EAAAqF,iBAAAvN,EAAAnE,EAAA0R,iBAAA3S,EAAA8Q,EAAA7O,cAMAqU,eAAA,WACA,IAAAlT,EAAAjD,KACAE,EAAA+C,EAAAmK,UACA/M,EAAA4C,EAAAyK,aAAArN,KACAkW,EAAArW,EAAAG,KAAAgC,OACAmU,EAAAnW,EAAAgC,OAEAmU,EAAAD,EACArW,EAAAG,KAAAiV,OAAAkB,EAAAD,EAAAC,GACIA,EAAAD,GACJtT,EAAAwT,eAAAF,EAAAC,EAAAD,IAOAE,eAAA,SAAAC,EAAAC,GACA,QAAA5V,EAAA,EAAkBA,EAAA4V,IAAW5V,EAC7Bf,KAAAiW,mBAAAS,EAAA3V,IAOA6V,WAAA,WACA5W,KAAAyW,eAAAzW,KAAA0N,aAAArN,KAAAgC,OAAA,EAAA0S,UAAA1S,SAMAwU,UAAA,WACA7W,KAAAoN,UAAA/M,KAAAyW,OAMAC,YAAA,WACA/W,KAAAoN,UAAA/M,KAAA2W,SAMAC,aAAA,SAAAP,EAAAC,GACA3W,KAAAoN,UAAA/M,KAAAiV,OAAAoB,EAAAC,GACA3W,KAAAyW,eAAAC,EAAA3B,UAAA1S,OAAA,IAMA6U,cAAA,WACAlX,KAAAyW,eAAA,EAAA1B,UAAA1S,WAIAoK,EAAAI,kBAAArK,OAAA/D,EAAA0Y,+CCrUA,IAAAC,EAAY7Y,EAAQ,QACpBE,EAAcF,EAAQ,QAEtB,SAAA8Y,EAAAX,EAAAY,EAAA3G,EAAA4G,GACA,IACAxW,EAAA4J,EAAA4J,EAAAiD,EAAAC,EAAAC,EAAA9O,EAAA+O,EAAAC,EADAC,EAAA1M,OAAA0M,KAAAlH,GAGA,IAAA5P,EAAA,EAAA4J,EAAAkN,EAAAxV,OAAgCtB,EAAA4J,IAAU5J,EAa1C,GAZAwT,EAAAsD,EAAA9W,GAEA2W,EAAA/G,EAAA4D,GAIA+C,EAAAQ,eAAAvD,KACA+C,EAAA/C,GAAAmD,GAGAF,EAAAF,EAAA/C,GAEAiD,IAAAE,GAAA,MAAAnD,EAAA,IAYA,GARAmC,EAAAoB,eAAAvD,KACAmC,EAAAnC,GAAAiD,GAGAC,EAAAf,EAAAnC,GAEA3L,SAAA8O,EAEA9O,WAAA6O,EACA,cAAA7O,GAEA,GADA+O,EAAAP,EAAAK,GACAE,EAAAI,QACAH,EAAAR,EAAAM,GACAE,EAAAG,OAAA,CACAT,EAAA/C,GAAAqD,EAAAI,IAAAL,EAAAJ,GAAAU,YACA,eAGI,cAAArP,GAAAsP,SAAAT,IAAAS,SAAAR,GAAA,CACJJ,EAAA/C,GAAAkD,GAAAC,EAAAD,GAAAF,EACA,SAIAD,EAAA/C,GAAAmD,GAIA,IAAAlZ,EAAA,SAAA2Z,GACA1Z,EAAA+D,OAAAxC,KAAAmY,GACAnY,KAAAyC,WAAAwS,MAAAjV,KAAA+U,YAGAtW,EAAA+D,OAAAhE,EAAA6M,WAEA5I,WAAA,WACAzC,KAAAI,QAAA,GAGAiO,MAAA,WACA,IAAApL,EAAAjD,KAKA,OAJAiD,EAAAmV,QACAnV,EAAAmV,MAAA3Z,EAAA4Z,MAAApV,EAAA+K,SAEA/K,EAAAqV,UACArV,GAGAmT,WAAA,SAAAmB,GACA,IAAAtU,EAAAjD,KACA2Q,EAAA1N,EAAA+K,OACA0I,EAAAzT,EAAAqV,OACAhB,EAAArU,EAAAmV,MAGA,OAAAzH,GAAA,IAAA4G,GAMAD,IACAA,EAAArU,EAAAmV,UAGA1B,IACAA,EAAAzT,EAAAqV,WAGAjB,EAAAX,EAAAY,EAAA3G,EAAA4G,GAEAtU,IAfAA,EAAAmV,MAAAzH,EACA1N,EAAAqV,OAAA,KACArV,IAgBAsV,gBAAA,WACA,OACArR,EAAAlH,KAAAgO,OAAA9G,EACAC,EAAAnH,KAAAgO,OAAA7G,IAIAqR,SAAA,WACA,OAAA/Z,EAAAga,SAAAzY,KAAAgO,OAAA9G,IAAAzI,EAAAga,SAAAzY,KAAAgO,OAAA7G,MAIA3I,EAAAgE,OAAA/D,EAAA0Y,SAEA7N,EAAAC,QAAA/K,wBCxDA,SAAAka,EAAAC,GACA,IAMAC,EAAAC,EAAAvO,EANAF,EAAAuO,EAAA,OACAG,EAAAH,EAAA,OACAtO,EAAAsO,EAAA,OACA1H,EAAAjS,KAAAiS,IAAA7G,EAAA0O,EAAAzO,GACA7D,EAAAxH,KAAAwH,IAAA4D,EAAA0O,EAAAzO,GACA0O,EAAAvS,EAAAyK,EA0BA,OAvBAzK,GAAAyK,EACA2H,EAAA,EACAxO,GAAA5D,EACAoS,GAAAE,EAAAzO,GAAA0O,EACAD,GAAAtS,EACAoS,EAAA,GAAAvO,EAAAD,GAAA2O,EACA1O,GAAA7D,IACAoS,EAAA,GAAAxO,EAAA0O,GAAAC,GAEAH,EAAA5Z,KAAAiS,IAAA,GAAA2H,EAAA,KAEAA,EAAA,IACAA,GAAA,KAEAtO,GAAA2G,EAAAzK,GAAA,EAGAqS,EADArS,GAAAyK,EACA,EACA3G,GAAA,GACAyO,GAAAvS,EAAAyK,GAEA8H,GAAA,EAAAvS,EAAAyK,IAEA2H,EAAA,IAAAC,EAAA,IAAAvO,GAGA,SAAA0O,EAAAL,GACA,IAMAC,EAAAC,EAAAI,EANA7O,EAAAuO,EAAA,GACAG,EAAAH,EAAA,GACAtO,EAAAsO,EAAA,GACA1H,EAAAjS,KAAAiS,IAAA7G,EAAA0O,EAAAzO,GACA7D,EAAAxH,KAAAwH,IAAA4D,EAAA0O,EAAAzO,GACA0O,EAAAvS,EAAAyK,EAwBA,OApBA4H,EADA,GAAArS,EACA,EAEAuS,EAAAvS,EAAA,OAEAA,GAAAyK,EACA2H,EAAA,EACAxO,GAAA5D,EACAoS,GAAAE,EAAAzO,GAAA0O,EACAD,GAAAtS,EACAoS,EAAA,GAAAvO,EAAAD,GAAA2O,EACA1O,GAAA7D,IACAoS,EAAA,GAAAxO,EAAA0O,GAAAC,GAEAH,EAAA5Z,KAAAiS,IAAA,GAAA2H,EAAA,KAEAA,EAAA,IACAA,GAAA,KAEAK,EAAAzS,EAAA,YAEAoS,EAAAC,EAAAI,GAGA,SAAAC,EAAAP,GACA,IAAAvO,EAAAuO,EAAA,GACAG,EAAAH,EAAA,GACAtO,EAAAsO,EAAA,GACAC,EAAAF,EAAAC,GAAA,GACAQ,EAAA,MAAAna,KAAAiS,IAAA7G,EAAApL,KAAAiS,IAAA6H,EAAAzO,IACAA,EAAA,QAAArL,KAAAwH,IAAA4D,EAAApL,KAAAwH,IAAAsS,EAAAzO,IAEA,OAAAuO,EAAA,IAAAO,EAAA,IAAA9O,GAGA,SAAA+O,EAAAT,GACA,IAGAU,EAAAC,EAAAnS,EAAAoS,EAHAnP,EAAAuO,EAAA,OACAG,EAAAH,EAAA,OACAtO,EAAAsO,EAAA,OAOA,OAJAY,EAAAva,KAAAiS,IAAA,EAAA7G,EAAA,EAAA0O,EAAA,EAAAzO,GACAgP,GAAA,EAAAjP,EAAAmP,IAAA,EAAAA,IAAA,EACAD,GAAA,EAAAR,EAAAS,IAAA,EAAAA,IAAA,EACApS,GAAA,EAAAkD,EAAAkP,IAAA,EAAAA,IAAA,GACA,IAAAF,EAAA,IAAAC,EAAA,IAAAnS,EAAA,IAAAoS,GAGA,SAAAC,EAAAb,GACA,OAAAc,EAAAC,KAAAC,UAAAhB,IAGA,SAAAiB,EAAAjB,GACA,IAAAvO,EAAAuO,EAAA,OACAG,EAAAH,EAAA,OACAtO,EAAAsO,EAAA,OAGAvO,IAAA,OAAApL,KAAA6a,KAAAzP,EAAA,iBAAAA,EAAA,MACA0O,IAAA,OAAA9Z,KAAA6a,KAAAf,EAAA,iBAAAA,EAAA,MACAzO,IAAA,OAAArL,KAAA6a,KAAAxP,EAAA,iBAAAA,EAAA,MAEA,IAAAnD,EAAA,MAAAkD,EAAA,MAAA0O,EAAA,MAAAzO,EACAlD,EAAA,MAAAiD,EAAA,MAAA0O,EAAA,MAAAzO,EACAyP,EAAA,MAAA1P,EAAA,MAAA0O,EAAA,MAAAzO,EAEA,WAAAnD,EAAA,IAAAC,EAAA,IAAA2S,GAGA,SAAAC,EAAApB,GACA,IAIArO,EAAA0P,EAAA3P,EAJA4P,EAAAL,EAAAjB,GACAzR,EAAA+S,EAAA,GACA9S,EAAA8S,EAAA,GACAH,EAAAG,EAAA,GAeA,OAZA/S,GAAA,OACAC,GAAA,IACA2S,GAAA,QAEA5S,IAAA,QAAAlI,KAAA6a,IAAA3S,EAAA,WAAAA,EAAA,OACAC,IAAA,QAAAnI,KAAA6a,IAAA1S,EAAA,WAAAA,EAAA,OACA2S,IAAA,QAAA9a,KAAA6a,IAAAC,EAAA,WAAAA,EAAA,OAEAxP,EAAA,IAAAnD,EAAA,GACA6S,EAAA,KAAA9S,EAAAC,GACAkD,EAAA,KAAAlD,EAAA2S,IAEAxP,EAAA0P,EAAA3P,GAGA,SAAA6P,EAAArF,GACA,OAAAsF,EAAAJ,EAAAlF,IAGA,SAAAuF,EAAAC,GACA,IAGAC,EAAAC,EAAAC,EAAA7B,EAAA8B,EAHA7B,EAAAyB,EAAA,OACAxB,EAAAwB,EAAA,OACA/P,EAAA+P,EAAA,OAGA,MAAAxB,EAEA,OADA4B,EAAA,IAAAnQ,GACAmQ,OAIAF,EADAjQ,EAAA,GACAA,GAAA,EAAAuO,GAEAvO,EAAAuO,EAAAvO,EAAAuO,EACAyB,EAAA,EAAAhQ,EAAAiQ,EAEA5B,GAAA,OACA,QAAA5X,EAAA,EAAiBA,EAAA,EAAOA,IACxByZ,EAAA5B,EAAA,MAAA7X,EAAA,GACAyZ,EAAA,GAAAA,IACAA,EAAA,GAAAA,IAGAC,EADA,EAAAD,EAAA,EACAF,EAAA,GAAAC,EAAAD,GAAAE,EACA,EAAAA,EAAA,EACAD,EACA,EAAAC,EAAA,EACAF,GAAAC,EAAAD,IAAA,IAAAE,GAAA,EAEAF,EAEA3B,EAAA5X,GAAA,IAAA0Z,EAGA,OAAA9B,EAGA,SAAA+B,EAAAL,GACA,IAGAM,EAAA1B,EAHAL,EAAAyB,EAAA,GACAxB,EAAAwB,EAAA,OACA/P,EAAA+P,EAAA,OAGA,WAAA/P,GAGA,QAGAA,GAAA,EACAuO,GAAAvO,GAAA,EAAAA,EAAA,EAAAA,EACA2O,GAAA3O,EAAAuO,GAAA,EACA8B,EAAA,EAAA9B,GAAAvO,EAAAuO,IACAD,EAAA,IAAA+B,EAAA,IAAA1B,IAGA,SAAA2B,EAAA/F,GACA,OAAAqE,EAAAkB,EAAAvF,IAGA,SAAAgG,EAAAhG,GACA,OAAAuE,EAAAgB,EAAAvF,IAGA,SAAAiG,EAAAjG,GACA,OAAA2E,EAAAY,EAAAvF,IAIA,SAAAkG,EAAAC,GACA,IAAApC,EAAAoC,EAAA,MACAnC,EAAAmC,EAAA,OACA/B,EAAA+B,EAAA,OACAC,EAAAjc,KAAAkc,MAAAtC,GAAA,EAEAuC,EAAAvC,EAAA5Z,KAAAkc,MAAAtC,GACAwC,EAAA,IAAAnC,GAAA,EAAAJ,GACAwC,EAAA,IAAApC,GAAA,EAAAJ,EAAAsC,GACAhR,EAAA,IAAA8O,GAAA,EAAAJ,GAAA,EAAAsC,IACAlC,GAAA,IAEA,OAAAgC,GACA,OACA,OAAAhC,EAAA9O,EAAAiR,GACA,OACA,OAAAC,EAAApC,EAAAmC,GACA,OACA,OAAAA,EAAAnC,EAAA9O,GACA,OACA,OAAAiR,EAAAC,EAAApC,GACA,OACA,OAAA9O,EAAAiR,EAAAnC,GACA,OACA,OAAAA,EAAAmC,EAAAC,IAIA,SAAAC,EAAAN,GACA,IAGAO,EAAAjR,EAHAsO,EAAAoC,EAAA,GACAnC,EAAAmC,EAAA,OACA/B,EAAA+B,EAAA,OAQA,OALA1Q,GAAA,EAAAuO,GAAAI,EACAsC,EAAA1C,EAAAI,EACAsC,GAAAjR,GAAA,EAAAA,EAAA,EAAAA,EACAiR,KAAA,EACAjR,GAAA,GACAsO,EAAA,IAAA2C,EAAA,IAAAjR,GAGA,SAAAkR,EAAA3G,GACA,OAAAqE,EAAA6B,EAAAlG,IAGA,SAAA4G,EAAA5G,GACA,OAAAuE,EAAA2B,EAAAlG,IAGA,SAAA6G,EAAA7G,GACA,OAAA2E,EAAAuB,EAAAlG,IAIA,SAAA8G,EAAAC,GACA,IAIA7a,EAAAkY,EAAAkC,EAAAU,EAJAjD,EAAAgD,EAAA,OACAE,EAAAF,EAAA,OACAG,EAAAH,EAAA,OACAI,EAAAF,EAAAC,EAiBA,OAbAC,EAAA,IACAF,GAAAE,EACAD,GAAAC,GAGAjb,EAAA/B,KAAAkc,MAAA,EAAAtC,GACAK,EAAA,EAAA8C,EACAZ,EAAA,EAAAvC,EAAA7X,EACA,MAAAA,KACAoa,EAAA,EAAAA,GAEAU,EAAAC,EAAAX,GAAAlC,EAAA6C,GAEA/a,GACA,QACA,OACA,OAAAqJ,EAAA6O,EAAkBH,EAAA+C,EAAOxR,EAAAyR,EAAQ,MACjC,OAAA1R,EAAAyR,EAAkB/C,EAAAG,EAAO5O,EAAAyR,EAAQ,MACjC,OAAA1R,EAAA0R,EAAmBhD,EAAAG,EAAO5O,EAAAwR,EAAO,MACjC,OAAAzR,EAAA0R,EAAmBhD,EAAA+C,EAAOxR,EAAA4O,EAAO,MACjC,OAAA7O,EAAAyR,EAAkB/C,EAAAgD,EAAQzR,EAAA4O,EAAO,MACjC,OAAA7O,EAAA6O,EAAkBH,EAAAgD,EAAQzR,EAAAwR,EAAO,MAGjC,WAAAzR,EAAA,IAAA0O,EAAA,IAAAzO,GAGA,SAAA4R,EAAApH,GACA,OAAA6D,EAAAiD,EAAA9G,IAGA,SAAAqH,EAAArH,GACA,OAAAmE,EAAA2C,EAAA9G,IAGA,SAAAsH,EAAAtH,GACA,OAAAuE,EAAAuC,EAAA9G,IAGA,SAAAuH,EAAAvH,GACA,OAAA2E,EAAAmC,EAAA9G,IAGA,SAAAwH,EAAAC,GACA,IAIAlS,EAAA0O,EAAAzO,EAJAgP,EAAAiD,EAAA,OACAhD,EAAAgD,EAAA,OACAnV,EAAAmV,EAAA,OACA/C,EAAA+C,EAAA,OAMA,OAHAlS,EAAA,EAAApL,KAAAiS,IAAA,EAAAoI,GAAA,EAAAE,MACAT,EAAA,EAAA9Z,KAAAiS,IAAA,EAAAqI,GAAA,EAAAC,MACAlP,EAAA,EAAArL,KAAAiS,IAAA,EAAA9J,GAAA,EAAAoS,OACA,IAAAnP,EAAA,IAAA0O,EAAA,IAAAzO,GAGA,SAAAkS,EAAA1H,GACA,OAAA6D,EAAA2D,EAAAxH,IAGA,SAAA2H,EAAA3H,GACA,OAAAmE,EAAAqD,EAAAxH,IAGA,SAAA4H,EAAA5H,GACA,OAAAqE,EAAAmD,EAAAxH,IAGA,SAAA6H,EAAA7H,GACA,OAAA2E,EAAA6C,EAAAxH,IAIA,SAAA8H,EAAA1C,GACA,IAGA7P,EAAA0O,EAAAzO,EAHAnD,EAAA+S,EAAA,OACA9S,EAAA8S,EAAA,OACAH,EAAAG,EAAA,OAqBA,OAlBA7P,EAAA,OAAAlD,GAAA,OAAAC,GAAA,MAAA2S,EACAhB,GAAA,MAAA5R,EAAA,OAAAC,EAAA,MAAA2S,EACAzP,EAAA,MAAAnD,GAAA,KAAAC,EAAA,MAAA2S,EAGA1P,IAAA,eAAApL,KAAA6a,IAAAzP,EAAA,YACAA,GAAA,MAEA0O,IAAA,eAAA9Z,KAAA6a,IAAAf,EAAA,YACAA,GAAA,MAEAzO,IAAA,eAAArL,KAAA6a,IAAAxP,EAAA,YACAA,GAAA,MAEAD,EAAApL,KAAAiS,IAAAjS,KAAAwH,IAAA,EAAA4D,GAAA,GACA0O,EAAA9Z,KAAAiS,IAAAjS,KAAAwH,IAAA,EAAAsS,GAAA,GACAzO,EAAArL,KAAAiS,IAAAjS,KAAAwH,IAAA,EAAA6D,GAAA,IAEA,IAAAD,EAAA,IAAA0O,EAAA,IAAAzO,GAGA,SAAAuS,EAAA3C,GACA,IAGA3P,EAAA0P,EAAA3P,EAHAnD,EAAA+S,EAAA,GACA9S,EAAA8S,EAAA,GACAH,EAAAG,EAAA,GAeA,OAZA/S,GAAA,OACAC,GAAA,IACA2S,GAAA,QAEA5S,IAAA,QAAAlI,KAAA6a,IAAA3S,EAAA,WAAAA,EAAA,OACAC,IAAA,QAAAnI,KAAA6a,IAAA1S,EAAA,WAAAA,EAAA,OACA2S,IAAA,QAAA9a,KAAA6a,IAAAC,EAAA,WAAAA,EAAA,OAEAxP,EAAA,IAAAnD,EAAA,GACA6S,EAAA,KAAA9S,EAAAC,GACAkD,EAAA,KAAAlD,EAAA2S,IAEAxP,EAAA0P,EAAA3P,GAGA,SAAAwS,EAAAhI,GACA,OAAAsF,EAAAyC,EAAA/H,IAGA,SAAAiI,EAAAC,GACA,IAGA7V,EAAAC,EAAA2S,EAAAkD,EAHA1S,EAAAyS,EAAA,GACA/C,EAAA+C,EAAA,GACA1S,EAAA0S,EAAA,GAeA,OAZAzS,GAAA,GACAnD,EAAA,IAAAmD,EAAA,MACA0S,EAAA7V,EAAA,mBAEAA,EAAA,IAAAnI,KAAA6a,KAAAvP,EAAA,WACA0S,EAAAhe,KAAA6a,IAAA1S,EAAA,UAGAD,IAAA,gBAAAA,EAAA,QAAA8S,EAAA,IAAAgD,EAAA,qBAAAhe,KAAA6a,IAAAG,EAAA,IAAAgD,EAAA,GAEAlD,IAAA,iBAAAA,EAAA,SAAAkD,EAAA3S,EAAA,0BAAArL,KAAA6a,IAAAmD,EAAA3S,EAAA,QAEAnD,EAAAC,EAAA2S,GAGA,SAAAK,EAAA4C,GACA,IAGAE,EAAArE,EAAAS,EAHA/O,EAAAyS,EAAA,GACA/C,EAAA+C,EAAA,GACA1S,EAAA0S,EAAA,GASA,OANAE,EAAAje,KAAAke,MAAA7S,EAAA2P,GACApB,EAAA,IAAAqE,EAAA,EAAAje,KAAAme,GACAvE,EAAA,IACAA,GAAA,KAEAS,EAAAra,KAAAoe,KAAApD,IAAA3P,MACAC,EAAA+O,EAAAT,GAGA,SAAAyE,EAAAxI,GACA,OAAA8H,EAAAG,EAAAjI,IAGA,SAAAyI,EAAAC,GACA,IAGAvD,EAAA3P,EAAA4S,EAHA3S,EAAAiT,EAAA,GACAlE,EAAAkE,EAAA,GACA3E,EAAA2E,EAAA,GAMA,OAHAN,EAAArE,EAAA,MAAA5Z,KAAAme,GACAnD,EAAAX,EAAAra,KAAAwe,IAAAP,GACA5S,EAAAgP,EAAAra,KAAAye,IAAAR,IACA3S,EAAA0P,EAAA3P,GAGA,SAAAqT,EAAA7I,GACA,OAAAiI,EAAAQ,EAAAzI,IAGA,SAAA8I,EAAA9I,GACA,OAAAwI,EAAAC,EAAAzI,IAGA,SAAA+I,EAAAC,GACA,OAAAC,EAAAD,GAGA,SAAAE,EAAAlJ,GACA,OAAA6D,EAAAkF,EAAA/I,IAGA,SAAAmJ,EAAAnJ,GACA,OAAAmE,EAAA4E,EAAA/I,IAGA,SAAAoJ,EAAApJ,GACA,OAAAqE,EAAA0E,EAAA/I,IAGA,SAAAqJ,EAAArJ,GACA,OAAAuE,EAAAwE,EAAA/I,IAGA,SAAAsJ,EAAAtJ,GACA,OAAAkF,EAAA6D,EAAA/I,IAGA,SAAAuJ,EAAAvJ,GACA,OAAA+E,EAAAgE,EAAA/I,IA1hBAvL,EAAAC,SACAmP,UACAM,UACAE,UACAE,WACAI,cACAI,UACAG,UACAG,UAEAE,UACAM,UACAE,UACAC,WACAC,cAEAC,UACAO,UACAE,UACAC,WACAC,cAEAC,UACAM,UACAC,UACAC,WACAC,cAEAC,WACAE,WACAC,WACAC,WACAC,eAEAkB,cACAG,cACAC,cACAC,cACAC,eACAC,cACAC,cAEAzB,UACAC,UACAC,UAEAC,UACAO,UACAlD,UAEAmD,UACAI,UACAC,WAyeA,IAAAG,GACAO,WAAA,aACAC,cAAA,aACAC,MAAA,WACAC,YAAA,aACAC,OAAA,aACAC,OAAA,aACAC,QAAA,aACAC,OAAA,OACAC,gBAAA,aACAC,MAAA,SACAC,YAAA,YACAC,OAAA,WACAC,WAAA,aACAC,WAAA,YACAC,YAAA,WACAC,WAAA,YACAC,OAAA,YACAC,gBAAA,aACAC,UAAA,aACAC,SAAA,WACAC,MAAA,WACAC,UAAA,SACAC,UAAA,WACAC,eAAA,YACAC,UAAA,aACAC,WAAA,SACAC,UAAA,aACAC,WAAA,aACAC,aAAA,WACAC,gBAAA,WACAC,YAAA,WACAC,YAAA,YACAC,SAAA,SACAC,YAAA,aACAC,cAAA,aACAC,eAAA,WACAC,eAAA,UACAC,eAAA,UACAC,eAAA,WACAC,YAAA,WACAC,UAAA,YACAC,aAAA,WACAC,SAAA,aACAC,SAAA,aACAC,YAAA,YACAC,WAAA,WACAC,aAAA,aACAC,aAAA,WACAC,SAAA,WACAC,WAAA,aACAC,YAAA,aACAC,MAAA,WACAC,WAAA,YACAC,MAAA,aACAC,OAAA,SACAC,aAAA,YACAC,MAAA,aACAC,UAAA,aACAC,SAAA,aACAC,WAAA,WACAC,QAAA,UACAC,OAAA,aACAC,OAAA,aACAC,UAAA,aACAC,eAAA,aACAC,WAAA,WACAC,cAAA,aACAC,WAAA,aACAC,YAAA,aACAC,WAAA,aACAC,sBAAA,aACAC,WAAA,aACAC,YAAA,aACAC,WAAA,aACAC,WAAA,aACAC,aAAA,aACAC,eAAA,YACAC,cAAA,aACAC,gBAAA,aACAC,gBAAA,aACAC,gBAAA,aACAC,aAAA,aACAC,MAAA,SACAC,WAAA,WACAC,OAAA,aACAC,SAAA,WACAC,QAAA,SACAC,kBAAA,aACAC,YAAA,SACAC,cAAA,YACAC,cAAA,aACAC,gBAAA,Y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","file":"js/chunk-48787305.a89d0680.js","sourcesContent":["'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n\tlegend: {\n\t\tdisplay: true,\n\t\tposition: 'top',\n\t\tfullWidth: true,\n\t\treverse: false,\n\t\tweight: 1000,\n\n\t\t// a callback that will handle\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.datasetIndex;\n\t\t\tvar ci = this.chart;\n\t\t\tvar meta = ci.getDatasetMeta(index);\n\n\t\t\t// See controller.isDatasetVisible comment\n\t\t\tmeta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null;\n\n\t\t\t// We hid a dataset ... rerender the chart\n\t\t\tci.update();\n\t\t},\n\n\t\tonHover: null,\n\n\t\tlabels: {\n\t\t\tboxWidth: 40,\n\t\t\tpadding: 10,\n\t\t\t// Generates labels shown in the legend\n\t\t\t// Valid properties to return:\n\t\t\t// text : text to display\n\t\t\t// fillStyle : fill of coloured box\n\t\t\t// strokeStyle: stroke of coloured box\n\t\t\t// hidden : if this legend item refers to a hidden item\n\t\t\t// lineCap : cap style for line\n\t\t\t// lineDash\n\t\t\t// lineDashOffset :\n\t\t\t// lineJoin :\n\t\t\t// lineWidth :\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\treturn helpers.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttext: dataset.label,\n\t\t\t\t\t\tfillStyle: (!helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),\n\t\t\t\t\t\thidden: !chart.isDatasetVisible(i),\n\t\t\t\t\t\tlineCap: dataset.borderCapStyle,\n\t\t\t\t\t\tlineDash: dataset.borderDash,\n\t\t\t\t\t\tlineDashOffset: dataset.borderDashOffset,\n\t\t\t\t\t\tlineJoin: dataset.borderJoinStyle,\n\t\t\t\t\t\tlineWidth: dataset.borderWidth,\n\t\t\t\t\t\tstrokeStyle: dataset.borderColor,\n\t\t\t\t\t\tpointStyle: dataset.pointStyle,\n\n\t\t\t\t\t\t// Below is extra data used for toggling the datasets\n\t\t\t\t\t\tdatasetIndex: i\n\t\t\t\t\t};\n\t\t\t\t}, this) : [];\n\t\t\t}\n\t\t}\n\t},\n\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\t\tfor (var i = 0; i < chart.data.datasets.length; i++) {\n\t\t\ttext.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\t\t\tif (chart.data.datasets[i].label) {\n\t\t\t\ttext.push(chart.data.datasets[i].label);\n\t\t\t}\n\t\t\ttext.push('</li>');\n\t\t}\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t}\n});\n\n/**\n * Helper function to get the box width based on the usePointStyle option\n * @param labelopts {Object} the label options on the legend\n * @param fontSize {Number} the label font size\n * @return {Number} width of the color box area\n */\nfunction getBoxWidth(labelOpts, fontSize) {\n\treturn labelOpts.usePointStyle ?\n\t\tfontSize * Math.SQRT2 :\n\t\tlabelOpts.boxWidth;\n}\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Legend = Element.extend({\n\n\tinitialize: function(config) {\n\t\thelpers.extend(this, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tthis.legendHitBoxes = [];\n\n\t\t// Are we in doughnut mode which has a different data type\n\t\tthis.doughnutMode = false;\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\t// Any function defined here is inherited by all legend types.\n\t// Any function can be extended by the legend type\n\n\tbeforeUpdate: noop,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\t},\n\tafterUpdate: noop,\n\n\t//\n\n\tbeforeSetDimensions: noop,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop,\n\n\t//\n\n\tbeforeBuildLabels: noop,\n\tbuildLabels: function() {\n\t\tvar me = this;\n\t\tvar labelOpts = me.options.labels || {};\n\t\tvar legendItems = helpers.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n\t\tif (labelOpts.filter) {\n\t\t\tlegendItems = legendItems.filter(function(item) {\n\t\t\t\treturn labelOpts.filter(item, me.chart.data);\n\t\t\t});\n\t\t}\n\n\t\tif (me.options.reverse) {\n\t\t\tlegendItems.reverse();\n\t\t}\n\n\t\tme.legendItems = legendItems;\n\t},\n\tafterBuildLabels: noop,\n\n\t//\n\n\tbeforeFit: noop,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar display = opts.display;\n\n\t\tvar ctx = me.ctx;\n\n\t\tvar globalDefault = defaults.global;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n\t\tvar fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n\t\tvar fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n\t\tvar labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\n\t\t// Reset hit boxes\n\t\tvar hitboxes = me.legendHitBoxes = [];\n\n\t\tvar minSize = me.minSize;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tif (isHorizontal) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = display ? 10 : 0;\n\t\t} else {\n\t\t\tminSize.width = display ? 10 : 0;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\t// Increase sizes here\n\t\tif (display) {\n\t\t\tctx.font = labelFont;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\t// Labels\n\n\t\t\t\t// Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n\t\t\t\tvar lineWidths = me.lineWidths = [0];\n\t\t\t\tvar totalHeight = me.legendItems.length ? fontSize + (labelOpts.padding) : 0;\n\n\t\t\t\tctx.textAlign = 'left';\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar width = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\tif (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {\n\t\t\t\t\t\ttotalHeight += fontSize + (labelOpts.padding);\n\t\t\t\t\t\tlineWidths[lineWidths.length] = me.left;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: width,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\n\t\t\t\t\tlineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n\t\t\t\t});\n\n\t\t\t\tminSize.height += totalHeight;\n\n\t\t\t} else {\n\t\t\t\tvar vPadding = labelOpts.padding;\n\t\t\t\tvar columnWidths = me.columnWidths = [];\n\t\t\t\tvar totalWidth = labelOpts.padding;\n\t\t\t\tvar currentColWidth = 0;\n\t\t\t\tvar currentColHeight = 0;\n\t\t\t\tvar itemHeight = fontSize + vPadding;\n\n\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\t// If too tall, go to new column\n\t\t\t\t\tif (currentColHeight + itemHeight > minSize.height) {\n\t\t\t\t\t\ttotalWidth += currentColWidth + labelOpts.padding;\n\t\t\t\t\t\tcolumnWidths.push(currentColWidth); // previous column width\n\n\t\t\t\t\t\tcurrentColWidth = 0;\n\t\t\t\t\t\tcurrentColHeight = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Get max width\n\t\t\t\t\tcurrentColWidth = Math.max(currentColWidth, itemWidth);\n\t\t\t\t\tcurrentColHeight += itemHeight;\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: itemWidth,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\ttotalWidth += currentColWidth;\n\t\t\t\tcolumnWidths.push(currentColWidth);\n\t\t\t\tminSize.width += totalWidth;\n\t\t\t}\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\t},\n\tafterFit: noop,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t},\n\n\t// Actually draw the legend on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar globalDefault = defaults.global;\n\t\tvar lineDefault = globalDefault.elements.line;\n\t\tvar legendWidth = me.width;\n\t\tvar lineWidths = me.lineWidths;\n\n\t\tif (opts.display) {\n\t\t\tvar ctx = me.ctx;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\t\tvar fontColor = valueOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor);\n\t\t\tvar fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n\t\t\tvar fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n\t\t\tvar fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n\t\t\tvar labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\t\t\tvar cursor;\n\n\t\t\t// Canvas setup\n\t\t\tctx.textAlign = 'left';\n\t\t\tctx.textBaseline = 'middle';\n\t\t\tctx.lineWidth = 0.5;\n\t\t\tctx.strokeStyle = fontColor; // for strikethrough effect\n\t\t\tctx.fillStyle = fontColor; // render in correct colour\n\t\t\tctx.font = labelFont;\n\n\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\tvar hitboxes = me.legendHitBoxes;\n\n\t\t\t// current position\n\t\t\tvar drawLegendBox = function(x, y, legendItem) {\n\t\t\t\tif (isNaN(boxWidth) || boxWidth <= 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Set the ctx for the box\n\t\t\t\tctx.save();\n\n\t\t\t\tctx.fillStyle = valueOrDefault(legendItem.fillStyle, globalDefault.defaultColor);\n\t\t\t\tctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\n\t\t\t\tctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n\t\t\t\tctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\n\t\t\t\tctx.lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\n\t\t\t\tctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);\n\t\t\t\tvar isLineWidthZero = (valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0);\n\n\t\t\t\tif (ctx.setLineDash) {\n\t\t\t\t\t// IE 9 and 10 do not support line dash\n\t\t\t\t\tctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash));\n\t\t\t\t}\n\n\t\t\t\tif (opts.labels && opts.labels.usePointStyle) {\n\t\t\t\t\t// Recalculate x and y for drawPoint() because its expecting\n\t\t\t\t\t// x and y to be center of figure (instead of top left)\n\t\t\t\t\tvar radius = fontSize * Math.SQRT2 / 2;\n\t\t\t\t\tvar offSet = radius / Math.SQRT2;\n\t\t\t\t\tvar centerX = x + offSet;\n\t\t\t\t\tvar centerY = y + offSet;\n\n\t\t\t\t\t// Draw pointStyle as legend symbol\n\t\t\t\t\thelpers.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n\t\t\t\t} else {\n\t\t\t\t\t// Draw box as legend symbol\n\t\t\t\t\tif (!isLineWidthZero) {\n\t\t\t\t\t\tctx.strokeRect(x, y, boxWidth, fontSize);\n\t\t\t\t\t}\n\t\t\t\t\tctx.fillRect(x, y, boxWidth, fontSize);\n\t\t\t\t}\n\n\t\t\t\tctx.restore();\n\t\t\t};\n\t\t\tvar fillText = function(x, y, legendItem, textWidth) {\n\t\t\t\tvar halfFontSize = fontSize / 2;\n\t\t\t\tvar xLeft = boxWidth + halfFontSize + x;\n\t\t\t\tvar yMiddle = y + halfFontSize;\n\n\t\t\t\tctx.fillText(legendItem.text, xLeft, yMiddle);\n\n\t\t\t\tif (legendItem.hidden) {\n\t\t\t\t\t// Strikethrough the text if hidden\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.lineWidth = 2;\n\t\t\t\t\tctx.moveTo(xLeft, yMiddle);\n\t\t\t\t\tctx.lineTo(xLeft + textWidth, yMiddle);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Horizontal\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tif (isHorizontal) {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + ((legendWidth - lineWidths[0]) / 2),\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + labelOpts.padding,\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar itemHeight = fontSize + labelOpts.padding;\n\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\tvar textWidth = ctx.measureText(legendItem.text).width;\n\t\t\t\tvar width = boxWidth + (fontSize / 2) + textWidth;\n\t\t\t\tvar x = cursor.x;\n\t\t\t\tvar y = cursor.y;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tif (x + width >= legendWidth) {\n\t\t\t\t\t\ty = cursor.y += itemHeight;\n\t\t\t\t\t\tcursor.line++;\n\t\t\t\t\t\tx = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2);\n\t\t\t\t\t}\n\t\t\t\t} else if (y + itemHeight > me.bottom) {\n\t\t\t\t\tx = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n\t\t\t\t\ty = cursor.y = me.top + labelOpts.padding;\n\t\t\t\t\tcursor.line++;\n\t\t\t\t}\n\n\t\t\t\tdrawLegendBox(x, y, legendItem);\n\n\t\t\t\thitboxes[i].left = x;\n\t\t\t\thitboxes[i].top = y;\n\n\t\t\t\t// Fill the actual label\n\t\t\t\tfillText(x, y, legendItem, textWidth);\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tcursor.x += width + (labelOpts.padding);\n\t\t\t\t} else {\n\t\t\t\t\tcursor.y += itemHeight;\n\t\t\t\t}\n\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event - The event to handle\n\t * @return {Boolean} true if a change occured\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar type = e.type === 'mouseup' ? 'click' : e.type;\n\t\tvar changed = false;\n\n\t\tif (type === 'mousemove') {\n\t\t\tif (!opts.onHover) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else if (type === 'click') {\n\t\t\tif (!opts.onClick) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\n\t\t// Chart event already has relative position in it\n\t\tvar x = e.x;\n\t\tvar y = e.y;\n\n\t\tif (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n\t\t\t// See if we are touching one of the dataset boxes\n\t\t\tvar lh = me.legendHitBoxes;\n\t\t\tfor (var i = 0; i < lh.length; ++i) {\n\t\t\t\tvar hitBox = lh[i];\n\n\t\t\t\tif (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n\t\t\t\t\t// Touching an element\n\t\t\t\t\tif (type === 'click') {\n\t\t\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\t\t\topts.onClick.call(me, e.native, me.legendItems[i]);\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (type === 'mousemove') {\n\t\t\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\t\t\topts.onHover.call(me, e.native, me.legendItems[i]);\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn changed;\n\t}\n});\n\nfunction createNewLegendAndAttach(chart, legendOpts) {\n\tvar legend = new Legend({\n\t\tctx: chart.ctx,\n\t\toptions: legendOpts,\n\t\tchart: chart\n\t});\n\n\tlayouts.configure(chart, legend, legendOpts);\n\tlayouts.addBox(chart, legend);\n\tchart.legend = legend;\n}\n\nmodule.exports = {\n\tid: 'legend',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n\t * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Legend,\n\n\tbeforeInit: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\n\t\tif (legendOpts) {\n\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\t\tvar legend = chart.legend;\n\n\t\tif (legendOpts) {\n\t\t\thelpers.mergeIf(legendOpts, defaults.global.legend);\n\n\t\t\tif (legend) {\n\t\t\t\tlayouts.configure(chart, legend, legendOpts);\n\t\t\t\tlegend.options = legendOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t\t}\n\t\t} else if (legend) {\n\t\t\tlayouts.removeBox(chart, legend);\n\t\t\tdelete chart.legend;\n\t\t}\n\t},\n\n\tafterEvent: function(chart, e) {\n\t\tvar legend = chart.legend;\n\t\tif (legend) {\n\t\t\tlegend.handleEvent(e);\n\t\t}\n\t}\n};\n","'use strict';\n\nvar helpers = require('./helpers.core');\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\nmodule.exports = {\n\t/**\n\t * Converts the given line height `value` in pixels for a specific font `size`.\n\t * @param {Number|String} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n\t * @param {Number} size - The font size (in pixels) used to resolve relative `value`.\n\t * @returns {Number} The effective line height in pixels (size * 1.2 if value is invalid).\n\t * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n\t * @since 2.7.0\n\t */\n\ttoLineHeight: function(value, size) {\n\t\tvar matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\t\tif (!matches || matches[1] === 'normal') {\n\t\t\treturn size * 1.2;\n\t\t}\n\n\t\tvalue = +matches[2];\n\n\t\tswitch (matches[3]) {\n\t\tcase 'px':\n\t\t\treturn value;\n\t\tcase '%':\n\t\t\tvalue /= 100;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\n\t\treturn size * value;\n\t},\n\n\t/**\n\t * Converts the given value into a padding object with pre-computed width/height.\n\t * @param {Number|Object} value - If a number, set the value to all TRBL component,\n\t *  else, if and object, use defined properties and sets undefined ones to 0.\n\t * @returns {Object} The padding values (top, right, bottom, left, width, height)\n\t * @since 2.7.0\n\t */\n\ttoPadding: function(value) {\n\t\tvar t, r, b, l;\n\n\t\tif (helpers.isObject(value)) {\n\t\t\tt = +value.top || 0;\n\t\t\tr = +value.right || 0;\n\t\t\tb = +value.bottom || 0;\n\t\t\tl = +value.left || 0;\n\t\t} else {\n\t\t\tt = r = b = l = +value || 0;\n\t\t}\n\n\t\treturn {\n\t\t\ttop: t,\n\t\t\tright: r,\n\t\t\tbottom: b,\n\t\t\tleft: l,\n\t\t\theight: t + b,\n\t\t\twidth: l + r\n\t\t};\n\t},\n\n\t/**\n\t * Evaluates the given `inputs` sequentially and returns the first defined value.\n\t * @param {Array[]} inputs - An array of values, falling back to the last value.\n\t * @param {Object} [context] - If defined and the current value is a function, the value\n\t * is called with `context` as first argument and the result becomes the new input.\n\t * @param {Number} [index] - If defined and the current value is an array, the value\n\t * at `index` become the new input.\n\t * @since 2.7.0\n\t */\n\tresolve: function(inputs, context, index) {\n\t\tvar i, ilen, value;\n\n\t\tfor (i = 0, ilen = inputs.length; i < ilen; ++i) {\n\t\t\tvalue = inputs[i];\n\t\t\tif (value === undefined) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (context !== undefined && typeof value === 'function') {\n\t\t\t\tvalue = value(context);\n\t\t\t}\n\t\t\tif (index !== undefined && helpers.isArray(value)) {\n\t\t\t\tvalue = value[index];\n\t\t\t}\n\t\t\tif (value !== undefined) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t}\n\t}\n};\n","'use strict';\n\nvar Element = require('./core.element');\n\nvar exports = module.exports = Element.extend({\n\tchart: null, // the animation associated chart instance\n\tcurrentStep: 0, // the current animation step\n\tnumSteps: 60, // default number of steps\n\teasing: '', // the easing to use for this animation\n\trender: null, // render function used by the animation service\n\n\tonAnimationProgress: null, // user specified callback to fire on each step of the animation\n\tonAnimationComplete: null, // user specified callback to fire when the animation finishes\n});\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.Animation instead\n * @prop Chart.Animation#animationObject\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n */\nObject.defineProperty(exports.prototype, 'animationObject', {\n\tget: function() {\n\t\treturn this;\n\t}\n});\n\n/**\n * Provided for backward compatibility, use Chart.Animation#chart instead\n * @prop Chart.Animation#chartInstance\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n */\nObject.defineProperty(exports.prototype, 'chartInstance', {\n\tget: function() {\n\t\treturn this.chart;\n\t},\n\tset: function(value) {\n\t\tthis.chart = value;\n\t}\n});\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = {\n\t/**\n\t * @private\n\t */\n\t_set: function(scope, values) {\n\t\treturn helpers.merge(this[scope] || (this[scope] = {}), values);\n\t}\n};\n","'use strict';\n// 21.2.5.3 get RegExp.prototype.flags\nvar anObject = require('./_an-object');\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.unicode) result += 'u';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('line', {\n\tshowLines: true,\n\tspanGaps: false,\n\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\t\t\tid: 'x-axis-0'\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tfunction lineEnabled(dataset, options) {\n\t\treturn helpers.valueOrDefault(dataset.showLine, options.showLines);\n\t}\n\n\tChart.controllers.line = Chart.DatasetController.extend({\n\n\t\tdatasetElementType: elements.Line,\n\n\t\tdataElementType: elements.Point,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar line = meta.dataset;\n\t\t\tvar points = meta.data || [];\n\t\t\tvar options = me.chart.options;\n\t\t\tvar lineElementOptions = options.elements.line;\n\t\t\tvar scale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar i, ilen, custom;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar showLine = lineEnabled(dataset, options);\n\n\t\t\t// Update Line\n\t\t\tif (showLine) {\n\t\t\t\tcustom = line.custom || {};\n\n\t\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t\t}\n\n\t\t\t\t// Utility\n\t\t\t\tline._scale = scale;\n\t\t\t\tline._datasetIndex = me.index;\n\t\t\t\t// Data\n\t\t\t\tline._children = points;\n\t\t\t\t// Model\n\t\t\t\tline._model = {\n\t\t\t\t\t// Appearance\n\t\t\t\t\t// The default behavior of lines is to break at null values, according\n\t\t\t\t\t// to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n\t\t\t\t\t// This option gives lines the ability to span gaps\n\t\t\t\t\tspanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\n\t\t\t\t\tsteppedLine: custom.steppedLine ? custom.steppedLine : helpers.valueOrDefault(dataset.steppedLine, lineElementOptions.stepped),\n\t\t\t\t\tcubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.valueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode),\n\t\t\t\t};\n\n\t\t\t\tline.pivot();\n\t\t\t}\n\n\t\t\t// Update Points\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tme.updateElement(points[i], i, reset);\n\t\t\t}\n\n\t\t\tif (showLine && line._model.tension !== 0) {\n\t\t\t\tme.updateBezierControlPoints();\n\t\t\t}\n\n\t\t\t// Now pivot the point for animation\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tpoints[i].pivot();\n\t\t\t}\n\t\t},\n\n\t\tgetPointBackgroundColor: function(point, index) {\n\t\t\tvar backgroundColor = this.chart.options.elements.point.backgroundColor;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (custom.backgroundColor) {\n\t\t\t\tbackgroundColor = custom.backgroundColor;\n\t\t\t} else if (dataset.pointBackgroundColor) {\n\t\t\t\tbackgroundColor = helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\n\t\t\t} else if (dataset.backgroundColor) {\n\t\t\t\tbackgroundColor = dataset.backgroundColor;\n\t\t\t}\n\n\t\t\treturn backgroundColor;\n\t\t},\n\n\t\tgetPointBorderColor: function(point, index) {\n\t\t\tvar borderColor = this.chart.options.elements.point.borderColor;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (custom.borderColor) {\n\t\t\t\tborderColor = custom.borderColor;\n\t\t\t} else if (dataset.pointBorderColor) {\n\t\t\t\tborderColor = helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\n\t\t\t} else if (dataset.borderColor) {\n\t\t\t\tborderColor = dataset.borderColor;\n\t\t\t}\n\n\t\t\treturn borderColor;\n\t\t},\n\n\t\tgetPointBorderWidth: function(point, index) {\n\t\t\tvar borderWidth = this.chart.options.elements.point.borderWidth;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (!isNaN(custom.borderWidth)) {\n\t\t\t\tborderWidth = custom.borderWidth;\n\t\t\t} else if (!isNaN(dataset.pointBorderWidth) || helpers.isArray(dataset.pointBorderWidth)) {\n\t\t\t\tborderWidth = helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\n\t\t\t} else if (!isNaN(dataset.borderWidth)) {\n\t\t\t\tborderWidth = dataset.borderWidth;\n\t\t\t}\n\n\t\t\treturn borderWidth;\n\t\t},\n\n\t\tgetPointRotation: function(point, index) {\n\t\t\tvar pointRotation = this.chart.options.elements.point.rotation;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (!isNaN(custom.rotation)) {\n\t\t\t\tpointRotation = custom.rotation;\n\t\t\t} else if (!isNaN(dataset.pointRotation) || helpers.isArray(dataset.pointRotation)) {\n\t\t\t\tpointRotation = helpers.valueAtIndexOrDefault(dataset.pointRotation, index, pointRotation);\n\t\t\t}\n\t\t\treturn pointRotation;\n\t\t},\n\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar datasetIndex = me.index;\n\t\t\tvar value = dataset.data[index];\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar pointOptions = me.chart.options.elements.point;\n\t\t\tvar x, y;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\t\t\tif ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\n\t\t\t\tdataset.pointHitRadius = dataset.hitRadius;\n\t\t\t}\n\n\t\t\tx = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n\t\t\ty = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);\n\n\t\t\t// Utility\n\t\t\tpoint._xScale = xScale;\n\t\t\tpoint._yScale = yScale;\n\t\t\tpoint._datasetIndex = datasetIndex;\n\t\t\tpoint._index = index;\n\n\t\t\t// Desired view properties\n\t\t\tpoint._model = {\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t\t// Appearance\n\t\t\t\tradius: custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\n\t\t\t\tpointStyle: custom.pointStyle || helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\n\t\t\t\trotation: me.getPointRotation(point, index),\n\t\t\t\tbackgroundColor: me.getPointBackgroundColor(point, index),\n\t\t\t\tborderColor: me.getPointBorderColor(point, index),\n\t\t\t\tborderWidth: me.getPointBorderWidth(point, index),\n\t\t\t\ttension: meta.dataset._model ? meta.dataset._model.tension : 0,\n\t\t\t\tsteppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,\n\t\t\t\t// Tooltip\n\t\t\t\thitRadius: custom.hitRadius || helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\n\t\t\t};\n\t\t},\n\n\t\tcalculatePointY: function(value, index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar sumPos = 0;\n\t\t\tvar sumNeg = 0;\n\t\t\tvar i, ds, dsMeta;\n\n\t\t\tif (yScale.options.stacked) {\n\t\t\t\tfor (i = 0; i < datasetIndex; i++) {\n\t\t\t\t\tds = chart.data.datasets[i];\n\t\t\t\t\tdsMeta = chart.getDatasetMeta(i);\n\t\t\t\t\tif (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n\t\t\t\t\t\tvar stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\t\t\t\t\t\tif (stackedRightValue < 0) {\n\t\t\t\t\t\t\tsumNeg += stackedRightValue || 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsumPos += stackedRightValue || 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar rightValue = Number(yScale.getRightValue(value));\n\t\t\t\tif (rightValue < 0) {\n\t\t\t\t\treturn yScale.getPixelForValue(sumNeg + rightValue);\n\t\t\t\t}\n\t\t\t\treturn yScale.getPixelForValue(sumPos + rightValue);\n\t\t\t}\n\n\t\t\treturn yScale.getPixelForValue(value);\n\t\t},\n\n\t\tupdateBezierControlPoints: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar area = me.chart.chartArea;\n\t\t\tvar points = (meta.data || []);\n\t\t\tvar i, ilen, point, model, controlPoints;\n\n\t\t\t// Only consider points that are drawn in case the spanGaps option is used\n\t\t\tif (meta.dataset._model.spanGaps) {\n\t\t\t\tpoints = points.filter(function(pt) {\n\t\t\t\t\treturn !pt._model.skip;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction capControlPoint(pt, min, max) {\n\t\t\t\treturn Math.max(Math.min(pt, max), min);\n\t\t\t}\n\n\t\t\tif (meta.dataset._model.cubicInterpolationMode === 'monotone') {\n\t\t\t\thelpers.splineCurveMonotone(points);\n\t\t\t} else {\n\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\t\tpoint = points[i];\n\t\t\t\t\tmodel = point._model;\n\t\t\t\t\tcontrolPoints = helpers.splineCurve(\n\t\t\t\t\t\thelpers.previousItem(points, i)._model,\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\thelpers.nextItem(points, i)._model,\n\t\t\t\t\t\tmeta.dataset._model.tension\n\t\t\t\t\t);\n\t\t\t\t\tmodel.controlPointPreviousX = controlPoints.previous.x;\n\t\t\t\t\tmodel.controlPointPreviousY = controlPoints.previous.y;\n\t\t\t\t\tmodel.controlPointNextX = controlPoints.next.x;\n\t\t\t\t\tmodel.controlPointNextY = controlPoints.next.y;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (me.chart.options.elements.line.capBezierPoints) {\n\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\t\tmodel = points[i]._model;\n\t\t\t\t\tmodel.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n\t\t\t\t\tmodel.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n\t\t\t\t\tmodel.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n\t\t\t\t\tmodel.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar points = meta.data || [];\n\t\t\tvar area = chart.chartArea;\n\t\t\tvar ilen = points.length;\n\t\t\tvar halfBorderWidth;\n\t\t\tvar i = 0;\n\n\t\t\tif (lineEnabled(me.getDataset(), chart.options)) {\n\t\t\t\thalfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n\n\t\t\t\thelpers.canvas.clipArea(chart.ctx, {\n\t\t\t\t\tleft: area.left,\n\t\t\t\t\tright: area.right,\n\t\t\t\t\ttop: area.top - halfBorderWidth,\n\t\t\t\t\tbottom: area.bottom + halfBorderWidth\n\t\t\t\t});\n\n\t\t\t\tmeta.dataset.draw();\n\n\t\t\t\thelpers.canvas.unclipArea(chart.ctx);\n\t\t\t}\n\n\t\t\t// Draw the points\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\tpoints[i].draw(area);\n\t\t\t}\n\t\t},\n\n\t\tsetHoverStyle: function(element) {\n\t\t\t// Point\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex];\n\t\t\tvar index = element._index;\n\t\t\tvar custom = element.custom || {};\n\t\t\tvar model = element._model;\n\n\t\t\telement.$previousStyle = {\n\t\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\t\tborderColor: model.borderColor,\n\t\t\t\tborderWidth: model.borderWidth,\n\t\t\t\tradius: model.radius\n\t\t\t};\n\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n\t\t\tmodel.radius = custom.hoverRadius || helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n\t\t},\n\t});\n};\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nmodule.exports = {\n\tacquireContext: function(item) {\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\treturn item && item.getContext('2d') || null;\n\t}\n};\n","'use strict';\nvar hide = require('./_hide');\nvar redefine = require('./_redefine');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar wks = require('./_wks');\n\nmodule.exports = function (KEY, length, exec) {\n  var SYMBOL = wks(KEY);\n  var fns = exec(defined, SYMBOL, ''[KEY]);\n  var strfn = fns[0];\n  var rxfn = fns[1];\n  if (fails(function () {\n    var O = {};\n    O[SYMBOL] = function () { return 7; };\n    return ''[KEY](O) != 7;\n  })) {\n    redefine(String.prototype, KEY, strfn);\n    hide(RegExp.prototype, SYMBOL, length == 2\n      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)\n      // 21.2.5.11 RegExp.prototype[@@split](string, limit)\n      ? function (string, arg) { return rxfn.call(string, this, arg); }\n      // 21.2.5.6 RegExp.prototype[@@match](string)\n      // 21.2.5.9 RegExp.prototype[@@search](string)\n      : function (string) { return rxfn.call(string, this); }\n    );\n  }\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = function(Chart) {\n\n\tvar arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n\n\t/**\n\t * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n\t * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n\t * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n\t */\n\tfunction listenArrayEvents(array, listener) {\n\t\tif (array._chartjs) {\n\t\t\tarray._chartjs.listeners.push(listener);\n\t\t\treturn;\n\t\t}\n\n\t\tObject.defineProperty(array, '_chartjs', {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: {\n\t\t\t\tlisteners: [listener]\n\t\t\t}\n\t\t});\n\n\t\tarrayEvents.forEach(function(key) {\n\t\t\tvar method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n\t\t\tvar base = array[key];\n\n\t\t\tObject.defineProperty(array, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: function() {\n\t\t\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\t\t\t\tvar res = base.apply(this, args);\n\n\t\t\t\t\thelpers.each(array._chartjs.listeners, function(object) {\n\t\t\t\t\t\tif (typeof object[method] === 'function') {\n\t\t\t\t\t\t\tobject[method].apply(object, args);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\treturn res;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Removes the given array event listener and cleanup extra attached properties (such as\n\t * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n\t */\n\tfunction unlistenArrayEvents(array, listener) {\n\t\tvar stub = array._chartjs;\n\t\tif (!stub) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar listeners = stub.listeners;\n\t\tvar index = listeners.indexOf(listener);\n\t\tif (index !== -1) {\n\t\t\tlisteners.splice(index, 1);\n\t\t}\n\n\t\tif (listeners.length > 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tarrayEvents.forEach(function(key) {\n\t\t\tdelete array[key];\n\t\t});\n\n\t\tdelete array._chartjs;\n\t}\n\n\t// Base class for all dataset controllers (line, bar, etc)\n\tChart.DatasetController = function(chart, datasetIndex) {\n\t\tthis.initialize(chart, datasetIndex);\n\t};\n\n\thelpers.extend(Chart.DatasetController.prototype, {\n\n\t\t/**\n\t\t * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n\t\t * @type {Chart.core.element}\n\t\t */\n\t\tdatasetElementType: null,\n\n\t\t/**\n\t\t * Element type used to generate a meta data (e.g. Chart.element.Point).\n\t\t * @type {Chart.core.element}\n\t\t */\n\t\tdataElementType: null,\n\n\t\tinitialize: function(chart, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tme.chart = chart;\n\t\t\tme.index = datasetIndex;\n\t\t\tme.linkScales();\n\t\t\tme.addElements();\n\t\t},\n\n\t\tupdateIndex: function(datasetIndex) {\n\t\t\tthis.index = datasetIndex;\n\t\t},\n\n\t\tlinkScales: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar dataset = me.getDataset();\n\n\t\t\tif (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n\t\t\t\tmeta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n\t\t\t}\n\t\t\tif (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n\t\t\t\tmeta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n\t\t\t}\n\t\t},\n\n\t\tgetDataset: function() {\n\t\t\treturn this.chart.data.datasets[this.index];\n\t\t},\n\n\t\tgetMeta: function() {\n\t\t\treturn this.chart.getDatasetMeta(this.index);\n\t\t},\n\n\t\tgetScaleForId: function(scaleID) {\n\t\t\treturn this.chart.scales[scaleID];\n\t\t},\n\n\t\treset: function() {\n\t\t\tthis.update(true);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tdestroy: function() {\n\t\t\tif (this._data) {\n\t\t\t\tunlistenArrayEvents(this._data, this);\n\t\t\t}\n\t\t},\n\n\t\tcreateMetaDataset: function() {\n\t\t\tvar me = this;\n\t\t\tvar type = me.datasetElementType;\n\t\t\treturn type && new type({\n\t\t\t\t_chart: me.chart,\n\t\t\t\t_datasetIndex: me.index\n\t\t\t});\n\t\t},\n\n\t\tcreateMetaData: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar type = me.dataElementType;\n\t\t\treturn type && new type({\n\t\t\t\t_chart: me.chart,\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index\n\t\t\t});\n\t\t},\n\n\t\taddElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar data = me.getDataset().data || [];\n\t\t\tvar metaData = meta.data;\n\t\t\tvar i, ilen;\n\n\t\t\tfor (i = 0, ilen = data.length; i < ilen; ++i) {\n\t\t\t\tmetaData[i] = metaData[i] || me.createMetaData(i);\n\t\t\t}\n\n\t\t\tmeta.dataset = meta.dataset || me.createMetaDataset();\n\t\t},\n\n\t\taddElementAndReset: function(index) {\n\t\t\tvar element = this.createMetaData(index);\n\t\t\tthis.getMeta().data.splice(index, 0, element);\n\t\t\tthis.updateElement(element, index, true);\n\t\t},\n\n\t\tbuildOrUpdateElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar data = dataset.data || (dataset.data = []);\n\n\t\t\t// In order to correctly handle data addition/deletion animation (an thus simulate\n\t\t\t// real-time charts), we need to monitor these data modifications and synchronize\n\t\t\t// the internal meta data accordingly.\n\t\t\tif (me._data !== data) {\n\t\t\t\tif (me._data) {\n\t\t\t\t\t// This case happens when the user replaced the data array instance.\n\t\t\t\t\tunlistenArrayEvents(me._data, me);\n\t\t\t\t}\n\n\t\t\t\tlistenArrayEvents(data, me);\n\t\t\t\tme._data = data;\n\t\t\t}\n\n\t\t\t// Re-sync meta data in case the user replaced the data array or if we missed\n\t\t\t// any updates and so make sure that we handle number of datapoints changing.\n\t\t\tme.resyncElements();\n\t\t},\n\n\t\tupdate: helpers.noop,\n\n\t\ttransition: function(easingValue) {\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar elements = meta.data || [];\n\t\t\tvar ilen = elements.length;\n\t\t\tvar i = 0;\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\telements[i].transition(easingValue);\n\t\t\t}\n\n\t\t\tif (meta.dataset) {\n\t\t\t\tmeta.dataset.transition(easingValue);\n\t\t\t}\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar elements = meta.data || [];\n\t\t\tvar ilen = elements.length;\n\t\t\tvar i = 0;\n\n\t\t\tif (meta.dataset) {\n\t\t\t\tmeta.dataset.draw();\n\t\t\t}\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\telements[i].draw();\n\t\t\t}\n\t\t},\n\n\t\tremoveHoverStyle: function(element) {\n\t\t\thelpers.merge(element._model, element.$previousStyle || {});\n\t\t\tdelete element.$previousStyle;\n\t\t},\n\n\t\tsetHoverStyle: function(element) {\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex];\n\t\t\tvar index = element._index;\n\t\t\tvar custom = element.custom || {};\n\t\t\tvar valueOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\tvar getHoverColor = helpers.getHoverColor;\n\t\t\tvar model = element._model;\n\n\t\t\telement.$previousStyle = {\n\t\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\t\tborderColor: model.borderColor,\n\t\t\t\tborderWidth: model.borderWidth\n\t\t\t};\n\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tresyncElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar data = me.getDataset().data;\n\t\t\tvar numMeta = meta.data.length;\n\t\t\tvar numData = data.length;\n\n\t\t\tif (numData < numMeta) {\n\t\t\t\tmeta.data.splice(numData, numMeta - numData);\n\t\t\t} else if (numData > numMeta) {\n\t\t\t\tme.insertElements(numMeta, numData - numMeta);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tinsertElements: function(start, count) {\n\t\t\tfor (var i = 0; i < count; ++i) {\n\t\t\t\tthis.addElementAndReset(start + i);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataPush: function() {\n\t\t\tthis.insertElements(this.getDataset().data.length - 1, arguments.length);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataPop: function() {\n\t\t\tthis.getMeta().data.pop();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataShift: function() {\n\t\t\tthis.getMeta().data.shift();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataSplice: function(start, count) {\n\t\t\tthis.getMeta().data.splice(start, count);\n\t\t\tthis.insertElements(start, arguments.length - 2);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataUnshift: function() {\n\t\t\tthis.insertElements(0, arguments.length);\n\t\t}\n\t});\n\n\tChart.DatasetController.extend = helpers.inherits;\n};\n","'use strict';\n\nvar color = require('chartjs-color');\nvar helpers = require('../helpers/index');\n\nfunction interpolate(start, view, model, ease) {\n\tvar keys = Object.keys(model);\n\tvar i, ilen, key, actual, origin, target, type, c0, c1;\n\n\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\tkey = keys[i];\n\n\t\ttarget = model[key];\n\n\t\t// if a value is added to the model after pivot() has been called, the view\n\t\t// doesn't contain it, so let's initialize the view to the target value.\n\t\tif (!view.hasOwnProperty(key)) {\n\t\t\tview[key] = target;\n\t\t}\n\n\t\tactual = view[key];\n\n\t\tif (actual === target || key[0] === '_') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!start.hasOwnProperty(key)) {\n\t\t\tstart[key] = actual;\n\t\t}\n\n\t\torigin = start[key];\n\n\t\ttype = typeof target;\n\n\t\tif (type === typeof origin) {\n\t\t\tif (type === 'string') {\n\t\t\t\tc0 = color(origin);\n\t\t\t\tif (c0.valid) {\n\t\t\t\t\tc1 = color(target);\n\t\t\t\t\tif (c1.valid) {\n\t\t\t\t\t\tview[key] = c1.mix(c0, ease).rgbString();\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (type === 'number' && isFinite(origin) && isFinite(target)) {\n\t\t\t\tview[key] = origin + (target - origin) * ease;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tview[key] = target;\n\t}\n}\n\nvar Element = function(configuration) {\n\thelpers.extend(this, configuration);\n\tthis.initialize.apply(this, arguments);\n};\n\nhelpers.extend(Element.prototype, {\n\n\tinitialize: function() {\n\t\tthis.hidden = false;\n\t},\n\n\tpivot: function() {\n\t\tvar me = this;\n\t\tif (!me._view) {\n\t\t\tme._view = helpers.clone(me._model);\n\t\t}\n\t\tme._start = {};\n\t\treturn me;\n\t},\n\n\ttransition: function(ease) {\n\t\tvar me = this;\n\t\tvar model = me._model;\n\t\tvar start = me._start;\n\t\tvar view = me._view;\n\n\t\t// No animation -> No Transition\n\t\tif (!model || ease === 1) {\n\t\t\tme._view = model;\n\t\t\tme._start = null;\n\t\t\treturn me;\n\t\t}\n\n\t\tif (!view) {\n\t\t\tview = me._view = {};\n\t\t}\n\n\t\tif (!start) {\n\t\t\tstart = me._start = {};\n\t\t}\n\n\t\tinterpolate(start, view, model, ease);\n\n\t\treturn me;\n\t},\n\n\ttooltipPosition: function() {\n\t\treturn {\n\t\t\tx: this._model.x,\n\t\t\ty: this._model.y\n\t\t};\n\t},\n\n\thasValue: function() {\n\t\treturn helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\n\t}\n});\n\nElement.extend = helpers.inherits;\n\nmodule.exports = Element;\n","/* MIT license */\n\nmodule.exports = {\n  rgb2hsl: rgb2hsl,\n  rgb2hsv: rgb2hsv,\n  rgb2hwb: rgb2hwb,\n  rgb2cmyk: rgb2cmyk,\n  rgb2keyword: rgb2keyword,\n  rgb2xyz: rgb2xyz,\n  rgb2lab: rgb2lab,\n  rgb2lch: rgb2lch,\n\n  hsl2rgb: hsl2rgb,\n  hsl2hsv: hsl2hsv,\n  hsl2hwb: hsl2hwb,\n  hsl2cmyk: hsl2cmyk,\n  hsl2keyword: hsl2keyword,\n\n  hsv2rgb: hsv2rgb,\n  hsv2hsl: hsv2hsl,\n  hsv2hwb: hsv2hwb,\n  hsv2cmyk: hsv2cmyk,\n  hsv2keyword: hsv2keyword,\n\n  hwb2rgb: hwb2rgb,\n  hwb2hsl: hwb2hsl,\n  hwb2hsv: hwb2hsv,\n  hwb2cmyk: hwb2cmyk,\n  hwb2keyword: hwb2keyword,\n\n  cmyk2rgb: cmyk2rgb,\n  cmyk2hsl: cmyk2hsl,\n  cmyk2hsv: cmyk2hsv,\n  cmyk2hwb: cmyk2hwb,\n  cmyk2keyword: cmyk2keyword,\n\n  keyword2rgb: keyword2rgb,\n  keyword2hsl: keyword2hsl,\n  keyword2hsv: keyword2hsv,\n  keyword2hwb: keyword2hwb,\n  keyword2cmyk: keyword2cmyk,\n  keyword2lab: keyword2lab,\n  keyword2xyz: keyword2xyz,\n\n  xyz2rgb: xyz2rgb,\n  xyz2lab: xyz2lab,\n  xyz2lch: xyz2lch,\n\n  lab2xyz: lab2xyz,\n  lab2rgb: lab2rgb,\n  lab2lch: lab2lch,\n\n  lch2lab: lch2lab,\n  lch2xyz: lch2xyz,\n  lch2rgb: lch2rgb\n}\n\n\nfunction rgb2hsl(rgb) {\n  var r = rgb[0]/255,\n      g = rgb[1]/255,\n      b = rgb[2]/255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, l;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g)/ delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  l = (min + max) / 2;\n\n  if (max == min)\n    s = 0;\n  else if (l <= 0.5)\n    s = delta / (max + min);\n  else\n    s = delta / (2 - max - min);\n\n  return [h, s * 100, l * 100];\n}\n\nfunction rgb2hsv(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, v;\n\n  if (max == 0)\n    s = 0;\n  else\n    s = (delta/max * 1000)/10;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g) / delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  v = ((max / 255) * 1000) / 10;\n\n  return [h, s, v];\n}\n\nfunction rgb2hwb(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      h = rgb2hsl(rgb)[0],\n      w = 1/255 * Math.min(r, Math.min(g, b)),\n      b = 1 - 1/255 * Math.max(r, Math.max(g, b));\n\n  return [h, w * 100, b * 100];\n}\n\nfunction rgb2cmyk(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      c, m, y, k;\n\n  k = Math.min(1 - r, 1 - g, 1 - b);\n  c = (1 - r - k) / (1 - k) || 0;\n  m = (1 - g - k) / (1 - k) || 0;\n  y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n}\n\nfunction rgb2keyword(rgb) {\n  return reverseKeywords[JSON.stringify(rgb)];\n}\n\nfunction rgb2xyz(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255;\n\n  // assume sRGB\n  r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n  g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n  b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n  var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n  var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n  var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n  return [x * 100, y *100, z * 100];\n}\n\nfunction rgb2lab(rgb) {\n  var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction rgb2lch(args) {\n  return lab2lch(rgb2lab(args));\n}\n\nfunction hsl2rgb(hsl) {\n  var h = hsl[0] / 360,\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      t1, t2, t3, rgb, val;\n\n  if (s == 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n\n  if (l < 0.5)\n    t2 = l * (1 + s);\n  else\n    t2 = l + s - l * s;\n  t1 = 2 * l - t2;\n\n  rgb = [0, 0, 0];\n  for (var i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * - (i - 1);\n    t3 < 0 && t3++;\n    t3 > 1 && t3--;\n\n    if (6 * t3 < 1)\n      val = t1 + (t2 - t1) * 6 * t3;\n    else if (2 * t3 < 1)\n      val = t2;\n    else if (3 * t3 < 2)\n      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n    else\n      val = t1;\n\n    rgb[i] = val * 255;\n  }\n\n  return rgb;\n}\n\nfunction hsl2hsv(hsl) {\n  var h = hsl[0],\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      sv, v;\n\n  if(l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n  }\n\n  l *= 2;\n  s *= (l <= 1) ? l : 2 - l;\n  v = (l + s) / 2;\n  sv = (2 * s) / (l + s);\n  return [h, sv * 100, v * 100];\n}\n\nfunction hsl2hwb(args) {\n  return rgb2hwb(hsl2rgb(args));\n}\n\nfunction hsl2cmyk(args) {\n  return rgb2cmyk(hsl2rgb(args));\n}\n\nfunction hsl2keyword(args) {\n  return rgb2keyword(hsl2rgb(args));\n}\n\n\nfunction hsv2rgb(hsv) {\n  var h = hsv[0] / 60,\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      hi = Math.floor(h) % 6;\n\n  var f = h - Math.floor(h),\n      p = 255 * v * (1 - s),\n      q = 255 * v * (1 - (s * f)),\n      t = 255 * v * (1 - (s * (1 - f))),\n      v = 255 * v;\n\n  switch(hi) {\n    case 0:\n      return [v, t, p];\n    case 1:\n      return [q, v, p];\n    case 2:\n      return [p, v, t];\n    case 3:\n      return [p, q, v];\n    case 4:\n      return [t, p, v];\n    case 5:\n      return [v, p, q];\n  }\n}\n\nfunction hsv2hsl(hsv) {\n  var h = hsv[0],\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      sl, l;\n\n  l = (2 - s) * v;\n  sl = s * v;\n  sl /= (l <= 1) ? l : 2 - l;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}\n\nfunction hsv2hwb(args) {\n  return rgb2hwb(hsv2rgb(args))\n}\n\nfunction hsv2cmyk(args) {\n  return rgb2cmyk(hsv2rgb(args));\n}\n\nfunction hsv2keyword(args) {\n  return rgb2keyword(hsv2rgb(args));\n}\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nfunction hwb2rgb(hwb) {\n  var h = hwb[0] / 360,\n      wh = hwb[1] / 100,\n      bl = hwb[2] / 100,\n      ratio = wh + bl,\n      i, v, f, n;\n\n  // wh + bl cant be > 1\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  i = Math.floor(6 * h);\n  v = 1 - bl;\n  f = 6 * h - i;\n  if ((i & 0x01) != 0) {\n    f = 1 - f;\n  }\n  n = wh + f * (v - wh);  // linear interpolation\n\n  switch (i) {\n    default:\n    case 6:\n    case 0: r = v; g = n; b = wh; break;\n    case 1: r = n; g = v; b = wh; break;\n    case 2: r = wh; g = v; b = n; break;\n    case 3: r = wh; g = n; b = v; break;\n    case 4: r = n; g = wh; b = v; break;\n    case 5: r = v; g = wh; b = n; break;\n  }\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction hwb2hsl(args) {\n  return rgb2hsl(hwb2rgb(args));\n}\n\nfunction hwb2hsv(args) {\n  return rgb2hsv(hwb2rgb(args));\n}\n\nfunction hwb2cmyk(args) {\n  return rgb2cmyk(hwb2rgb(args));\n}\n\nfunction hwb2keyword(args) {\n  return rgb2keyword(hwb2rgb(args));\n}\n\nfunction cmyk2rgb(cmyk) {\n  var c = cmyk[0] / 100,\n      m = cmyk[1] / 100,\n      y = cmyk[2] / 100,\n      k = cmyk[3] / 100,\n      r, g, b;\n\n  r = 1 - Math.min(1, c * (1 - k) + k);\n  g = 1 - Math.min(1, m * (1 - k) + k);\n  b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction cmyk2hsl(args) {\n  return rgb2hsl(cmyk2rgb(args));\n}\n\nfunction cmyk2hsv(args) {\n  return rgb2hsv(cmyk2rgb(args));\n}\n\nfunction cmyk2hwb(args) {\n  return rgb2hwb(cmyk2rgb(args));\n}\n\nfunction cmyk2keyword(args) {\n  return rgb2keyword(cmyk2rgb(args));\n}\n\n\nfunction xyz2rgb(xyz) {\n  var x = xyz[0] / 100,\n      y = xyz[1] / 100,\n      z = xyz[2] / 100,\n      r, g, b;\n\n  r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n  g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n  b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n  // assume sRGB\n  r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n    : r = (r * 12.92);\n\n  g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n    : g = (g * 12.92);\n\n  b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n    : b = (b * 12.92);\n\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction xyz2lab(xyz) {\n  var x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction xyz2lch(args) {\n  return lab2lch(xyz2lab(args));\n}\n\nfunction lab2xyz(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      x, y, z, y2;\n\n  if (l <= 8) {\n    y = (l * 100) / 903.3;\n    y2 = (7.787 * (y / 100)) + (16 / 116);\n  } else {\n    y = 100 * Math.pow((l + 16) / 116, 3);\n    y2 = Math.pow(y / 100, 1/3);\n  }\n\n  x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);\n\n  z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);\n\n  return [x, y, z];\n}\n\nfunction lab2lch(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      hr, h, c;\n\n  hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n  if (h < 0) {\n    h += 360;\n  }\n  c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n}\n\nfunction lab2rgb(args) {\n  return xyz2rgb(lab2xyz(args));\n}\n\nfunction lch2lab(lch) {\n  var l = lch[0],\n      c = lch[1],\n      h = lch[2],\n      a, b, hr;\n\n  hr = h / 360 * 2 * Math.PI;\n  a = c * Math.cos(hr);\n  b = c * Math.sin(hr);\n  return [l, a, b];\n}\n\nfunction lch2xyz(args) {\n  return lab2xyz(lch2lab(args));\n}\n\nfunction lch2rgb(args) {\n  return lab2rgb(lch2lab(args));\n}\n\nfunction keyword2rgb(keyword) {\n  return cssKeywords[keyword];\n}\n\nfunction keyword2hsl(args) {\n  return rgb2hsl(keyword2rgb(args));\n}\n\nfunction keyword2hsv(args) {\n  return rgb2hsv(keyword2rgb(args));\n}\n\nfunction keyword2hwb(args) {\n  return rgb2hwb(keyword2rgb(args));\n}\n\nfunction keyword2cmyk(args) {\n  return rgb2cmyk(keyword2rgb(args));\n}\n\nfunction keyword2lab(args) {\n  return rgb2lab(keyword2rgb(args));\n}\n\nfunction keyword2xyz(args) {\n  return rgb2xyz(keyword2rgb(args));\n}\n\nvar cssKeywords = {\n  aliceblue:  [240,248,255],\n  antiquewhite: [250,235,215],\n  aqua: [0,255,255],\n  aquamarine: [127,255,212],\n  azure:  [240,255,255],\n  beige:  [245,245,220],\n  bisque: [255,228,196],\n  black:  [0,0,0],\n  blanchedalmond: [255,235,205],\n  blue: [0,0,255],\n  blueviolet: [138,43,226],\n  brown:  [165,42,42],\n  burlywood:  [222,184,135],\n  cadetblue:  [95,158,160],\n  chartreuse: [127,255,0],\n  chocolate:  [210,105,30],\n  coral:  [255,127,80],\n  cornflowerblue: [100,149,237],\n  cornsilk: [255,248,220],\n  crimson:  [220,20,60],\n  cyan: [0,255,255],\n  darkblue: [0,0,139],\n  darkcyan: [0,139,139],\n  darkgoldenrod:  [184,134,11],\n  darkgray: [169,169,169],\n  darkgreen:  [0,100,0],\n  darkgrey: [169,169,169],\n  darkkhaki:  [189,183,107],\n  darkmagenta:  [139,0,139],\n  darkolivegreen: [85,107,47],\n  darkorange: [255,140,0],\n  darkorchid: [153,50,204],\n  darkred:  [139,0,0],\n  darksalmon: [233,150,122],\n  darkseagreen: [143,188,143],\n  darkslateblue:  [72,61,139],\n  darkslategray:  [47,79,79],\n  darkslategrey:  [47,79,79],\n  darkturquoise:  [0,206,209],\n  darkviolet: [148,0,211],\n  deeppink: [255,20,147],\n  deepskyblue:  [0,191,255],\n  dimgray:  [105,105,105],\n  dimgrey:  [105,105,105],\n  dodgerblue: [30,144,255],\n  firebrick:  [178,34,34],\n  floralwhite:  [255,250,240],\n  forestgreen:  [34,139,34],\n  fuchsia:  [255,0,255],\n  gainsboro:  [220,220,220],\n  ghostwhite: [248,248,255],\n  gold: [255,215,0],\n  goldenrod:  [218,165,32],\n  gray: [128,128,128],\n  green:  [0,128,0],\n  greenyellow:  [173,255,47],\n  grey: [128,128,128],\n  honeydew: [240,255,240],\n  hotpink:  [255,105,180],\n  indianred:  [205,92,92],\n  indigo: [75,0,130],\n  ivory:  [255,255,240],\n  khaki:  [240,230,140],\n  lavender: [230,230,250],\n  lavenderblush:  [255,240,245],\n  lawngreen:  [124,252,0],\n  lemonchiffon: [255,250,205],\n  lightblue:  [173,216,230],\n  lightcoral: [240,128,128],\n  lightcyan:  [224,255,255],\n  lightgoldenrodyellow: [250,250,210],\n  lightgray:  [211,211,211],\n  lightgreen: [144,238,144],\n  lightgrey:  [211,211,211],\n  lightpink:  [255,182,193],\n  lightsalmon:  [255,160,122],\n  lightseagreen:  [32,178,170],\n  lightskyblue: [135,206,250],\n  lightslategray: [119,136,153],\n  lightslategrey: [119,136,153],\n  lightsteelblue: [176,196,222],\n  lightyellow:  [255,255,224],\n  lime: [0,255,0],\n  limegreen:  [50,205,50],\n  linen:  [250,240,230],\n  magenta:  [255,0,255],\n  maroon: [128,0,0],\n  mediumaquamarine: [102,205,170],\n  mediumblue: [0,0,205],\n  mediumorchid: [186,85,211],\n  mediumpurple: [147,112,219],\n  mediumseagreen: [60,179,113],\n  mediumslateblue:  [123,104,238],\n  mediumspringgreen:  [0,250,154],\n  mediumturquoise:  [72,209,204],\n  mediumvioletred:  [199,21,133],\n  midnightblue: [25,25,112],\n  mintcream:  [245,255,250],\n  mistyrose:  [255,228,225],\n  moccasin: [255,228,181],\n  navajowhite:  [255,222,173],\n  navy: [0,0,128],\n  oldlace:  [253,245,230],\n  olive:  [128,128,0],\n  olivedrab:  [107,142,35],\n  orange: [255,165,0],\n  orangered:  [255,69,0],\n  orchid: [218,112,214],\n  palegoldenrod:  [238,232,170],\n  palegreen:  [152,251,152],\n  paleturquoise:  [175,238,238],\n  palevioletred:  [219,112,147],\n  papayawhip: [255,239,213],\n  peachpuff:  [255,218,185],\n  peru: [205,133,63],\n  pink: [255,192,203],\n  plum: [221,160,221],\n  powderblue: [176,224,230],\n  purple: [128,0,128],\n  rebeccapurple: [102, 51, 153],\n  red:  [255,0,0],\n  rosybrown:  [188,143,143],\n  royalblue:  [65,105,225],\n  saddlebrown:  [139,69,19],\n  salmon: [250,128,114],\n  sandybrown: [244,164,96],\n  seagreen: [46,139,87],\n  seashell: [255,245,238],\n  sienna: [160,82,45],\n  silver: [192,192,192],\n  skyblue:  [135,206,235],\n  slateblue:  [106,90,205],\n  slategray:  [112,128,144],\n  slategrey:  [112,128,144],\n  snow: [255,250,250],\n  springgreen:  [0,255,127],\n  steelblue:  [70,130,180],\n  tan:  [210,180,140],\n  teal: [0,128,128],\n  thistle:  [216,191,216],\n  tomato: [255,99,71],\n  turquoise:  [64,224,208],\n  violet: [238,130,238],\n  wheat:  [245,222,179],\n  white:  [255,255,255],\n  whitesmoke: [245,245,245],\n  yellow: [255,255,0],\n  yellowgreen:  [154,205,50]\n};\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n}\n","/* ============\n * Mixins for working with text\n * ============\n *\n */\n\nexport default {\n  filters: {\n    shortEmail: function (email) {\n      let re = /^([a-zA-Z0-9]{1,2})(.+?)@/\n      return email.replace(re, '$1...@')\n    },\n    slice: function (text, length) {\n      if (text.length >= length) {\n        return text.slice(0, length) + '...'\n      }\n      return text\n    },\n    money: function (price) {\n      if (price) {\n        let val = parseInt(price)\n        return val.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n      }\n      return '0'\n    }\n  }\n}\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Bar = function(context, config) {\n\t\tconfig.type = 'bar';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","// 21.2.5.3 get RegExp.prototype.flags()\nif (require('./_descriptors') && /./g.flags != 'g') require('./_object-dp').f(RegExp.prototype, 'flags', {\n  configurable: true,\n  get: require('./_flags')\n});\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\n\nvar defaultColor = defaults.global.defaultColor;\n\ndefaults._set('global', {\n\telements: {\n\t\tpoint: {\n\t\t\tradius: 3,\n\t\t\tpointStyle: 'circle',\n\t\t\tbackgroundColor: defaultColor,\n\t\t\tborderColor: defaultColor,\n\t\t\tborderWidth: 1,\n\t\t\t// Hover\n\t\t\thitRadius: 1,\n\t\t\thoverRadius: 4,\n\t\t\thoverBorderWidth: 1\n\t\t}\n\t}\n});\n\nfunction xRange(mouseX) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius) : false;\n}\n\nfunction yRange(mouseY) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius) : false;\n}\n\nmodule.exports = Element.extend({\n\tinRange: function(mouseX, mouseY) {\n\t\tvar vm = this._view;\n\t\treturn vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;\n\t},\n\n\tinLabelRange: xRange,\n\tinXRange: xRange,\n\tinYRange: yRange,\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\treturn Math.PI * Math.pow(this._view.radius, 2);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y,\n\t\t\tpadding: vm.radius + vm.borderWidth\n\t\t};\n\t},\n\n\tdraw: function(chartArea) {\n\t\tvar vm = this._view;\n\t\tvar model = this._model;\n\t\tvar ctx = this._chart.ctx;\n\t\tvar pointStyle = vm.pointStyle;\n\t\tvar rotation = vm.rotation;\n\t\tvar radius = vm.radius;\n\t\tvar x = vm.x;\n\t\tvar y = vm.y;\n\t\tvar errMargin = 1.01; // 1.01 is margin for Accumulated error. (Especially Edge, IE.)\n\n\t\tif (vm.skip) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Clipping for Points.\n\t\tif (chartArea === undefined || (model.x >= chartArea.left && chartArea.right * errMargin >= model.x && model.y >= chartArea.top && chartArea.bottom * errMargin >= model.y)) {\n\t\t\tctx.strokeStyle = vm.borderColor || defaultColor;\n\t\t\tctx.lineWidth = helpers.valueOrDefault(vm.borderWidth, defaults.global.elements.point.borderWidth);\n\t\t\tctx.fillStyle = vm.backgroundColor || defaultColor;\n\t\t\thelpers.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n\t\t}\n\t}\n});\n","var conversions = require(\"./conversions\");\n\nvar convert = function() {\n   return new Converter();\n}\n\nfor (var func in conversions) {\n  // export Raw versions\n  convert[func + \"Raw\"] =  (function(func) {\n    // accept array or plain args\n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      return conversions[func](arg);\n    }\n  })(func);\n\n  var pair = /(\\w+)2(\\w+)/.exec(func),\n      from = pair[1],\n      to = pair[2];\n\n  // export rgb2hsl and [\"rgb\"][\"hsl\"]\n  convert[from] = convert[from] || {};\n\n  convert[from][to] = convert[func] = (function(func) { \n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      \n      var val = conversions[func](arg);\n      if (typeof val == \"string\" || val === undefined)\n        return val; // keyword\n\n      for (var i = 0; i < val.length; i++)\n        val[i] = Math.round(val[i]);\n      return val;\n    }\n  })(func);\n}\n\n\n/* Converter does lazy conversion and caching */\nvar Converter = function() {\n   this.convs = {};\n};\n\n/* Either get the values for a space or\n  set the values for a space, depending on args */\nConverter.prototype.routeSpace = function(space, args) {\n   var values = args[0];\n   if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n   }\n   // color.rgb(10, 10, 10)\n   if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);        \n   }\n\n   return this.setValues(space, values);\n};\n  \n/* Set the values for a space, invalidating cache */\nConverter.prototype.setValues = function(space, values) {\n   this.space = space;\n   this.convs = {};\n   this.convs[space] = values;\n   return this;\n};\n\n/* Get the values for a space. If there's already\n  a conversion for the space, fetch it, otherwise\n  compute it */\nConverter.prototype.getValues = function(space) {\n   var vals = this.convs[space];\n   if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n\n      this.convs[space] = vals;\n   }\n  return vals;\n};\n\n[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function(space) {\n   Converter.prototype[space] = function(vals) {\n      return this.routeSpace(space, arguments);\n   }\n});\n\nmodule.exports = convert;","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"line-chart\"},[_c('div',{staticClass:\"chart-info\"},[_c('div',{staticClass:\"chart-info-item\"},[_c('div',{staticClass:\"title\"},[_vm._v(\"Today raised\")]),_c('div',{staticClass:\"amount\"},[_vm._m(0),_c('span',{staticClass:\"bold\"},[_vm._v(_vm._s(_vm._f(\"money\")(15343)))])]),_c('div',{staticClass:\"chart-indicator on\"})]),_c('div',{staticClass:\"chart-info-item\"},[_c('div',{staticClass:\"title\"},[_vm._v(\"Today raised\")]),_c('div',{staticClass:\"amount\"},[_vm._m(1),_c('span',{staticClass:\"bold\"},[_vm._v(_vm._s(_vm._f(\"money\")(763988)))])]),_c('div',{staticClass:\"chart-indicator\"})]),_c('div',{staticClass:\"chart-info-item\"},[_c('div',{staticClass:\"title\"},[_vm._v(_vm._s(_vm.currentData.date))]),_c('div',{staticClass:\"amount\"},[_vm._m(2),_c('span',{staticClass:\"bold\"},[_vm._v(_vm._s(_vm._f(\"money\")(_vm.currentData.value)))])]),_c('div',{staticClass:\"chart-indicator\"})])]),_c('Analytics',{attrs:{\"chartData\":_vm.analyticData,\"options\":_vm.options}})],1),_c('div',{staticClass:\"dashboard-analytics\"},[_c('VBody',{attrs:{\"title\":\"Analytics\"}},[_c('div',{attrs:{\"slot\":\"header\"},slot:\"header\"},[_c('el-row',[_c('el-col',{attrs:{\"xs\":24,\"md\":12}},[_c('h3',{staticClass:\"header-id\"},[_vm._v(\"Get detailed analytics info\")])])],1),_c('div',{staticClass:\"filter\"},[_c('div',[_c('el-select',{staticClass:\"filter-select\",attrs:{\"clearable\":true,\"default-first-option\":\"\"},model:{value:(_vm.filter.filter),callback:function ($$v) {_vm.$set(_vm.filter, \"filter\", $$v)},expression:\"filter.filter\"}},[_c('template',{slot:\"prefix\"},[_c('div',{staticClass:\"filter-select-prefix\"},[_vm._v(\"Filter:\")])]),_c('el-option',{attrs:{\"label\":\"Transactions\",\"value\":\"transactions\"}}),_c('el-option',{attrs:{\"label\":\"Distributions\",\"value\":\"distributions\"}}),_c('el-option',{attrs:{\"label\":\"Tokens\",\"value\":\"tokens\"}})],2)],1),_c('div',[_c('el-date-picker',{attrs:{\"range-separator\":\"→\",\"type\":\"daterange\",\"format\":\"dd/MM/yyyy\",\"value-format\":\"dd-MM-yyyy\",\"start-placeholder\":\"Start date\",\"end-placeholder\":\"End date\"},model:{value:(_vm.filter.date),callback:function ($$v) {_vm.$set(_vm.filter, \"date\", $$v)},expression:\"filter.date\"}})],1)])],1),_c('div',{attrs:{\"slot\":\"content\"},slot:\"content\"},[_c('div',{staticClass:\"detail\"},[_c('el-form',{attrs:{\"label-width\":\"200px\",\"size\":\"medium\"}},[_c('el-form-item',{attrs:{\"label\":\"Total transactions\"}},[_c('span',{staticClass:\"bold\"},[_vm._v(_vm._s(_vm._f(\"money\")(2677)))])]),_c('el-form-item',{attrs:{\"label\":\"Total sum\"}},[_c('div',{staticClass:\"bold\"},[_c('span',{staticClass:\"icon\"},[_c('i',{staticClass:\"fa fa-usd\",attrs:{\"aria-hidden\":\"true\"}})]),_vm._v(\"\\n                                \"+_vm._s(_vm._f(\"money\")(3433233))+\"\\n                            \")])]),_c('el-form-item',{attrs:{\"label\":\"Avarage $/user\"}},[_c('div',{staticClass:\"bold\"},[_c('span',{staticClass:\"icon\"},[_c('i',{staticClass:\"fa fa-usd\",attrs:{\"aria-hidden\":\"true\"}})]),_vm._v(\"\\n                                \"+_vm._s(_vm._f(\"money\")(3455))+\"\\n                            \")])]),_c('el-form-item',{attrs:{\"label\":\"Avarage $/transaction\"}},[_c('div',{staticClass:\"bold\"},[_c('span',{staticClass:\"icon\"},[_c('i',{staticClass:\"fa fa-usd\",attrs:{\"aria-hidden\":\"true\"}})]),_vm._v(\"\\n                                \"+_vm._s(_vm._f(\"money\")(8344))+\"\\n                            \")])]),_c('el-form-item',{attrs:{\"label\":\"Rejected transactions\"}},[_c('span',{staticClass:\"bold\"},[_vm._v(_vm._s(123))])]),_c('el-form-item',{attrs:{\"label\":\"Rejected sum\"}},[_c('div',{staticClass:\"bold\"},[_c('span',{staticClass:\"icon\"},[_c('i',{staticClass:\"fa fa-usd\",attrs:{\"aria-hidden\":\"true\"}})]),_vm._v(\"\\n                                \"+_vm._s(_vm._f(\"money\")(230439))+\"\\n                            \")])])],1)],1)])])],1)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',{staticClass:\"icon\"},[_c('i',{staticClass:\"fas fa-dollar-sign\",attrs:{\"aria-hidden\":\"true\"}})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',{staticClass:\"icon\"},[_c('i',{staticClass:\"fas fa-dollar-sign\",attrs:{\"aria-hidden\":\"true\"}})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',{staticClass:\"icon\"},[_c('i',{staticClass:\"fas fa-dollar-sign\",attrs:{\"aria-hidden\":\"true\"}})])}]\n\nexport { render, staticRenderFns }","function dataHandler(newData, oldData) {\n  if (oldData) {\n    var chart = this.$data._chart;\n    var newDatasetLabels = newData.datasets.map(function (dataset) {\n      return dataset.label;\n    });\n    var oldDatasetLabels = oldData.datasets.map(function (dataset) {\n      return dataset.label;\n    });\n    var oldLabels = JSON.stringify(oldDatasetLabels);\n    var newLabels = JSON.stringify(newDatasetLabels);\n\n    if (newLabels === oldLabels && oldData.datasets.length === newData.datasets.length) {\n      newData.datasets.forEach(function (dataset, i) {\n        var oldDatasetKeys = Object.keys(oldData.datasets[i]);\n        var newDatasetKeys = Object.keys(dataset);\n        var deletionKeys = oldDatasetKeys.filter(function (key) {\n          return key !== '_meta' && newDatasetKeys.indexOf(key) === -1;\n        });\n        deletionKeys.forEach(function (deletionKey) {\n          delete chart.data.datasets[i][deletionKey];\n        });\n\n        for (var attribute in dataset) {\n          if (dataset.hasOwnProperty(attribute)) {\n            chart.data.datasets[i][attribute] = dataset[attribute];\n          }\n        }\n      });\n\n      if (newData.hasOwnProperty('labels')) {\n        chart.data.labels = newData.labels;\n        this.$emit('labels:update');\n      }\n\n      if (newData.hasOwnProperty('xLabels')) {\n        chart.data.xLabels = newData.xLabels;\n        this.$emit('xlabels:update');\n      }\n\n      if (newData.hasOwnProperty('yLabels')) {\n        chart.data.yLabels = newData.yLabels;\n        this.$emit('ylabels:update');\n      }\n\n      chart.update();\n      this.$emit('chart:update');\n    } else {\n      if (chart) {\n        chart.destroy();\n        this.$emit('chart:destroy');\n      }\n\n      this.renderChart(this.chartData, this.options);\n      this.$emit('chart:render');\n    }\n  } else {\n    if (this.$data._chart) {\n      this.$data._chart.destroy();\n\n      this.$emit('chart:destroy');\n    }\n\n    this.renderChart(this.chartData, this.options);\n    this.$emit('chart:render');\n  }\n}\n\nexport var reactiveData = {\n  data: function data() {\n    return {\n      chartData: null\n    };\n  },\n  watch: {\n    'chartData': dataHandler\n  }\n};\nexport var reactiveProp = {\n  props: {\n    chartData: {\n      required: true\n    }\n  },\n  watch: {\n    'chartData': dataHandler\n  }\n};\nexport default {\n  reactiveData: reactiveData,\n  reactiveProp: reactiveProp\n};","import Chart from 'chart.js';\nexport function generateChart(chartId, chartType) {\n  return {\n    render: function render(createElement) {\n      return createElement('div', {\n        style: this.styles,\n        class: this.cssClasses\n      }, [createElement('canvas', {\n        attrs: {\n          id: this.chartId,\n          width: this.width,\n          height: this.height\n        },\n        ref: 'canvas'\n      })]);\n    },\n    props: {\n      chartId: {\n        default: chartId,\n        type: String\n      },\n      width: {\n        default: 400,\n        type: Number\n      },\n      height: {\n        default: 400,\n        type: Number\n      },\n      cssClasses: {\n        type: String,\n        default: ''\n      },\n      styles: {\n        type: Object\n      },\n      plugins: {\n        type: Array,\n        default: function _default() {\n          return [];\n        }\n      }\n    },\n    data: function data() {\n      return {\n        _chart: null,\n        _plugins: this.plugins\n      };\n    },\n    methods: {\n      addPlugin: function addPlugin(plugin) {\n        this.$data._plugins.push(plugin);\n      },\n      generateLegend: function generateLegend() {\n        if (this.$data._chart) {\n          return this.$data._chart.generateLegend();\n        }\n      },\n      renderChart: function renderChart(data, options) {\n        if (this.$data._chart) this.$data._chart.destroy();\n        this.$data._chart = new Chart(this.$refs.canvas.getContext('2d'), {\n          type: chartType,\n          data: data,\n          options: options,\n          plugins: this.$data._plugins\n        });\n      }\n    },\n    beforeDestroy: function beforeDestroy() {\n      if (this.$data._chart) {\n        this.$data._chart.destroy();\n      }\n    }\n  };\n}\nexport var Bar = generateChart('bar-chart', 'bar');\nexport var HorizontalBar = generateChart('horizontalbar-chart', 'horizontalBar');\nexport var Doughnut = generateChart('doughnut-chart', 'doughnut');\nexport var Line = generateChart('line-chart', 'line');\nexport var Pie = generateChart('pie-chart', 'pie');\nexport var PolarArea = generateChart('polar-chart', 'polarArea');\nexport var Radar = generateChart('radar-chart', 'radar');\nexport var Bubble = generateChart('bubble-chart', 'bubble');\nexport var Scatter = generateChart('scatter-chart', 'scatter');\nexport default {\n  Bar: Bar,\n  HorizontalBar: HorizontalBar,\n  Doughnut: Doughnut,\n  Line: Line,\n  Pie: Pie,\n  PolarArea: PolarArea,\n  Radar: Radar,\n  Bubble: Bubble,\n  Scatter: Scatter\n};","import { Line, mixins } from 'vue-chartjs'\n\nexport default {\n  extends: Line,\n  mixins: [mixins.reactiveProp],\n  props: ['chartData', 'options'],\n  mounted () {\n    this.renderChart(this.chartData, this.options)\n  }\n}\n","<template>\n    <div>\n        <div class=\"line-chart\">\n            <div class=\"chart-info\">\n                <div class=\"chart-info-item\">\n                    <div class=\"title\">Today raised</div>\n                    <div class=\"amount\">\n                        <span class=\"icon\"><i class=\"fas fa-dollar-sign\" aria-hidden=\"true\"></i></span>\n                        <span class=\"bold\">{{ 15343 | money }}</span>\n                    </div>\n                    <div class=\"chart-indicator on\"></div>\n                </div>\n                <div class=\"chart-info-item\">\n                    <div class=\"title\">Today raised</div>\n                    <div class=\"amount\">\n                        <span class=\"icon\"><i class=\"fas fa-dollar-sign\" aria-hidden=\"true\"></i></span>\n                        <span class=\"bold\">{{ 763988 | money }}</span>\n                    </div>\n                    <div class=\"chart-indicator\"></div>\n                </div>\n                <div class=\"chart-info-item\">\n                    <div class=\"title\">{{ currentData.date }}</div>\n                    <div class=\"amount\">\n                        <span class=\"icon\"><i class=\"fas fa-dollar-sign\" aria-hidden=\"true\"></i></span>\n                        <span class=\"bold\">{{ currentData.value | money }}</span>\n                    </div>\n                    <div class=\"chart-indicator\"></div>\n                </div>\n\n            </div>\n            <Analytics :chartData=\"analyticData\" :options=\"options\" />\n        </div>\n        <div class=\"dashboard-analytics\">\n            <VBody title=\"Analytics\">\n                <div slot=\"header\">\n                    <el-row>\n                        <el-col :xs=\"24\" :md=\"12\">\n                            <h3 class=\"header-id\">Get detailed analytics info</h3>\n                        </el-col>\n                    </el-row>\n                    <div class=\"filter\">\n                        <div>\n                            <el-select\n                                :clearable=\"true\"\n                                class=\"filter-select\"\n                                v-model=\"filter.filter\"\n                                default-first-option>\n                                <template slot=\"prefix\"><div class=\"filter-select-prefix\">Filter:</div> </template>\n                                <el-option label=\"Transactions\" value=\"transactions\"></el-option>\n                                <el-option label=\"Distributions\" value=\"distributions\"></el-option>\n                                <el-option label=\"Tokens\" value=\"tokens\"></el-option>\n                            </el-select>\n                        </div>\n                        <div>\n                            <el-date-picker\n                                v-model=\"filter.date\"\n                                range-separator=\"→\"\n                                type=\"daterange\"\n                                format=\"dd/MM/yyyy\"\n                                value-format=\"dd-MM-yyyy\"\n                                start-placeholder=\"Start date\"\n                                end-placeholder=\"End date\">\n                            </el-date-picker>\n                        </div>\n                    </div>\n                </div>\n                <div slot=\"content\">\n                    <div class=\"detail\">\n                        <el-form label-width=\"200px\" size=\"medium\">\n                            <el-form-item label=\"Total transactions\">\n                                <span class=\"bold\">{{ 2677 | money }}</span>\n                            </el-form-item>\n                            <el-form-item label=\"Total sum\">\n                                <div class=\"bold\">\n                                    <span class=\"icon\"><i class=\"fa fa-usd\" aria-hidden=\"true\"></i></span>\n                                    {{ 3433233 | money }}\n                                </div>\n                            </el-form-item>\n                            <el-form-item label=\"Avarage $/user\">\n                                <div class=\"bold\">\n                                    <span class=\"icon\"><i class=\"fa fa-usd\" aria-hidden=\"true\"></i></span>\n                                    {{ 3455 | money }}\n                                </div>\n                            </el-form-item>\n                            <el-form-item label=\"Avarage $/transaction\">\n                                <div class=\"bold\">\n                                    <span class=\"icon\"><i class=\"fa fa-usd\" aria-hidden=\"true\"></i></span>\n                                    {{ 8344 | money }}\n                                </div>\n                            </el-form-item>\n                            <el-form-item label=\"Rejected transactions\">\n                                <span class=\"bold\">{{ 123 }}</span>\n                            </el-form-item>\n                            <el-form-item label=\"Rejected sum\">\n                                <div class=\"bold\">\n                                    <span class=\"icon\"><i class=\"fa fa-usd\" aria-hidden=\"true\"></i></span>\n                                    {{ 230439 | money }}\n                                </div>\n                            </el-form-item>\n                        </el-form>\n                    </div>\n                </div>\n            </VBody>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { nth, prop } from 'ramda'\nimport TextMixin from '@/mixins/text'\n\nimport VBody from '../../components/Body'\nimport Analytics from './components/AnalyticsChart'\n\nconst TEST_DATA = {\n  labels: [\n    '01/08/2018',\n    '02/08/2018',\n    '03/08/2018',\n    '04/08/2018',\n    '05/08/2018',\n    '06/08/2018'\n  ],\n  datasets: [\n    {\n      backgroundColor: 'transparent',\n      data: [6000, 7366, 9840, 12340, 10000, 15400]\n    }\n  ]\n}\n\nconst OPTIONS = {\n  responsive: true,\n  elements: {\n    layout: {\n      padding: {\n        left: 10,\n        right: 10,\n        top: 20\n      }\n    },\n    line: {\n      borderColor: 'rgba(255,255,255,0.5)'\n    },\n    point: {\n      radius: 4,\n      borderWidth: 5,\n      hoverRadius: 5,\n      hoverBorderWidth: 6,\n      borderColor: 'rgba(255,255,255,1)'\n    }\n  },\n  legend: {\n    display: false\n  },\n  maintainAspectRatio: false,\n  scales: {\n    yAxes: [\n      {\n        display: false,\n        stacked: true,\n        gridLines: {\n          display: false\n        }\n      }\n    ],\n    xAxes: [\n      {\n        display: true,\n        gridLines: {\n          display: false\n        }\n      }\n    ]\n  }\n}\n\nexport default {\n  name: 'Dashboard',\n  data: function () {\n    return {\n      filter: {\n        filter: '',\n        date: []\n      },\n      currentData: '',\n      analyticData: TEST_DATA\n    }\n  },\n  computed: {\n    query: function () {\n      let filter = this.filter.filter\n      let startDate = nth(0, this.filter.date)\n      let endDate = nth(1, this.filter.date)\n      return {\n        filter,\n        startDate,\n        endDate\n      }\n    },\n    options: function () {\n      let self = this\n      return {\n        ...OPTIONS,\n        tooltips: {\n          mode: 'point',\n          enabled: true,\n          callbacks: {\n            label: function (tooltipItem, data) {\n              self.currentData = {\n                date: prop('xLabel', tooltipItem),\n                value: prop('yLabel', tooltipItem)\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  watch: {\n    query: function (newValue, oldValue) {\n      let oldQuery = this.$route.query\n      this.$router.push({\n        query: {\n          ...oldQuery,\n          ...newValue\n        }\n      })\n    }\n  },\n  mixins: [TextMixin],\n  components: {\n    Analytics,\n    VBody\n  }\n}\n</script>\n\n<style lang=\"sass\">\n    .dashboard-analytics\n        .el-form-item\n            border-bottom: 1px solid #EDF3FB\n    .content\n        .el-form-item__label\n            padding: 0 30px 0 0\n    .el-form-item__content\n        font-size: 18px\n        color: #424242\n        i\n            font-size: 14px\n    .dashboard-analytics\n        margin-top: 35px\n    .line-chart\n        position: relative\n        max-height: 400px\n        background: #377DFE\n        padding: 20px\n        box-sizing: border-box\n        overflow: hidden\n        -webkit-border-radius: 5px\n        -moz-border-radius: 5px\n        border-radius: 5px\n        -webkit-box-shadow: 0 0 12px -1px rgba(3,120,223,1)\n        -moz-box-shadow: 0 0 12px -1px rgba(3,120,223,1)\n        box-shadow: 0 5px 20px 0 rgba(3,120,223,0.6)\n    .chart-info\n        color: #fff\n        display: flex\n        flex-wrap: wrap\n        align-items: center\n        align-content: center\n        justify-content: flex-start\n        margin-bottom: 15px\n        .chart-indicator\n            max-width: 30px\n            height: 5px\n            background: rgba(255, 255, 255, 0.4)\n            border-radius: 5px\n            margin: 5px\n            margin-left: 0px\n        .on\n            background: #fff\n        .icon\n            font-size: 18px\n            margin-right: 6px\n        .amount\n            font-size: 22px\n            letter-spacing: 1px\n        .title\n            letter-spacing: 0.3px\n        .chart-info-item\n            line-height: 1.4\n            margin-right: 60px\n</style>\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Dashboard.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Dashboard.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Dashboard.vue?vue&type=template&id=8bc49a50&\"\nimport script from \"./Dashboard.vue?vue&type=script&lang=js&\"\nexport * from \"./Dashboard.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Dashboard.vue?vue&type=style&index=0&lang=sass&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"Dashboard.vue\"\nexport default component.exports","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Bubble = function(context, config) {\n\t\tconfig.type = 'bubble';\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","/* global window: false */\n'use strict';\n\nvar moment = require('moment');\nmoment = typeof moment === 'function' ? moment : window.moment;\n\nvar defaults = require('../core/core.defaults');\nvar helpers = require('../helpers/index');\nvar Scale = require('../core/core.scale');\nvar scaleService = require('../core/core.scaleService');\n\n// Integer constants are from the ES6 spec.\nvar MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\nvar MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\nvar INTERVALS = {\n\tmillisecond: {\n\t\tcommon: true,\n\t\tsize: 1,\n\t\tsteps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n\t},\n\tsecond: {\n\t\tcommon: true,\n\t\tsize: 1000,\n\t\tsteps: [1, 2, 5, 10, 15, 30]\n\t},\n\tminute: {\n\t\tcommon: true,\n\t\tsize: 60000,\n\t\tsteps: [1, 2, 5, 10, 15, 30]\n\t},\n\thour: {\n\t\tcommon: true,\n\t\tsize: 3600000,\n\t\tsteps: [1, 2, 3, 6, 12]\n\t},\n\tday: {\n\t\tcommon: true,\n\t\tsize: 86400000,\n\t\tsteps: [1, 2, 5]\n\t},\n\tweek: {\n\t\tcommon: false,\n\t\tsize: 604800000,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tmonth: {\n\t\tcommon: true,\n\t\tsize: 2.628e9,\n\t\tsteps: [1, 2, 3]\n\t},\n\tquarter: {\n\t\tcommon: false,\n\t\tsize: 7.884e9,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tyear: {\n\t\tcommon: true,\n\t\tsize: 3.154e10\n\t}\n};\n\nvar UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n\treturn a - b;\n}\n\nfunction arrayUnique(items) {\n\tvar hash = {};\n\tvar out = [];\n\tvar i, ilen, item;\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\titem = items[i];\n\t\tif (!hash[item]) {\n\t\t\thash[item] = true;\n\t\t\tout.push(item);\n\t\t}\n\t}\n\n\treturn out;\n}\n\n/**\n * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n * extremity (left + width or top + height). Note that it would be more optimized to directly\n * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n *\n * @param {Number[]} timestamps - timestamps sorted from lowest to highest.\n * @param {String} distribution - If 'linear', timestamps will be spread linearly along the min\n * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n * If 'series', timestamps will be positioned at the same distance from each other. In this\n * case, only timestamps that break the time linearity are registered, meaning that in the\n * best case, all timestamps are linear, the table contains only min and max.\n */\nfunction buildLookupTable(timestamps, min, max, distribution) {\n\tif (distribution === 'linear' || !timestamps.length) {\n\t\treturn [\n\t\t\t{time: min, pos: 0},\n\t\t\t{time: max, pos: 1}\n\t\t];\n\t}\n\n\tvar table = [];\n\tvar items = [min];\n\tvar i, ilen, prev, curr, next;\n\n\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\tcurr = timestamps[i];\n\t\tif (curr > min && curr < max) {\n\t\t\titems.push(curr);\n\t\t}\n\t}\n\n\titems.push(max);\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\tnext = items[i + 1];\n\t\tprev = items[i - 1];\n\t\tcurr = items[i];\n\n\t\t// only add points that breaks the scale linearity\n\t\tif (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n\t\t\ttable.push({time: curr, pos: i / (ilen - 1)});\n\t\t}\n\t}\n\n\treturn table;\n}\n\n// @see adapted from http://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\nfunction lookup(table, key, value) {\n\tvar lo = 0;\n\tvar hi = table.length - 1;\n\tvar mid, i0, i1;\n\n\twhile (lo >= 0 && lo <= hi) {\n\t\tmid = (lo + hi) >> 1;\n\t\ti0 = table[mid - 1] || null;\n\t\ti1 = table[mid];\n\n\t\tif (!i0) {\n\t\t\t// given value is outside table (before first item)\n\t\t\treturn {lo: null, hi: i1};\n\t\t} else if (i1[key] < value) {\n\t\t\tlo = mid + 1;\n\t\t} else if (i0[key] > value) {\n\t\t\thi = mid - 1;\n\t\t} else {\n\t\t\treturn {lo: i0, hi: i1};\n\t\t}\n\t}\n\n\t// given value is outside table (after last item)\n\treturn {lo: i1, hi: null};\n}\n\n/**\n * Linearly interpolates the given source `value` using the table items `skey` values and\n * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n * index [0, 1] or [n - 1, n] are used for the interpolation.\n */\nfunction interpolate(table, skey, sval, tkey) {\n\tvar range = lookup(table, skey, sval);\n\n\t// Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\tvar prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n\tvar next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n\n\tvar span = next[skey] - prev[skey];\n\tvar ratio = span ? (sval - prev[skey]) / span : 0;\n\tvar offset = (next[tkey] - prev[tkey]) * ratio;\n\n\treturn prev[tkey] + offset;\n}\n\n/**\n * Convert the given value to a moment object using the given time options.\n * @see http://momentjs.com/docs/#/parsing/\n */\nfunction momentify(value, options) {\n\tvar parser = options.parser;\n\tvar format = options.parser || options.format;\n\n\tif (typeof parser === 'function') {\n\t\treturn parser(value);\n\t}\n\n\tif (typeof value === 'string' && typeof format === 'string') {\n\t\treturn moment(value, format);\n\t}\n\n\tif (!(value instanceof moment)) {\n\t\tvalue = moment(value);\n\t}\n\n\tif (value.isValid()) {\n\t\treturn value;\n\t}\n\n\t// Labels are in an incompatible moment format and no `parser` has been provided.\n\t// The user might still use the deprecated `format` option to convert his inputs.\n\tif (typeof format === 'function') {\n\t\treturn format(value);\n\t}\n\n\treturn value;\n}\n\nfunction parse(input, scale) {\n\tif (helpers.isNullOrUndef(input)) {\n\t\treturn null;\n\t}\n\n\tvar options = scale.options.time;\n\tvar value = momentify(scale.getRightValue(input), options);\n\tif (!value.isValid()) {\n\t\treturn null;\n\t}\n\n\tif (options.round) {\n\t\tvalue.startOf(options.round);\n\t}\n\n\treturn value.valueOf();\n}\n\n/**\n * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n */\nfunction determineStepSize(min, max, unit, capacity) {\n\tvar range = max - min;\n\tvar interval = INTERVALS[unit];\n\tvar milliseconds = interval.size;\n\tvar steps = interval.steps;\n\tvar i, ilen, factor;\n\n\tif (!steps) {\n\t\treturn Math.ceil(range / (capacity * milliseconds));\n\t}\n\n\tfor (i = 0, ilen = steps.length; i < ilen; ++i) {\n\t\tfactor = steps[i];\n\t\tif (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn factor;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n\tvar ilen = UNITS.length;\n\tvar i, interval, factor;\n\n\tfor (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n\t\tinterval = INTERVALS[UNITS[i]];\n\t\tfactor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n\t\tif (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n\n\treturn UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n */\nfunction determineUnitForFormatting(ticks, minUnit, min, max) {\n\tvar duration = moment.duration(moment(max).diff(moment(min)));\n\tvar ilen = UNITS.length;\n\tvar i, unit;\n\n\tfor (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n\t\tunit = UNITS[i];\n\t\tif (INTERVALS[unit].common && duration.as(unit) >= ticks.length) {\n\t\t\treturn unit;\n\t\t}\n\t}\n\n\treturn UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n\tfor (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n\t\tif (INTERVALS[UNITS[i]].common) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n}\n\n/**\n * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n * Important: this method can return ticks outside the min and max range, it's the\n * responsibility of the calling code to clamp values if needed.\n */\nfunction generate(min, max, capacity, options) {\n\tvar timeOpts = options.time;\n\tvar minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n\tvar major = determineMajorUnit(minor);\n\tvar stepSize = helpers.valueOrDefault(timeOpts.stepSize, timeOpts.unitStepSize);\n\tvar weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n\tvar majorTicksEnabled = options.ticks.major.enabled;\n\tvar interval = INTERVALS[minor];\n\tvar first = moment(min);\n\tvar last = moment(max);\n\tvar ticks = [];\n\tvar time;\n\n\tif (!stepSize) {\n\t\tstepSize = determineStepSize(min, max, minor, capacity);\n\t}\n\n\t// For 'week' unit, handle the first day of week option\n\tif (weekday) {\n\t\tfirst = first.isoWeekday(weekday);\n\t\tlast = last.isoWeekday(weekday);\n\t}\n\n\t// Align first/last ticks on unit\n\tfirst = first.startOf(weekday ? 'day' : minor);\n\tlast = last.startOf(weekday ? 'day' : minor);\n\n\t// Make sure that the last tick include max\n\tif (last < max) {\n\t\tlast.add(1, minor);\n\t}\n\n\ttime = moment(first);\n\n\tif (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n\t\t// Align the first tick on the previous `minor` unit aligned on the `major` unit:\n\t\t// we first aligned time on the previous `major` unit then add the number of full\n\t\t// stepSize there is between first and the previous major time.\n\t\ttime.startOf(major);\n\t\ttime.add(~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n\t}\n\n\tfor (; time < last; time.add(stepSize, minor)) {\n\t\tticks.push(+time);\n\t}\n\n\tticks.push(+time);\n\n\treturn ticks;\n}\n\n/**\n * Returns the right and left offsets from edges in the form of {left, right}.\n * Offsets are added when the `offset` option is true.\n */\nfunction computeOffsets(table, ticks, min, max, options) {\n\tvar left = 0;\n\tvar right = 0;\n\tvar upper, lower;\n\n\tif (options.offset && ticks.length) {\n\t\tif (!options.time.min) {\n\t\t\tupper = ticks.length > 1 ? ticks[1] : max;\n\t\t\tlower = ticks[0];\n\t\t\tleft = (\n\t\t\t\tinterpolate(table, 'time', upper, 'pos') -\n\t\t\t\tinterpolate(table, 'time', lower, 'pos')\n\t\t\t) / 2;\n\t\t}\n\t\tif (!options.time.max) {\n\t\t\tupper = ticks[ticks.length - 1];\n\t\t\tlower = ticks.length > 1 ? ticks[ticks.length - 2] : min;\n\t\t\tright = (\n\t\t\t\tinterpolate(table, 'time', upper, 'pos') -\n\t\t\t\tinterpolate(table, 'time', lower, 'pos')\n\t\t\t) / 2;\n\t\t}\n\t}\n\n\treturn {left: left, right: right};\n}\n\nfunction ticksFromTimestamps(values, majorUnit) {\n\tvar ticks = [];\n\tvar i, ilen, value, major;\n\n\tfor (i = 0, ilen = values.length; i < ilen; ++i) {\n\t\tvalue = values[i];\n\t\tmajor = majorUnit ? value === +moment(value).startOf(majorUnit) : false;\n\n\t\tticks.push({\n\t\t\tvalue: value,\n\t\t\tmajor: major\n\t\t});\n\t}\n\n\treturn ticks;\n}\n\nfunction determineLabelFormat(data, timeOpts) {\n\tvar i, momentDate, hasTime;\n\tvar ilen = data.length;\n\n\t// find the label with the most parts (milliseconds, minutes, etc.)\n\t// format all labels with the same level of detail as the most specific label\n\tfor (i = 0; i < ilen; i++) {\n\t\tmomentDate = momentify(data[i], timeOpts);\n\t\tif (momentDate.millisecond() !== 0) {\n\t\t\treturn 'MMM D, YYYY h:mm:ss.SSS a';\n\t\t}\n\t\tif (momentDate.second() !== 0 || momentDate.minute() !== 0 || momentDate.hour() !== 0) {\n\t\t\thasTime = true;\n\t\t}\n\t}\n\tif (hasTime) {\n\t\treturn 'MMM D, YYYY h:mm:ss a';\n\t}\n\treturn 'MMM D, YYYY';\n}\n\nmodule.exports = function() {\n\n\tvar defaultConfig = {\n\t\tposition: 'bottom',\n\n\t\t/**\n\t\t * Data distribution along the scale:\n\t\t * - 'linear': data are spread according to their time (distances can vary),\n\t\t * - 'series': data are spread at the same distance from each other.\n\t\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t\t * @since 2.7.0\n\t\t */\n\t\tdistribution: 'linear',\n\n\t\t/**\n\t\t * Scale boundary strategy (bypassed by min/max time options)\n\t\t * - `data`: make sure data are fully visible, ticks outside are removed\n\t\t * - `ticks`: make sure ticks are fully visible, data outside are truncated\n\t\t * @see https://github.com/chartjs/Chart.js/pull/4556\n\t\t * @since 2.7.0\n\t\t */\n\t\tbounds: 'data',\n\n\t\ttime: {\n\t\t\tparser: false, // false == a pattern string from http://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n\t\t\tformat: false, // DEPRECATED false == date objects, moment object, callback or a pattern string from http://momentjs.com/docs/#/parsing/string-format/\n\t\t\tunit: false, // false == automatic or override with week, month, year, etc.\n\t\t\tround: false, // none, or override with week, month, year, etc.\n\t\t\tdisplayFormat: false, // DEPRECATED\n\t\t\tisoWeekday: false, // override week start day - see http://momentjs.com/docs/#/get-set/iso-weekday/\n\t\t\tminUnit: 'millisecond',\n\n\t\t\t// defaults to unit's corresponding unitFormat below or override using pattern string from http://momentjs.com/docs/#/displaying/format/\n\t\t\tdisplayFormats: {\n\t\t\t\tmillisecond: 'h:mm:ss.SSS a', // 11:20:01.123 AM,\n\t\t\t\tsecond: 'h:mm:ss a', // 11:20:01 AM\n\t\t\t\tminute: 'h:mm a', // 11:20 AM\n\t\t\t\thour: 'hA', // 5PM\n\t\t\t\tday: 'MMM D', // Sep 4\n\t\t\t\tweek: 'll', // Week 46, or maybe \"[W]WW - YYYY\" ?\n\t\t\t\tmonth: 'MMM YYYY', // Sept 2015\n\t\t\t\tquarter: '[Q]Q - YYYY', // Q3\n\t\t\t\tyear: 'YYYY' // 2015\n\t\t\t},\n\t\t},\n\t\tticks: {\n\t\t\tautoSkip: false,\n\n\t\t\t/**\n\t\t\t * Ticks generation input values:\n\t\t\t * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n\t\t\t * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n\t\t\t * - 'labels': generates ticks from user given `data.labels` values ONLY.\n\t\t\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t\t\t * @since 2.7.0\n\t\t\t */\n\t\t\tsource: 'auto',\n\n\t\t\tmajor: {\n\t\t\t\tenabled: false\n\t\t\t}\n\t\t}\n\t};\n\n\tvar TimeScale = Scale.extend({\n\t\tinitialize: function() {\n\t\t\tif (!moment) {\n\t\t\t\tthrow new Error('Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com');\n\t\t\t}\n\n\t\t\tthis.mergeTicksOptions();\n\n\t\t\tScale.prototype.initialize.call(this);\n\t\t},\n\n\t\tupdate: function() {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\n\t\t\t// DEPRECATIONS: output a message only one time per update\n\t\t\tif (options.time && options.time.format) {\n\t\t\t\tconsole.warn('options.time.format is deprecated and replaced by options.time.parser.');\n\t\t\t}\n\n\t\t\treturn Scale.prototype.update.apply(me, arguments);\n\t\t},\n\n\t\t/**\n\t\t * Allows data to be referenced via 't' attribute\n\t\t */\n\t\tgetRightValue: function(rawValue) {\n\t\t\tif (rawValue && rawValue.t !== undefined) {\n\t\t\t\trawValue = rawValue.t;\n\t\t\t}\n\t\t\treturn Scale.prototype.getRightValue.call(this, rawValue);\n\t\t},\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar timeOpts = me.options.time;\n\t\t\tvar unit = timeOpts.unit || 'day';\n\t\t\tvar min = MAX_INTEGER;\n\t\t\tvar max = MIN_INTEGER;\n\t\t\tvar timestamps = [];\n\t\t\tvar datasets = [];\n\t\t\tvar labels = [];\n\t\t\tvar i, j, ilen, jlen, data, timestamp;\n\n\t\t\t// Convert labels to timestamps\n\t\t\tfor (i = 0, ilen = chart.data.labels.length; i < ilen; ++i) {\n\t\t\t\tlabels.push(parse(chart.data.labels[i], me));\n\t\t\t}\n\n\t\t\t// Convert data to timestamps\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tif (chart.isDatasetVisible(i)) {\n\t\t\t\t\tdata = chart.data.datasets[i].data;\n\n\t\t\t\t\t// Let's consider that all data have the same format.\n\t\t\t\t\tif (helpers.isObject(data[0])) {\n\t\t\t\t\t\tdatasets[i] = [];\n\n\t\t\t\t\t\tfor (j = 0, jlen = data.length; j < jlen; ++j) {\n\t\t\t\t\t\t\ttimestamp = parse(data[j], me);\n\t\t\t\t\t\t\ttimestamps.push(timestamp);\n\t\t\t\t\t\t\tdatasets[i][j] = timestamp;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttimestamps.push.apply(timestamps, labels);\n\t\t\t\t\t\tdatasets[i] = labels.slice(0);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tdatasets[i] = [];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (labels.length) {\n\t\t\t\t// Sort labels **after** data have been converted\n\t\t\t\tlabels = arrayUnique(labels).sort(sorter);\n\t\t\t\tmin = Math.min(min, labels[0]);\n\t\t\t\tmax = Math.max(max, labels[labels.length - 1]);\n\t\t\t}\n\n\t\t\tif (timestamps.length) {\n\t\t\t\ttimestamps = arrayUnique(timestamps).sort(sorter);\n\t\t\t\tmin = Math.min(min, timestamps[0]);\n\t\t\t\tmax = Math.max(max, timestamps[timestamps.length - 1]);\n\t\t\t}\n\n\t\t\tmin = parse(timeOpts.min, me) || min;\n\t\t\tmax = parse(timeOpts.max, me) || max;\n\n\t\t\t// In case there is no valid min/max, set limits based on unit time option\n\t\t\tmin = min === MAX_INTEGER ? +moment().startOf(unit) : min;\n\t\t\tmax = max === MIN_INTEGER ? +moment().endOf(unit) + 1 : max;\n\n\t\t\t// Make sure that max is strictly higher than min (required by the lookup table)\n\t\t\tme.min = Math.min(min, max);\n\t\t\tme.max = Math.max(min + 1, max);\n\n\t\t\t// PRIVATE\n\t\t\tme._horizontal = me.isHorizontal();\n\t\t\tme._table = [];\n\t\t\tme._timestamps = {\n\t\t\t\tdata: timestamps,\n\t\t\t\tdatasets: datasets,\n\t\t\t\tlabels: labels\n\t\t\t};\n\t\t},\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\t\t\tvar options = me.options;\n\t\t\tvar timeOpts = options.time;\n\t\t\tvar timestamps = [];\n\t\t\tvar ticks = [];\n\t\t\tvar i, ilen, timestamp;\n\n\t\t\tswitch (options.ticks.source) {\n\t\t\tcase 'data':\n\t\t\t\ttimestamps = me._timestamps.data;\n\t\t\t\tbreak;\n\t\t\tcase 'labels':\n\t\t\t\ttimestamps = me._timestamps.labels;\n\t\t\t\tbreak;\n\t\t\tcase 'auto':\n\t\t\tdefault:\n\t\t\t\ttimestamps = generate(min, max, me.getLabelCapacity(min), options);\n\t\t\t}\n\n\t\t\tif (options.bounds === 'ticks' && timestamps.length) {\n\t\t\t\tmin = timestamps[0];\n\t\t\t\tmax = timestamps[timestamps.length - 1];\n\t\t\t}\n\n\t\t\t// Enforce limits with user min/max options\n\t\t\tmin = parse(timeOpts.min, me) || min;\n\t\t\tmax = parse(timeOpts.max, me) || max;\n\n\t\t\t// Remove ticks outside the min/max range\n\t\t\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\t\t\ttimestamp = timestamps[i];\n\t\t\t\tif (timestamp >= min && timestamp <= max) {\n\t\t\t\t\tticks.push(timestamp);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.min = min;\n\t\t\tme.max = max;\n\n\t\t\t// PRIVATE\n\t\t\tme._unit = timeOpts.unit || determineUnitForFormatting(ticks, timeOpts.minUnit, me.min, me.max);\n\t\t\tme._majorUnit = determineMajorUnit(me._unit);\n\t\t\tme._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n\t\t\tme._offsets = computeOffsets(me._table, ticks, min, max, options);\n\t\t\tme._labelFormat = determineLabelFormat(me._timestamps.data, timeOpts);\n\n\t\t\treturn ticksFromTimestamps(ticks, me._majorUnit);\n\t\t},\n\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar data = me.chart.data;\n\t\t\tvar timeOpts = me.options.time;\n\t\t\tvar label = data.labels && index < data.labels.length ? data.labels[index] : '';\n\t\t\tvar value = data.datasets[datasetIndex].data[index];\n\n\t\t\tif (helpers.isObject(value)) {\n\t\t\t\tlabel = me.getRightValue(value);\n\t\t\t}\n\t\t\tif (timeOpts.tooltipFormat) {\n\t\t\t\treturn momentify(label, timeOpts).format(timeOpts.tooltipFormat);\n\t\t\t}\n\t\t\tif (typeof label === 'string') {\n\t\t\t\treturn label;\n\t\t\t}\n\n\t\t\treturn momentify(label, timeOpts).format(me._labelFormat);\n\t\t},\n\n\t\t/**\n\t\t * Function to format an individual tick mark\n\t\t * @private\n\t\t */\n\t\ttickFormatFunction: function(tick, index, ticks, formatOverride) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar time = tick.valueOf();\n\t\t\tvar formats = options.time.displayFormats;\n\t\t\tvar minorFormat = formats[me._unit];\n\t\t\tvar majorUnit = me._majorUnit;\n\t\t\tvar majorFormat = formats[majorUnit];\n\t\t\tvar majorTime = tick.clone().startOf(majorUnit).valueOf();\n\t\t\tvar majorTickOpts = options.ticks.major;\n\t\t\tvar major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n\t\t\tvar label = tick.format(formatOverride ? formatOverride : major ? majorFormat : minorFormat);\n\t\t\tvar tickOpts = major ? majorTickOpts : options.ticks.minor;\n\t\t\tvar formatter = helpers.valueOrDefault(tickOpts.callback, tickOpts.userCallback);\n\n\t\t\treturn formatter ? formatter(label, index, ticks) : label;\n\t\t},\n\n\t\tconvertTicksToLabels: function(ticks) {\n\t\t\tvar labels = [];\n\t\t\tvar i, ilen;\n\n\t\t\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\t\t\tlabels.push(this.tickFormatFunction(moment(ticks[i].value), i, ticks));\n\t\t\t}\n\n\t\t\treturn labels;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetPixelForOffset: function(time) {\n\t\t\tvar me = this;\n\t\t\tvar size = me._horizontal ? me.width : me.height;\n\t\t\tvar start = me._horizontal ? me.left : me.top;\n\t\t\tvar pos = interpolate(me._table, 'time', time, 'pos');\n\n\t\t\treturn start + size * (me._offsets.left + pos) / (me._offsets.left + 1 + me._offsets.right);\n\t\t},\n\n\t\tgetPixelForValue: function(value, index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar time = null;\n\n\t\t\tif (index !== undefined && datasetIndex !== undefined) {\n\t\t\t\ttime = me._timestamps.datasets[datasetIndex][index];\n\t\t\t}\n\n\t\t\tif (time === null) {\n\t\t\t\ttime = parse(value, me);\n\t\t\t}\n\n\t\t\tif (time !== null) {\n\t\t\t\treturn me.getPixelForOffset(time);\n\t\t\t}\n\t\t},\n\n\t\tgetPixelForTick: function(index) {\n\t\t\tvar ticks = this.getTicks();\n\t\t\treturn index >= 0 && index < ticks.length ?\n\t\t\t\tthis.getPixelForOffset(ticks[index].value) :\n\t\t\t\tnull;\n\t\t},\n\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar size = me._horizontal ? me.width : me.height;\n\t\t\tvar start = me._horizontal ? me.left : me.top;\n\t\t\tvar pos = (size ? (pixel - start) / size : 0) * (me._offsets.left + 1 + me._offsets.left) - me._offsets.right;\n\t\t\tvar time = interpolate(me._table, 'pos', pos, 'time');\n\n\t\t\treturn moment(time);\n\t\t},\n\n\t\t/**\n\t\t * Crude approximation of what the label width might be\n\t\t * @private\n\t\t */\n\t\tgetLabelWidth: function(label) {\n\t\t\tvar me = this;\n\t\t\tvar ticksOpts = me.options.ticks;\n\t\t\tvar tickLabelWidth = me.ctx.measureText(label).width;\n\t\t\tvar angle = helpers.toRadians(ticksOpts.maxRotation);\n\t\t\tvar cosRotation = Math.cos(angle);\n\t\t\tvar sinRotation = Math.sin(angle);\n\t\t\tvar tickFontSize = helpers.valueOrDefault(ticksOpts.fontSize, defaults.global.defaultFontSize);\n\n\t\t\treturn (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetLabelCapacity: function(exampleTime) {\n\t\t\tvar me = this;\n\n\t\t\tvar formatOverride = me.options.time.displayFormats.millisecond;\t// Pick the longest format for guestimation\n\n\t\t\tvar exampleLabel = me.tickFormatFunction(moment(exampleTime), 0, [], formatOverride);\n\t\t\tvar tickLabelWidth = me.getLabelWidth(exampleLabel);\n\t\t\tvar innerWidth = me.isHorizontal() ? me.width : me.height;\n\n\t\t\tvar capacity = Math.floor(innerWidth / tickLabelWidth);\n\t\t\treturn capacity > 0 ? capacity : 1;\n\t\t}\n\t});\n\n\tscaleService.registerScaleType('time', TimeScale, defaultConfig);\n};\n","'use strict';\n\nmodule.exports = require('./helpers.core');\nmodule.exports.easing = require('./helpers.easing');\nmodule.exports.canvas = require('./helpers.canvas');\nmodule.exports.options = require('./helpers.options');\n","'use strict';\n\nvar helpers = require('./helpers.core');\n\n/**\n * @namespace Chart.helpers.canvas\n */\nvar exports = module.exports = {\n\t/**\n\t * Clears the entire canvas associated to the given `chart`.\n\t * @param {Chart} chart - The chart for which to clear the canvas.\n\t */\n\tclear: function(chart) {\n\t\tchart.ctx.clearRect(0, 0, chart.width, chart.height);\n\t},\n\n\t/**\n\t * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n\t * given size (width, height) and the same `radius` for all corners.\n\t * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n\t * @param {Number} x - The x axis of the coordinate for the rectangle starting point.\n\t * @param {Number} y - The y axis of the coordinate for the rectangle starting point.\n\t * @param {Number} width - The rectangle's width.\n\t * @param {Number} height - The rectangle's height.\n\t * @param {Number} radius - The rounded amount (in pixels) for the four corners.\n\t * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n\t */\n\troundedRect: function(ctx, x, y, width, height, radius) {\n\t\tif (radius) {\n\t\t\t// NOTE(SB) `epsilon` helps to prevent minor artifacts appearing\n\t\t\t// on Chrome when `r` is exactly half the height or the width.\n\t\t\tvar epsilon = 0.0000001;\n\t\t\tvar r = Math.min(radius, (height / 2) - epsilon, (width / 2) - epsilon);\n\n\t\t\tctx.moveTo(x + r, y);\n\t\t\tctx.lineTo(x + width - r, y);\n\t\t\tctx.arcTo(x + width, y, x + width, y + r, r);\n\t\t\tctx.lineTo(x + width, y + height - r);\n\t\t\tctx.arcTo(x + width, y + height, x + width - r, y + height, r);\n\t\t\tctx.lineTo(x + r, y + height);\n\t\t\tctx.arcTo(x, y + height, x, y + height - r, r);\n\t\t\tctx.lineTo(x, y + r);\n\t\t\tctx.arcTo(x, y, x + r, y, r);\n\t\t\tctx.closePath();\n\t\t\tctx.moveTo(x, y);\n\t\t} else {\n\t\t\tctx.rect(x, y, width, height);\n\t\t}\n\t},\n\n\tdrawPoint: function(ctx, style, radius, x, y, rotation) {\n\t\tvar type, edgeLength, xOffset, yOffset, height, size;\n\t\trotation = rotation || 0;\n\n\t\tif (style && typeof style === 'object') {\n\t\t\ttype = style.toString();\n\t\t\tif (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n\t\t\t\tctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (isNaN(radius) || radius <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tctx.save();\n\t\tctx.translate(x, y);\n\t\tctx.rotate(rotation * Math.PI / 180);\n\t\tctx.beginPath();\n\n\t\tswitch (style) {\n\t\t// Default includes circle\n\t\tdefault:\n\t\t\tctx.arc(0, 0, radius, 0, Math.PI * 2);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'triangle':\n\t\t\tedgeLength = 3 * radius / Math.sqrt(3);\n\t\t\theight = edgeLength * Math.sqrt(3) / 2;\n\t\t\tctx.moveTo(-edgeLength / 2, height / 3);\n\t\t\tctx.lineTo(edgeLength / 2, height / 3);\n\t\t\tctx.lineTo(0, -2 * height / 3);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'rect':\n\t\t\tsize = 1 / Math.SQRT2 * radius;\n\t\t\tctx.rect(-size, -size, 2 * size, 2 * size);\n\t\t\tbreak;\n\t\tcase 'rectRounded':\n\t\t\tvar offset = radius / Math.SQRT2;\n\t\t\tvar leftX = -offset;\n\t\t\tvar topY = -offset;\n\t\t\tvar sideSize = Math.SQRT2 * radius;\n\n\t\t\t// NOTE(SB) the rounded rect implementation changed to use `arcTo`\n\t\t\t// instead of `quadraticCurveTo` since it generates better results\n\t\t\t// when rect is almost a circle. 0.425 (instead of 0.5) produces\n\t\t\t// results visually closer to the previous impl.\n\t\t\tthis.roundedRect(ctx, leftX, topY, sideSize, sideSize, radius * 0.425);\n\t\t\tbreak;\n\t\tcase 'rectRot':\n\t\t\tsize = 1 / Math.SQRT2 * radius;\n\t\t\tctx.moveTo(-size, 0);\n\t\t\tctx.lineTo(0, size);\n\t\t\tctx.lineTo(size, 0);\n\t\t\tctx.lineTo(0, -size);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'cross':\n\t\t\tctx.moveTo(0, radius);\n\t\t\tctx.lineTo(0, -radius);\n\t\t\tctx.moveTo(-radius, 0);\n\t\t\tctx.lineTo(radius, 0);\n\t\t\tbreak;\n\t\tcase 'crossRot':\n\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\n\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\n\t\t\tctx.moveTo(-xOffset, -yOffset);\n\t\t\tctx.lineTo(xOffset, yOffset);\n\t\t\tctx.moveTo(-xOffset, yOffset);\n\t\t\tctx.lineTo(xOffset, -yOffset);\n\t\t\tbreak;\n\t\tcase 'star':\n\t\t\tctx.moveTo(0, radius);\n\t\t\tctx.lineTo(0, -radius);\n\t\t\tctx.moveTo(-radius, 0);\n\t\t\tctx.lineTo(radius, 0);\n\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\n\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\n\t\t\tctx.moveTo(-xOffset, -yOffset);\n\t\t\tctx.lineTo(xOffset, yOffset);\n\t\t\tctx.moveTo(-xOffset, yOffset);\n\t\t\tctx.lineTo(xOffset, -yOffset);\n\t\t\tbreak;\n\t\tcase 'line':\n\t\t\tctx.moveTo(-radius, 0);\n\t\t\tctx.lineTo(radius, 0);\n\t\t\tbreak;\n\t\tcase 'dash':\n\t\t\tctx.moveTo(0, 0);\n\t\t\tctx.lineTo(radius, 0);\n\t\t\tbreak;\n\t\t}\n\n\t\tctx.fill();\n\t\tctx.stroke();\n\t\tctx.restore();\n\t},\n\n\tclipArea: function(ctx, area) {\n\t\tctx.save();\n\t\tctx.beginPath();\n\t\tctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n\t\tctx.clip();\n\t},\n\n\tunclipArea: function(ctx) {\n\t\tctx.restore();\n\t},\n\n\tlineTo: function(ctx, previous, target, flip) {\n\t\tif (target.steppedLine) {\n\t\t\tif ((target.steppedLine === 'after' && !flip) || (target.steppedLine !== 'after' && flip)) {\n\t\t\t\tctx.lineTo(previous.x, target.y);\n\t\t\t} else {\n\t\t\t\tctx.lineTo(target.x, previous.y);\n\t\t\t}\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!target.tension) {\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tctx.bezierCurveTo(\n\t\t\tflip ? previous.controlPointPreviousX : previous.controlPointNextX,\n\t\t\tflip ? previous.controlPointPreviousY : previous.controlPointNextY,\n\t\t\tflip ? target.controlPointNextX : target.controlPointPreviousX,\n\t\t\tflip ? target.controlPointNextY : target.controlPointPreviousY,\n\t\t\ttarget.x,\n\t\t\ttarget.y);\n\t}\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n * @namespace Chart.helpers.clear\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.clear = exports.clear;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n * @namespace Chart.helpers.drawRoundedRectangle\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.drawRoundedRectangle = function(ctx) {\n\tctx.beginPath();\n\texports.roundedRect.apply(exports, arguments);\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\tChart.Scatter = function(context, config) {\n\t\tconfig.type = 'scatter';\n\t\treturn new Chart(context, config);\n\t};\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Doughnut = function(context, config) {\n\t\tconfig.type = 'doughnut';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\n/**\n * @namespace Chart.helpers\n */\nvar helpers = {\n\t/**\n\t * An empty function that can be used, for example, for optional callback.\n\t */\n\tnoop: function() {},\n\n\t/**\n\t * Returns a unique id, sequentially generated from a global variable.\n\t * @returns {Number}\n\t * @function\n\t */\n\tuid: (function() {\n\t\tvar id = 0;\n\t\treturn function() {\n\t\t\treturn id++;\n\t\t};\n\t}()),\n\n\t/**\n\t * Returns true if `value` is neither null nor undefined, else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @since 2.7.0\n\t */\n\tisNullOrUndef: function(value) {\n\t\treturn value === null || typeof value === 'undefined';\n\t},\n\n\t/**\n\t * Returns true if `value` is an array, else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @function\n\t */\n\tisArray: Array.isArray ? Array.isArray : function(value) {\n\t\treturn Object.prototype.toString.call(value) === '[object Array]';\n\t},\n\n\t/**\n\t * Returns true if `value` is an object (excluding null), else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @since 2.7.0\n\t */\n\tisObject: function(value) {\n\t\treturn value !== null && Object.prototype.toString.call(value) === '[object Object]';\n\t},\n\n\t/**\n\t * Returns `value` if defined, else returns `defaultValue`.\n\t * @param {*} value - The value to return if defined.\n\t * @param {*} defaultValue - The value to return if `value` is undefined.\n\t * @returns {*}\n\t */\n\tvalueOrDefault: function(value, defaultValue) {\n\t\treturn typeof value === 'undefined' ? defaultValue : value;\n\t},\n\n\t/**\n\t * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n\t * @param {Array} value - The array to lookup for value at `index`.\n\t * @param {Number} index - The index in `value` to lookup for value.\n\t * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n\t * @returns {*}\n\t */\n\tvalueAtIndexOrDefault: function(value, index, defaultValue) {\n\t\treturn helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n\t},\n\n\t/**\n\t * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n\t * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n\t * @param {Function} fn - The function to call.\n\t * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n\t * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @returns {*}\n\t */\n\tcallback: function(fn, args, thisArg) {\n\t\tif (fn && typeof fn.call === 'function') {\n\t\t\treturn fn.apply(thisArg, args);\n\t\t}\n\t},\n\n\t/**\n\t * Note(SB) for performance sake, this method should only be used when loopable type\n\t * is unknown or in none intensive code (not called often and small loopable). Else\n\t * it's preferable to use a regular for() loop and save extra function calls.\n\t * @param {Object|Array} loopable - The object or array to be iterated.\n\t * @param {Function} fn - The function to call for each item.\n\t * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @param {Boolean} [reverse] - If true, iterates backward on the loopable.\n\t */\n\teach: function(loopable, fn, thisArg, reverse) {\n\t\tvar i, len, keys;\n\t\tif (helpers.isArray(loopable)) {\n\t\t\tlen = loopable.length;\n\t\t\tif (reverse) {\n\t\t\t\tfor (i = len - 1; i >= 0; i--) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (helpers.isObject(loopable)) {\n\t\t\tkeys = Object.keys(loopable);\n\t\t\tlen = keys.length;\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tfn.call(thisArg, loopable[keys[i]], keys[i]);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n\t * @see http://stackoverflow.com/a/14853974\n\t * @param {Array} a0 - The array to compare\n\t * @param {Array} a1 - The array to compare\n\t * @returns {Boolean}\n\t */\n\tarrayEquals: function(a0, a1) {\n\t\tvar i, ilen, v0, v1;\n\n\t\tif (!a0 || !a1 || a0.length !== a1.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (i = 0, ilen = a0.length; i < ilen; ++i) {\n\t\t\tv0 = a0[i];\n\t\t\tv1 = a1[i];\n\n\t\t\tif (v0 instanceof Array && v1 instanceof Array) {\n\t\t\t\tif (!helpers.arrayEquals(v0, v1)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else if (v0 !== v1) {\n\t\t\t\t// NOTE: two different object instances will never be equal: {x:20} != {x:20}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns a deep copy of `source` without keeping references on objects and arrays.\n\t * @param {*} source - The value to clone.\n\t * @returns {*}\n\t */\n\tclone: function(source) {\n\t\tif (helpers.isArray(source)) {\n\t\t\treturn source.map(helpers.clone);\n\t\t}\n\n\t\tif (helpers.isObject(source)) {\n\t\t\tvar target = {};\n\t\t\tvar keys = Object.keys(source);\n\t\t\tvar klen = keys.length;\n\t\t\tvar k = 0;\n\n\t\t\tfor (; k < klen; ++k) {\n\t\t\t\ttarget[keys[k]] = helpers.clone(source[keys[k]]);\n\t\t\t}\n\n\t\t\treturn target;\n\t\t}\n\n\t\treturn source;\n\t},\n\n\t/**\n\t * The default merger when Chart.helpers.merge is called without merger option.\n\t * Note(SB): this method is also used by configMerge and scaleMerge as fallback.\n\t * @private\n\t */\n\t_merger: function(key, target, source, options) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.merge(tval, sval, options);\n\t\t} else {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Merges source[key] in target[key] only if target[key] is undefined.\n\t * @private\n\t */\n\t_mergerIf: function(key, target, source) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.mergeIf(tval, sval);\n\t\t} else if (!target.hasOwnProperty(key)) {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` with the given `options`.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {Object} target - The target object in which all sources are merged into.\n\t * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n\t * @param {Object} [options] - Merging options:\n\t * @param {Function} [options.merger] - The merge method (key, target, source, options)\n\t * @returns {Object} The `target` object.\n\t */\n\tmerge: function(target, source, options) {\n\t\tvar sources = helpers.isArray(source) ? source : [source];\n\t\tvar ilen = sources.length;\n\t\tvar merge, i, keys, klen, k;\n\n\t\tif (!helpers.isObject(target)) {\n\t\t\treturn target;\n\t\t}\n\n\t\toptions = options || {};\n\t\tmerge = options.merger || helpers._merger;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!helpers.isObject(source)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tkeys = Object.keys(source);\n\t\t\tfor (k = 0, klen = keys.length; k < klen; ++k) {\n\t\t\t\tmerge(keys[k], target, source, options);\n\t\t\t}\n\t\t}\n\n\t\treturn target;\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {Object} target - The target object in which all sources are merged into.\n\t * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n\t * @returns {Object} The `target` object.\n\t */\n\tmergeIf: function(target, source) {\n\t\treturn helpers.merge(target, source, {merger: helpers._mergerIf});\n\t},\n\n\t/**\n\t * Applies the contents of two or more objects together into the first object.\n\t * @param {Object} target - The target object in which all objects are merged into.\n\t * @param {Object} arg1 - Object containing additional properties to merge in target.\n\t * @param {Object} argN - Additional objects containing properties to merge in target.\n\t * @returns {Object} The `target` object.\n\t */\n\textend: function(target) {\n\t\tvar setFn = function(value, key) {\n\t\t\ttarget[key] = value;\n\t\t};\n\t\tfor (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n\t\t\thelpers.each(arguments[i], setFn);\n\t\t}\n\t\treturn target;\n\t},\n\n\t/**\n\t * Basic javascript inheritance based on the model created in Backbone.js\n\t */\n\tinherits: function(extensions) {\n\t\tvar me = this;\n\t\tvar ChartElement = (extensions && extensions.hasOwnProperty('constructor')) ? extensions.constructor : function() {\n\t\t\treturn me.apply(this, arguments);\n\t\t};\n\n\t\tvar Surrogate = function() {\n\t\t\tthis.constructor = ChartElement;\n\t\t};\n\n\t\tSurrogate.prototype = me.prototype;\n\t\tChartElement.prototype = new Surrogate();\n\t\tChartElement.extend = helpers.inherits;\n\n\t\tif (extensions) {\n\t\t\thelpers.extend(ChartElement.prototype, extensions);\n\t\t}\n\n\t\tChartElement.__super__ = me.prototype;\n\t\treturn ChartElement;\n\t}\n};\n\nmodule.exports = helpers;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.callback instead.\n * @function Chart.helpers.callCallback\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\nhelpers.callCallback = helpers.callback;\n\n/**\n * Provided for backward compatibility, use Array.prototype.indexOf instead.\n * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n * @function Chart.helpers.indexOf\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.indexOf = function(array, item, fromIndex) {\n\treturn Array.prototype.indexOf.call(array, item, fromIndex);\n};\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n * @function Chart.helpers.getValueOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueOrDefault = helpers.valueOrDefault;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n * @function Chart.helpers.getValueAtIndexOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\n\nvar globalDefaults = defaults.global;\n\ndefaults._set('global', {\n\telements: {\n\t\tline: {\n\t\t\ttension: 0.4,\n\t\t\tbackgroundColor: globalDefaults.defaultColor,\n\t\t\tborderWidth: 3,\n\t\t\tborderColor: globalDefaults.defaultColor,\n\t\t\tborderCapStyle: 'butt',\n\t\t\tborderDash: [],\n\t\t\tborderDashOffset: 0.0,\n\t\t\tborderJoinStyle: 'miter',\n\t\t\tcapBezierPoints: true,\n\t\t\tfill: true, // do we fill in the area between the line and its base axis\n\t\t}\n\t}\n});\n\nmodule.exports = Element.extend({\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar vm = me._view;\n\t\tvar ctx = me._chart.ctx;\n\t\tvar spanGaps = vm.spanGaps;\n\t\tvar points = me._children.slice(); // clone array\n\t\tvar globalOptionLineElements = globalDefaults.elements.line;\n\t\tvar lastDrawnIndex = -1;\n\t\tvar index, current, previous, currentVM;\n\n\t\t// If we are looping, adding the first point again\n\t\tif (me._loop && points.length) {\n\t\t\tpoints.push(points[0]);\n\t\t}\n\n\t\tctx.save();\n\n\t\t// Stroke Line Options\n\t\tctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;\n\n\t\t// IE 9 and 10 do not support line dash\n\t\tif (ctx.setLineDash) {\n\t\t\tctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n\t\t}\n\n\t\tctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;\n\t\tctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n\t\tctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;\n\t\tctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;\n\n\t\t// Stroke Line\n\t\tctx.beginPath();\n\t\tlastDrawnIndex = -1;\n\n\t\tfor (index = 0; index < points.length; ++index) {\n\t\t\tcurrent = points[index];\n\t\t\tprevious = helpers.previousItem(points, index);\n\t\t\tcurrentVM = current._view;\n\n\t\t\t// First point moves to it's starting position no matter what\n\t\t\tif (index === 0) {\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprevious = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tif ((lastDrawnIndex !== (index - 1) && !spanGaps) || lastDrawnIndex === -1) {\n\t\t\t\t\t\t// There was a gap and this is the first point after the gap\n\t\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Line to next point\n\t\t\t\t\t\thelpers.canvas.lineTo(ctx, previous._view, current._view);\n\t\t\t\t\t}\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tctx.stroke();\n\t\tctx.restore();\n\t}\n});\n","'use strict';\n\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\tplugins: {}\n});\n\n/**\n * The plugin service singleton\n * @namespace Chart.plugins\n * @since 2.1.0\n */\nmodule.exports = {\n\t/**\n\t * Globally registered plugins.\n\t * @private\n\t */\n\t_plugins: [],\n\n\t/**\n\t * This identifier is used to invalidate the descriptors cache attached to each chart\n\t * when a global plugin is registered or unregistered. In this case, the cache ID is\n\t * incremented and descriptors are regenerated during following API calls.\n\t * @private\n\t */\n\t_cacheId: 0,\n\n\t/**\n\t * Registers the given plugin(s) if not already registered.\n\t * @param {Array|Object} plugins plugin instance(s).\n\t */\n\tregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tif (p.indexOf(plugin) === -1) {\n\t\t\t\tp.push(plugin);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Unregisters the given plugin(s) only if registered.\n\t * @param {Array|Object} plugins plugin instance(s).\n\t */\n\tunregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tvar idx = p.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\tp.splice(idx, 1);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Remove all registered plugins.\n\t * @since 2.1.5\n\t */\n\tclear: function() {\n\t\tthis._plugins = [];\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Returns the number of registered plugins?\n\t * @returns {Number}\n\t * @since 2.1.5\n\t */\n\tcount: function() {\n\t\treturn this._plugins.length;\n\t},\n\n\t/**\n\t * Returns all registered plugin instances.\n\t * @returns {Array} array of plugin objects.\n\t * @since 2.1.5\n\t */\n\tgetAll: function() {\n\t\treturn this._plugins;\n\t},\n\n\t/**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Object} chart - The chart instance for which plugins should be called.\n\t * @param {String} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Array} [args] - Extra arguments to apply to the hook call.\n\t * @returns {Boolean} false if any of the plugins return false, else returns true.\n\t */\n\tnotify: function(chart, hook, args) {\n\t\tvar descriptors = this.descriptors(chart);\n\t\tvar ilen = descriptors.length;\n\t\tvar i, descriptor, plugin, params, method;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tdescriptor = descriptors[i];\n\t\t\tplugin = descriptor.plugin;\n\t\t\tmethod = plugin[hook];\n\t\t\tif (typeof method === 'function') {\n\t\t\t\tparams = [chart].concat(args || []);\n\t\t\t\tparams.push(descriptor.options);\n\t\t\t\tif (method.apply(plugin, params) === false) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns descriptors of enabled plugins for the given chart.\n\t * @returns {Array} [{ plugin, options }]\n\t * @private\n\t */\n\tdescriptors: function(chart) {\n\t\tvar cache = chart.$plugins || (chart.$plugins = {});\n\t\tif (cache.id === this._cacheId) {\n\t\t\treturn cache.descriptors;\n\t\t}\n\n\t\tvar plugins = [];\n\t\tvar descriptors = [];\n\t\tvar config = (chart && chart.config) || {};\n\t\tvar options = (config.options && config.options.plugins) || {};\n\n\t\tthis._plugins.concat(config.plugins || []).forEach(function(plugin) {\n\t\t\tvar idx = plugins.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar id = plugin.id;\n\t\t\tvar opts = options[id];\n\t\t\tif (opts === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (opts === true) {\n\t\t\t\topts = helpers.clone(defaults.global.plugins[id]);\n\t\t\t}\n\n\t\t\tplugins.push(plugin);\n\t\t\tdescriptors.push({\n\t\t\t\tplugin: plugin,\n\t\t\t\toptions: opts || {}\n\t\t\t});\n\t\t});\n\n\t\tcache.descriptors = descriptors;\n\t\tcache.id = this._cacheId;\n\t\treturn descriptors;\n\t},\n\n\t/**\n\t * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n\t * but in some cases, this reference can be changed by the user when updating options.\n\t * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t * @private\n\t */\n\t_invalidate: function(chart) {\n\t\tdelete chart.$plugins;\n\t}\n};\n\n/**\n * Plugin extension hooks.\n * @interface IPlugin\n * @since 2.1.0\n */\n/**\n * @method IPlugin#beforeInit\n * @desc Called before initializing `chart`.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#afterInit\n * @desc Called after `chart` has been initialized and before the first update.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeUpdate\n * @desc Called before updating `chart`. If any plugin returns `false`, the update\n * is cancelled (and thus subsequent render(s)) until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart update.\n */\n/**\n * @method IPlugin#afterUpdate\n * @desc Called after `chart` has been updated and before rendering. Note that this\n * hook will not be called if the chart update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetsUpdate\n * @desc Called before updating the `chart` datasets. If any plugin returns `false`,\n * the datasets update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} false to cancel the datasets update.\n * @since version 2.1.5\n*/\n/**\n * @method IPlugin#afterDatasetsUpdate\n * @desc Called after the `chart` datasets have been updated. Note that this hook\n * will not be called if the datasets update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @since version 2.1.5\n */\n/**\n * @method IPlugin#beforeDatasetUpdate\n * @desc Called before updating the `chart` dataset at the given `args.index`. If any plugin\n * returns `false`, the datasets update is cancelled until another `update` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetUpdate\n * @desc Called after the `chart` datasets at the given `args.index` has been updated. Note\n * that this hook will not be called if the datasets update has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeLayout\n * @desc Called before laying out `chart`. If any plugin returns `false`,\n * the layout update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart layout.\n */\n/**\n * @method IPlugin#afterLayout\n * @desc Called after the `chart` has been layed out. Note that this hook will not\n * be called if the layout update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeRender\n * @desc Called before rendering `chart`. If any plugin returns `false`,\n * the rendering is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart rendering.\n */\n/**\n * @method IPlugin#afterRender\n * @desc Called after the `chart` has been fully rendered (and animation completed). Note\n * that this hook will not be called if the rendering has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDraw\n * @desc Called before drawing `chart` at every animation frame specified by the given\n * easing value. If any plugin returns `false`, the frame drawing is cancelled until\n * another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart drawing.\n */\n/**\n * @method IPlugin#afterDraw\n * @desc Called after the `chart` has been drawn for the specific easing value. Note\n * that this hook will not be called if the drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetsDraw\n * @desc Called before drawing the `chart` datasets. If any plugin returns `false`,\n * the datasets drawing is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetsDraw\n * @desc Called after the `chart` datasets have been drawn. Note that this hook\n * will not be called if the datasets drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetDraw\n * @desc Called before drawing the `chart` dataset at the given `args.index` (datasets\n * are drawn in the reverse order). If any plugin returns `false`, the datasets drawing\n * is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetDraw\n * @desc Called after the `chart` datasets at the given `args.index` have been drawn\n * (datasets are drawn in the reverse order). Note that this hook will not be called\n * if the datasets drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeTooltipDraw\n * @desc Called before drawing the `tooltip`. If any plugin returns `false`,\n * the tooltip drawing is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart tooltip drawing.\n */\n/**\n * @method IPlugin#afterTooltipDraw\n * @desc Called after drawing the `tooltip`. Note that this hook will not\n * be called if the tooltip drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeEvent\n * @desc Called before processing the specified `event`. If any plugin returns `false`,\n * the event will be discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#afterEvent\n * @desc Called after the `event` has been consumed. Note that this hook\n * will not be called if the `event` has been previously discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#resize\n * @desc Called after the chart as been resized.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} size - The new canvas display size (eq. canvas.style width & height).\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#destroy\n * @desc Called after the chart as been destroyed.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n","/**\n * @namespace Chart\n */\nvar Chart = require('./core/core')();\n\nChart.helpers = require('./helpers/index');\n\n// @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\nrequire('./core/core.helpers')(Chart);\n\nChart.Animation = require('./core/core.animation');\nChart.animationService = require('./core/core.animations');\nChart.defaults = require('./core/core.defaults');\nChart.Element = require('./core/core.element');\nChart.elements = require('./elements/index');\nChart.Interaction = require('./core/core.interaction');\nChart.layouts = require('./core/core.layouts');\nChart.platform = require('./platforms/platform');\nChart.plugins = require('./core/core.plugins');\nChart.Scale = require('./core/core.scale');\nChart.scaleService = require('./core/core.scaleService');\nChart.Ticks = require('./core/core.ticks');\nChart.Tooltip = require('./core/core.tooltip');\n\nrequire('./core/core.controller')(Chart);\nrequire('./core/core.datasetController')(Chart);\n\nrequire('./scales/scale.linearbase')(Chart);\nrequire('./scales/scale.category')(Chart);\nrequire('./scales/scale.linear')(Chart);\nrequire('./scales/scale.logarithmic')(Chart);\nrequire('./scales/scale.radialLinear')(Chart);\nrequire('./scales/scale.time')(Chart);\n\n// Controllers must be loaded after elements\n// See Chart.core.datasetController.dataElementType\nrequire('./controllers/controller.bar')(Chart);\nrequire('./controllers/controller.bubble')(Chart);\nrequire('./controllers/controller.doughnut')(Chart);\nrequire('./controllers/controller.line')(Chart);\nrequire('./controllers/controller.polarArea')(Chart);\nrequire('./controllers/controller.radar')(Chart);\nrequire('./controllers/controller.scatter')(Chart);\n\nrequire('./charts/Chart.Bar')(Chart);\nrequire('./charts/Chart.Bubble')(Chart);\nrequire('./charts/Chart.Doughnut')(Chart);\nrequire('./charts/Chart.Line')(Chart);\nrequire('./charts/Chart.PolarArea')(Chart);\nrequire('./charts/Chart.Radar')(Chart);\nrequire('./charts/Chart.Scatter')(Chart);\n\n// Loading built-in plugins\nvar plugins = require('./plugins');\nfor (var k in plugins) {\n\tif (plugins.hasOwnProperty(k)) {\n\t\tChart.plugins.register(plugins[k]);\n\t}\n}\n\nChart.platform.initialize();\n\nmodule.exports = Chart;\nif (typeof window !== 'undefined') {\n\twindow.Chart = Chart;\n}\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Legend\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.Legend = plugins.legend._element;\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Title\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.Title = plugins.title._element;\n\n/**\n * Provided for backward compatibility, use Chart.plugins instead\n * @namespace Chart.pluginService\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.pluginService = Chart.plugins;\n\n/**\n * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n * effect, instead simply create/register plugins via plain JavaScript objects.\n * @interface Chart.PluginBase\n * @deprecated since version 2.5.0\n * @todo remove at version 3\n * @private\n */\nChart.PluginBase = Chart.Element.extend({});\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas instead.\n * @namespace Chart.canvasHelpers\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\nChart.canvasHelpers = Chart.helpers.canvas;\n\n/**\n * Provided for backward compatibility, use Chart.layouts instead.\n * @namespace Chart.layoutService\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\nChart.layoutService = Chart.layouts;\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('doughnut', {\n\tanimation: {\n\t\t// Boolean - Whether we animate the rotation of the Doughnut\n\t\tanimateRotate: true,\n\t\t// Boolean - Whether we animate scaling the Doughnut from the centre\n\t\tanimateScale: false\n\t},\n\thover: {\n\t\tmode: 'single'\n\t},\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc && arc.custom || {};\n\t\t\t\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\t// toggle visibility of index if exists\n\t\t\t\tif (meta.data[index]) {\n\t\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// The percentage of the chart that we cut out of the middle.\n\tcutoutPercentage: 50,\n\n\t// The rotation of the chart, where the first data arc begins.\n\trotation: Math.PI * -0.5,\n\n\t// The total circumference of the chart.\n\tcircumference: Math.PI * 2.0,\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar dataLabel = data.labels[tooltipItem.index];\n\t\t\t\tvar value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n\t\t\t\tif (helpers.isArray(dataLabel)) {\n\t\t\t\t\t// show value on first line of multiline label\n\t\t\t\t\t// need to clone because we are changing the value\n\t\t\t\t\tdataLabel = dataLabel.slice();\n\t\t\t\t\tdataLabel[0] += value;\n\t\t\t\t} else {\n\t\t\t\t\tdataLabel += value;\n\t\t\t\t}\n\n\t\t\t\treturn dataLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\ndefaults._set('pie', helpers.clone(defaults.doughnut));\ndefaults._set('pie', {\n\tcutoutPercentage: 0\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Arc,\n\n\t\tlinkScales: helpers.noop,\n\n\t\t// Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n\t\tgetRingIndex: function(datasetIndex) {\n\t\t\tvar ringIndex = 0;\n\n\t\t\tfor (var j = 0; j < datasetIndex; ++j) {\n\t\t\t\tif (this.chart.isDatasetVisible(j)) {\n\t\t\t\t\t++ringIndex;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn ringIndex;\n\t\t},\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar opts = chart.options;\n\t\t\tvar arcOpts = opts.elements.arc;\n\t\t\tvar availableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth;\n\t\t\tvar availableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth;\n\t\t\tvar minSize = Math.min(availableWidth, availableHeight);\n\t\t\tvar offset = {x: 0, y: 0};\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar cutoutPercentage = opts.cutoutPercentage;\n\t\t\tvar circumference = opts.circumference;\n\n\t\t\t// If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\t\t\tif (circumference < Math.PI * 2.0) {\n\t\t\t\tvar startAngle = opts.rotation % (Math.PI * 2.0);\n\t\t\t\tstartAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n\t\t\t\tvar endAngle = startAngle + circumference;\n\t\t\t\tvar start = {x: Math.cos(startAngle), y: Math.sin(startAngle)};\n\t\t\t\tvar end = {x: Math.cos(endAngle), y: Math.sin(endAngle)};\n\t\t\t\tvar contains0 = (startAngle <= 0 && endAngle >= 0) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);\n\t\t\t\tvar contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);\n\t\t\t\tvar contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);\n\t\t\t\tvar contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);\n\t\t\t\tvar cutout = cutoutPercentage / 100.0;\n\t\t\t\tvar min = {x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))};\n\t\t\t\tvar max = {x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))};\n\t\t\t\tvar size = {width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5};\n\t\t\t\tminSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n\t\t\t\toffset = {x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5};\n\t\t\t}\n\n\t\t\tchart.borderWidth = me.getMaxBorderWidth(meta.data);\n\t\t\tchart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n\t\t\tchart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 0, 0);\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\t\t\tchart.offsetX = offset.x * chart.outerRadius;\n\t\t\tchart.offsetY = offset.y * chart.outerRadius;\n\n\t\t\tmeta.total = me.calculateTotal();\n\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.getRingIndex(me.index));\n\t\t\tme.innerRadius = Math.max(me.outerRadius - chart.radiusLength, 0);\n\n\t\t\thelpers.each(meta.data, function(arc, index) {\n\t\t\t\tme.updateElement(arc, index, reset);\n\t\t\t});\n\t\t},\n\n\t\tupdateElement: function(arc, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar opts = chart.options;\n\t\t\tvar animationOpts = opts.animation;\n\t\t\tvar centerX = (chartArea.left + chartArea.right) / 2;\n\t\t\tvar centerY = (chartArea.top + chartArea.bottom) / 2;\n\t\t\tvar startAngle = opts.rotation; // non reset case handled later\n\t\t\tvar endAngle = opts.rotation; // non reset case handled later\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n\t\t\tvar innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n\t\t\tvar outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\n\t\t\thelpers.extend(arc, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: centerX + chart.offsetX,\n\t\t\t\t\ty: centerY + chart.offsetY,\n\t\t\t\t\tstartAngle: startAngle,\n\t\t\t\t\tendAngle: endAngle,\n\t\t\t\t\tcircumference: circumference,\n\t\t\t\t\touterRadius: outerRadius,\n\t\t\t\t\tinnerRadius: innerRadius,\n\t\t\t\t\tlabel: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tvar model = arc._model;\n\n\t\t\t// Resets the visual styles\n\t\t\tvar custom = arc.custom || {};\n\t\t\tvar valueOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\tvar elementOpts = this.chart.options.elements.arc;\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\n\n\t\t\t// Set correct angles if not resetting\n\t\t\tif (!reset || !animationOpts.animateRotate) {\n\t\t\t\tif (index === 0) {\n\t\t\t\t\tmodel.startAngle = opts.rotation;\n\t\t\t\t} else {\n\t\t\t\t\tmodel.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n\t\t\t\t}\n\n\t\t\t\tmodel.endAngle = model.startAngle + model.circumference;\n\t\t\t}\n\n\t\t\tarc.pivot();\n\t\t},\n\n\t\tcalculateTotal: function() {\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar total = 0;\n\t\t\tvar value;\n\n\t\t\thelpers.each(meta.data, function(element, index) {\n\t\t\t\tvalue = dataset.data[index];\n\t\t\t\tif (!isNaN(value) && !element.hidden) {\n\t\t\t\t\ttotal += Math.abs(value);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t/* if (total === 0) {\n\t\t\t\ttotal = NaN;\n\t\t\t}*/\n\n\t\t\treturn total;\n\t\t},\n\n\t\tcalculateCircumference: function(value) {\n\t\t\tvar total = this.getMeta().total;\n\t\t\tif (total > 0 && !isNaN(value)) {\n\t\t\t\treturn (Math.PI * 2.0) * (Math.abs(value) / total);\n\t\t\t}\n\t\t\treturn 0;\n\t\t},\n\n\t\t// gets the max border or hover width to properly scale pie charts\n\t\tgetMaxBorderWidth: function(arcs) {\n\t\t\tvar max = 0;\n\t\t\tvar index = this.index;\n\t\t\tvar length = arcs.length;\n\t\t\tvar borderWidth;\n\t\t\tvar hoverWidth;\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tborderWidth = arcs[i]._model ? arcs[i]._model.borderWidth : 0;\n\t\t\t\thoverWidth = arcs[i]._chart ? arcs[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;\n\n\t\t\t\tmax = borderWidth > max ? borderWidth : max;\n\t\t\t\tmax = hoverWidth > max ? hoverWidth : max;\n\t\t\t}\n\t\t\treturn max;\n\t\t}\n\t});\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\telements: {\n\t\tarc: {\n\t\t\tbackgroundColor: defaults.global.defaultColor,\n\t\t\tborderColor: '#fff',\n\t\t\tborderWidth: 2\n\t\t}\n\t}\n});\n\nmodule.exports = Element.extend({\n\tinLabelRange: function(mouseX) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\treturn (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));\n\t\t}\n\t\treturn false;\n\t},\n\n\tinRange: function(chartX, chartY) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\tvar pointRelativePosition = helpers.getAngleFromPoint(vm, {x: chartX, y: chartY});\n\t\t\tvar\tangle = pointRelativePosition.angle;\n\t\t\tvar distance = pointRelativePosition.distance;\n\n\t\t\t// Sanitise angle range\n\t\t\tvar startAngle = vm.startAngle;\n\t\t\tvar endAngle = vm.endAngle;\n\t\t\twhile (endAngle < startAngle) {\n\t\t\t\tendAngle += 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle > endAngle) {\n\t\t\t\tangle -= 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle < startAngle) {\n\t\t\t\tangle += 2.0 * Math.PI;\n\t\t\t}\n\n\t\t\t// Check if within the range of the open/close angle\n\t\t\tvar betweenAngles = (angle >= startAngle && angle <= endAngle);\n\t\t\tvar withinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);\n\n\t\t\treturn (betweenAngles && withinRadius);\n\t\t}\n\t\treturn false;\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar halfAngle = (vm.startAngle + vm.endAngle) / 2;\n\t\tvar halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n\t\treturn {\n\t\t\tx: vm.x + Math.cos(halfAngle) * halfRadius,\n\t\t\ty: vm.y + Math.sin(halfAngle) * halfRadius\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\t\treturn Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\tvar centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2);\n\t\tvar rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n\n\t\treturn {\n\t\t\tx: vm.x + (Math.cos(centreAngle) * rangeFromCentre),\n\t\t\ty: vm.y + (Math.sin(centreAngle) * rangeFromCentre)\n\t\t};\n\t},\n\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar sA = vm.startAngle;\n\t\tvar eA = vm.endAngle;\n\n\t\tctx.beginPath();\n\n\t\tctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n\t\tctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n\n\t\tctx.closePath();\n\t\tctx.strokeStyle = vm.borderColor;\n\t\tctx.lineWidth = vm.borderWidth;\n\n\t\tctx.fillStyle = vm.backgroundColor;\n\n\t\tctx.fill();\n\t\tctx.lineJoin = 'bevel';\n\n\t\tif (vm.borderWidth) {\n\t\t\tctx.stroke();\n\t\t}\n\t}\n});\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar helpers = require('../helpers/index');\nvar scaleService = require('../core/core.scaleService');\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\tposition: 'left',\n\t\tticks: {\n\t\t\tcallback: Ticks.formatters.linear\n\t\t}\n\t};\n\n\tvar LinearScale = Chart.LinearScaleBase.extend({\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar chart = me.chart;\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar DEFAULT_MIN = 0;\n\t\t\tvar DEFAULT_MAX = 1;\n\n\t\t\tfunction IDMatches(meta) {\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t\t}\n\n\t\t\t// First Calculate the range\n\t\t\tme.min = null;\n\t\t\tme.max = null;\n\n\t\t\tvar hasStacks = opts.stacked;\n\t\t\tif (hasStacks === undefined) {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tif (hasStacks) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\t\thasStacks = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (opts.stacked || hasStacks) {\n\t\t\t\tvar valuesPerStack = {};\n\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tvar key = [\n\t\t\t\t\t\tmeta.type,\n\t\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\t\tmeta.stack\n\t\t\t\t\t].join('.');\n\n\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\tvaluesPerStack[key] = {\n\t\t\t\t\t\t\tpositiveValues: [],\n\t\t\t\t\t\t\tnegativeValues: []\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store these per type\n\t\t\t\t\tvar positiveValues = valuesPerStack[key].positiveValues;\n\t\t\t\t\tvar negativeValues = valuesPerStack[key].negativeValues;\n\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tpositiveValues[index] = positiveValues[index] || 0;\n\t\t\t\t\t\t\tnegativeValues[index] = negativeValues[index] || 0;\n\n\t\t\t\t\t\t\tif (opts.relativePoints) {\n\t\t\t\t\t\t\t\tpositiveValues[index] = 100;\n\t\t\t\t\t\t\t} else if (value < 0) {\n\t\t\t\t\t\t\t\tnegativeValues[index] += value;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tpositiveValues[index] += value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\thelpers.each(valuesPerStack, function(valuesForType) {\n\t\t\t\t\tvar values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n\t\t\t\t\tvar minVal = helpers.min(values);\n\t\t\t\t\tvar maxVal = helpers.max(values);\n\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tme.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n\t\t\tme.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX;\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\t\tthis.handleTickRangeOptions();\n\t\t},\n\t\tgetTickLimit: function() {\n\t\t\tvar maxTicks;\n\t\t\tvar me = this;\n\t\t\tvar tickOpts = me.options.ticks;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));\n\t\t\t} else {\n\t\t\t\t// The factor of 2 used to scale the font size has been experimentally determined.\n\t\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, defaults.global.defaultFontSize);\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));\n\t\t\t}\n\n\t\t\treturn maxTicks;\n\t\t},\n\t\t// Called after the ticks are built. We need\n\t\thandleDirectionalChanges: function() {\n\t\t\tif (!this.isHorizontal()) {\n\t\t\t\t// We are in a vertical orientation. The top value is the highest. So reverse the array\n\t\t\t\tthis.ticks.reverse();\n\t\t\t}\n\t\t},\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\t// Utils\n\t\tgetPixelForValue: function(value) {\n\t\t\t// This must be called after fit has been run so that\n\t\t\t// this.left, this.top, this.right, and this.bottom have been defined\n\t\t\tvar me = this;\n\t\t\tvar start = me.start;\n\n\t\t\tvar rightValue = +me.getRightValue(value);\n\t\t\tvar pixel;\n\t\t\tvar range = me.end - start;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tpixel = me.left + (me.width / range * (rightValue - start));\n\t\t\t} else {\n\t\t\t\tpixel = me.bottom - (me.height / range * (rightValue - start));\n\t\t\t}\n\t\t\treturn pixel;\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar innerDimension = isHorizontal ? me.width : me.height;\n\t\t\tvar offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n\t\t\treturn me.start + ((me.end - me.start) * offset);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.ticksAsNumbers[index]);\n\t\t}\n\t});\n\n\tscaleService.registerScaleType('linear', LinearScale, defaultConfig);\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\nvar Scale = require('../core/core.scale');\nvar scaleService = require('../core/core.scaleService');\nvar Ticks = require('../core/core.ticks');\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\nfunction generateTicks(generationOptions, dataRange) {\n\tvar ticks = [];\n\tvar valueOrDefault = helpers.valueOrDefault;\n\n\t// Figure out what the max number of ticks we can support it is based on the size of\n\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t// the graph\n\tvar tickVal = valueOrDefault(generationOptions.min, Math.pow(10, Math.floor(helpers.log10(dataRange.min))));\n\n\tvar endExp = Math.floor(helpers.log10(dataRange.max));\n\tvar endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n\tvar exp, significand;\n\n\tif (tickVal === 0) {\n\t\texp = Math.floor(helpers.log10(dataRange.minNotZero));\n\t\tsignificand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n\n\t\tticks.push(tickVal);\n\t\ttickVal = significand * Math.pow(10, exp);\n\t} else {\n\t\texp = Math.floor(helpers.log10(tickVal));\n\t\tsignificand = Math.floor(tickVal / Math.pow(10, exp));\n\t}\n\tvar precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n\tdo {\n\t\tticks.push(tickVal);\n\n\t\t++significand;\n\t\tif (significand === 10) {\n\t\t\tsignificand = 1;\n\t\t\t++exp;\n\t\t\tprecision = exp >= 0 ? 1 : precision;\n\t\t}\n\n\t\ttickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n\t} while (exp < endExp || (exp === endExp && significand < endSignificand));\n\n\tvar lastTick = valueOrDefault(generationOptions.max, tickVal);\n\tticks.push(lastTick);\n\n\treturn ticks;\n}\n\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\tposition: 'left',\n\n\t\t// label settings\n\t\tticks: {\n\t\t\tcallback: Ticks.formatters.logarithmic\n\t\t}\n\t};\n\n\tvar LogarithmicScale = Scale.extend({\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar chart = me.chart;\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tfunction IDMatches(meta) {\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t\t}\n\n\t\t\t// Calculate Range\n\t\t\tme.min = null;\n\t\t\tme.max = null;\n\t\t\tme.minNotZero = null;\n\n\t\t\tvar hasStacks = opts.stacked;\n\t\t\tif (hasStacks === undefined) {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tif (hasStacks) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\t\thasStacks = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (opts.stacked || hasStacks) {\n\t\t\t\tvar valuesPerStack = {};\n\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tvar key = [\n\t\t\t\t\t\tmeta.type,\n\t\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\t\tmeta.stack\n\t\t\t\t\t].join('.');\n\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\t\tvaluesPerStack[key] = [];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar values = valuesPerStack[key];\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvalues[index] = values[index] || 0;\n\t\t\t\t\t\t\tvalues[index] += value;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\thelpers.each(valuesPerStack, function(valuesForType) {\n\t\t\t\t\tif (valuesForType.length > 0) {\n\t\t\t\t\t\tvar minVal = helpers.min(valuesForType);\n\t\t\t\t\t\tvar maxVal = helpers.max(valuesForType);\n\t\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n\t\t\t\t\t\t\t\tme.minNotZero = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max\n\t\t\tthis.handleTickRangeOptions();\n\t\t},\n\t\thandleTickRangeOptions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\t\tvar DEFAULT_MIN = 1;\n\t\t\tvar DEFAULT_MAX = 10;\n\n\t\t\tme.min = valueOrDefault(tickOpts.min, me.min);\n\t\t\tme.max = valueOrDefault(tickOpts.max, me.max);\n\n\t\t\tif (me.min === me.max) {\n\t\t\t\tif (me.min !== 0 && me.min !== null) {\n\t\t\t\t\tme.min = Math.pow(10, Math.floor(helpers.log10(me.min)) - 1);\n\t\t\t\t\tme.max = Math.pow(10, Math.floor(helpers.log10(me.max)) + 1);\n\t\t\t\t} else {\n\t\t\t\t\tme.min = DEFAULT_MIN;\n\t\t\t\t\tme.max = DEFAULT_MAX;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (me.min === null) {\n\t\t\t\tme.min = Math.pow(10, Math.floor(helpers.log10(me.max)) - 1);\n\t\t\t}\n\t\t\tif (me.max === null) {\n\t\t\t\tme.max = me.min !== 0\n\t\t\t\t\t? Math.pow(10, Math.floor(helpers.log10(me.min)) + 1)\n\t\t\t\t\t: DEFAULT_MAX;\n\t\t\t}\n\t\t\tif (me.minNotZero === null) {\n\t\t\t\tif (me.min > 0) {\n\t\t\t\t\tme.minNotZero = me.min;\n\t\t\t\t} else if (me.max < 1) {\n\t\t\t\t\tme.minNotZero = Math.pow(10, Math.floor(helpers.log10(me.max)));\n\t\t\t\t} else {\n\t\t\t\t\tme.minNotZero = DEFAULT_MIN;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar reverse = !me.isHorizontal();\n\n\t\t\tvar generationOptions = {\n\t\t\t\tmin: tickOpts.min,\n\t\t\t\tmax: tickOpts.max\n\t\t\t};\n\t\t\tvar ticks = me.ticks = generateTicks(generationOptions, me);\n\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t\t// range of the scale\n\t\t\tme.max = helpers.max(ticks);\n\t\t\tme.min = helpers.min(ticks);\n\n\t\t\tif (tickOpts.reverse) {\n\t\t\t\treverse = !reverse;\n\t\t\t\tme.start = me.max;\n\t\t\t\tme.end = me.min;\n\t\t\t} else {\n\t\t\t\tme.start = me.min;\n\t\t\t\tme.end = me.max;\n\t\t\t}\n\t\t\tif (reverse) {\n\t\t\t\tticks.reverse();\n\t\t\t}\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tthis.tickValues = this.ticks.slice();\n\n\t\t\tScale.prototype.convertTicksToLabels.call(this);\n\t\t},\n\t\t// Get the correct tooltip label\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.tickValues[index]);\n\t\t},\n\t\t/**\n\t\t * Returns the value of the first tick.\n\t\t * @param {Number} value - The minimum not zero value.\n\t\t * @return {Number} The first tick value.\n\t\t * @private\n\t\t */\n\t\t_getFirstTickValue: function(value) {\n\t\t\tvar exp = Math.floor(helpers.log10(value));\n\t\t\tvar significand = Math.floor(value / Math.pow(10, exp));\n\n\t\t\treturn significand * Math.pow(10, exp);\n\t\t},\n\t\tgetPixelForValue: function(value) {\n\t\t\tvar me = this;\n\t\t\tvar reverse = me.options.ticks.reverse;\n\t\t\tvar log10 = helpers.log10;\n\t\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\t\tvar offset = 0;\n\t\t\tvar innerDimension, pixel, start, end, sign;\n\n\t\t\tvalue = +me.getRightValue(value);\n\t\t\tif (reverse) {\n\t\t\t\tstart = me.end;\n\t\t\t\tend = me.start;\n\t\t\t\tsign = -1;\n\t\t\t} else {\n\t\t\t\tstart = me.start;\n\t\t\t\tend = me.end;\n\t\t\t\tsign = 1;\n\t\t\t}\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tinnerDimension = me.width;\n\t\t\t\tpixel = reverse ? me.right : me.left;\n\t\t\t} else {\n\t\t\t\tinnerDimension = me.height;\n\t\t\t\tsign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\t\t\t\tpixel = reverse ? me.top : me.bottom;\n\t\t\t}\n\t\t\tif (value !== start) {\n\t\t\t\tif (start === 0) { // include zero tick\n\t\t\t\t\toffset = helpers.getValueOrDefault(\n\t\t\t\t\t\tme.options.ticks.fontSize,\n\t\t\t\t\t\tChart.defaults.global.defaultFontSize\n\t\t\t\t\t);\n\t\t\t\t\tinnerDimension -= offset;\n\t\t\t\t\tstart = firstTickValue;\n\t\t\t\t}\n\t\t\t\tif (value !== 0) {\n\t\t\t\t\toffset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n\t\t\t\t}\n\t\t\t\tpixel += sign * offset;\n\t\t\t}\n\t\t\treturn pixel;\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar reverse = me.options.ticks.reverse;\n\t\t\tvar log10 = helpers.log10;\n\t\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\t\tvar innerDimension, start, end, value;\n\n\t\t\tif (reverse) {\n\t\t\t\tstart = me.end;\n\t\t\t\tend = me.start;\n\t\t\t} else {\n\t\t\t\tstart = me.start;\n\t\t\t\tend = me.end;\n\t\t\t}\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tinnerDimension = me.width;\n\t\t\t\tvalue = reverse ? me.right - pixel : pixel - me.left;\n\t\t\t} else {\n\t\t\t\tinnerDimension = me.height;\n\t\t\t\tvalue = reverse ? pixel - me.top : me.bottom - pixel;\n\t\t\t}\n\t\t\tif (value !== start) {\n\t\t\t\tif (start === 0) { // include zero tick\n\t\t\t\t\tvar offset = helpers.getValueOrDefault(\n\t\t\t\t\t\tme.options.ticks.fontSize,\n\t\t\t\t\t\tChart.defaults.global.defaultFontSize\n\t\t\t\t\t);\n\t\t\t\t\tvalue -= offset;\n\t\t\t\t\tinnerDimension -= offset;\n\t\t\t\t\tstart = firstTickValue;\n\t\t\t\t}\n\t\t\t\tvalue *= log10(end) - log10(start);\n\t\t\t\tvalue /= innerDimension;\n\t\t\t\tvalue = Math.pow(10, log10(start) + value);\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\t});\n\n\tscaleService.registerScaleType('logarithmic', LogarithmicScale, defaultConfig);\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('bar', {\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\n\t\t\t// Specific to Bar Controller\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\n\t\t\t// offset settings\n\t\t\toffset: true,\n\n\t\t\t// grid line settings\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\ttype: 'linear'\n\t\t}]\n\t}\n});\n\ndefaults._set('horizontalBar', {\n\thover: {\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'bottom'\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\tposition: 'left',\n\t\t\ttype: 'category',\n\n\t\t\t// Specific to Horizontal Bar Controller\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\n\t\t\t// offset settings\n\t\t\toffset: true,\n\n\t\t\t// grid line settings\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}]\n\t},\n\n\telements: {\n\t\trectangle: {\n\t\t\tborderSkipped: 'left'\n\t\t}\n\t},\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function(item, data) {\n\t\t\t\t// Pick first xLabel for now\n\t\t\t\tvar title = '';\n\n\t\t\t\tif (item.length > 0) {\n\t\t\t\t\tif (item[0].yLabel) {\n\t\t\t\t\t\ttitle = item[0].yLabel;\n\t\t\t\t\t} else if (data.labels.length > 0 && item[0].index < data.labels.length) {\n\t\t\t\t\t\ttitle = data.labels[item[0].index];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn title;\n\t\t\t},\n\n\t\t\tlabel: function(item, data) {\n\t\t\t\tvar datasetLabel = data.datasets[item.datasetIndex].label || '';\n\t\t\t\treturn datasetLabel + ': ' + item.xLabel;\n\t\t\t}\n\t\t},\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t}\n});\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(scale, pixels) {\n\tvar min = scale.isHorizontal() ? scale.width : scale.height;\n\tvar ticks = scale.getTicks();\n\tvar prev, curr, i, ilen;\n\n\tfor (i = 1, ilen = pixels.length; i < ilen; ++i) {\n\t\tmin = Math.min(min, pixels[i] - pixels[i - 1]);\n\t}\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tcurr = scale.getPixelForTick(i);\n\t\tmin = i > 0 ? Math.min(min, curr - prev) : min;\n\t\tprev = curr;\n\t}\n\n\treturn min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options) {\n\tvar thickness = options.barThickness;\n\tvar count = ruler.stackCount;\n\tvar curr = ruler.pixels[index];\n\tvar size, ratio;\n\n\tif (helpers.isNullOrUndef(thickness)) {\n\t\tsize = ruler.min * options.categoryPercentage;\n\t\tratio = options.barPercentage;\n\t} else {\n\t\t// When bar thickness is enforced, category and bar percentages are ignored.\n\t\t// Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n\t\t// and deprecate barPercentage since this value is ignored when thickness is absolute.\n\t\tsize = thickness * count;\n\t\tratio = 1;\n\t}\n\n\treturn {\n\t\tchunk: size / count,\n\t\tratio: ratio,\n\t\tstart: curr - (size / 2)\n\t};\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options) {\n\tvar pixels = ruler.pixels;\n\tvar curr = pixels[index];\n\tvar prev = index > 0 ? pixels[index - 1] : null;\n\tvar next = index < pixels.length - 1 ? pixels[index + 1] : null;\n\tvar percent = options.categoryPercentage;\n\tvar start, size;\n\n\tif (prev === null) {\n\t\t// first data: its size is double based on the next point or,\n\t\t// if it's also the last data, we use the scale end extremity.\n\t\tprev = curr - (next === null ? ruler.end - curr : next - curr);\n\t}\n\n\tif (next === null) {\n\t\t// last data: its size is also double based on the previous point.\n\t\tnext = curr + curr - prev;\n\t}\n\n\tstart = curr - ((curr - prev) / 2) * percent;\n\tsize = ((next - prev) / 2) * percent;\n\n\treturn {\n\t\tchunk: size / ruler.stackCount,\n\t\tratio: options.barPercentage,\n\t\tstart: start\n\t};\n}\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.bar = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Rectangle,\n\n\t\tinitialize: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta;\n\n\t\t\tChart.DatasetController.prototype.initialize.apply(me, arguments);\n\n\t\t\tmeta = me.getMeta();\n\t\t\tmeta.stack = me.getDataset().stack;\n\t\t\tmeta.bar = true;\n\t\t},\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar rects = me.getMeta().data;\n\t\t\tvar i, ilen;\n\n\t\t\tme._ruler = me.getRuler();\n\n\t\t\tfor (i = 0, ilen = rects.length; i < ilen; ++i) {\n\t\t\t\tme.updateElement(rects[i], i, reset);\n\t\t\t}\n\t\t},\n\n\t\tupdateElement: function(rectangle, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar rectangleOptions = chart.options.elements.rectangle;\n\n\t\t\trectangle._xScale = me.getScaleForId(meta.xAxisID);\n\t\t\trectangle._yScale = me.getScaleForId(meta.yAxisID);\n\t\t\trectangle._datasetIndex = me.index;\n\t\t\trectangle._index = index;\n\n\t\t\trectangle._model = {\n\t\t\t\tdatasetLabel: dataset.label,\n\t\t\t\tlabel: chart.data.labels[index],\n\t\t\t\tborderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleOptions.borderSkipped,\n\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleOptions.backgroundColor),\n\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleOptions.borderColor),\n\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleOptions.borderWidth)\n\t\t\t};\n\n\t\t\tme.updateElementGeometry(rectangle, index, reset);\n\n\t\t\trectangle.pivot();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tupdateElementGeometry: function(rectangle, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar model = rectangle._model;\n\t\t\tvar vscale = me.getValueScale();\n\t\t\tvar base = vscale.getBasePixel();\n\t\t\tvar horizontal = vscale.isHorizontal();\n\t\t\tvar ruler = me._ruler || me.getRuler();\n\t\t\tvar vpixels = me.calculateBarValuePixels(me.index, index);\n\t\t\tvar ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n\n\t\t\tmodel.horizontal = horizontal;\n\t\t\tmodel.base = reset ? base : vpixels.base;\n\t\t\tmodel.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n\t\t\tmodel.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n\t\t\tmodel.height = horizontal ? ipixels.size : undefined;\n\t\t\tmodel.width = horizontal ? undefined : ipixels.size;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScaleId: function() {\n\t\t\treturn this.getMeta().yAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScaleId: function() {\n\t\t\treturn this.getMeta().xAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScale: function() {\n\t\t\treturn this.getScaleForId(this.getValueScaleId());\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScale: function() {\n\t\t\treturn this.getScaleForId(this.getIndexScaleId());\n\t\t},\n\n\t\t/**\n\t\t * Returns the stacks based on groups and bar visibility.\n\t\t * @param {Number} [last] - The dataset index\n\t\t * @returns {Array} The stack list\n\t\t * @private\n\t\t */\n\t\t_getStacks: function(last) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar scale = me.getIndexScale();\n\t\t\tvar stacked = scale.options.stacked;\n\t\t\tvar ilen = last === undefined ? chart.data.datasets.length : last + 1;\n\t\t\tvar stacks = [];\n\t\t\tvar i, meta;\n\n\t\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tif (meta.bar && chart.isDatasetVisible(i) &&\n\t\t\t\t\t(stacked === false ||\n\t\t\t\t\t(stacked === true && stacks.indexOf(meta.stack) === -1) ||\n\t\t\t\t\t(stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1)))) {\n\t\t\t\t\tstacks.push(meta.stack);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn stacks;\n\t\t},\n\n\t\t/**\n\t\t * Returns the effective number of stacks based on groups and bar visibility.\n\t\t * @private\n\t\t */\n\t\tgetStackCount: function() {\n\t\t\treturn this._getStacks().length;\n\t\t},\n\n\t\t/**\n\t\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t\t * @param {Number} [datasetIndex] - The dataset index\n\t\t * @param {String} [name] - The stack name to find\n\t\t * @returns {Number} The stack index\n\t\t * @private\n\t\t */\n\t\tgetStackIndex: function(datasetIndex, name) {\n\t\t\tvar stacks = this._getStacks(datasetIndex);\n\t\t\tvar index = (name !== undefined)\n\t\t\t\t? stacks.indexOf(name)\n\t\t\t\t: -1; // indexOf returns -1 if element is not present\n\n\t\t\treturn (index === -1)\n\t\t\t\t? stacks.length - 1\n\t\t\t\t: index;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetRuler: function() {\n\t\t\tvar me = this;\n\t\t\tvar scale = me.getIndexScale();\n\t\t\tvar stackCount = me.getStackCount();\n\t\t\tvar datasetIndex = me.index;\n\t\t\tvar isHorizontal = scale.isHorizontal();\n\t\t\tvar start = isHorizontal ? scale.left : scale.top;\n\t\t\tvar end = start + (isHorizontal ? scale.width : scale.height);\n\t\t\tvar pixels = [];\n\t\t\tvar i, ilen, min;\n\n\t\t\tfor (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n\t\t\t\tpixels.push(scale.getPixelForValue(null, i, datasetIndex));\n\t\t\t}\n\n\t\t\tmin = helpers.isNullOrUndef(scale.options.barThickness)\n\t\t\t\t? computeMinSampleSize(scale, pixels)\n\t\t\t\t: -1;\n\n\t\t\treturn {\n\t\t\t\tmin: min,\n\t\t\t\tpixels: pixels,\n\t\t\t\tstart: start,\n\t\t\t\tend: end,\n\t\t\t\tstackCount: stackCount,\n\t\t\t\tscale: scale\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Note: pixel values are not clamped to the scale area.\n\t\t * @private\n\t\t */\n\t\tcalculateBarValuePixels: function(datasetIndex, index) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar scale = me.getValueScale();\n\t\t\tvar datasets = chart.data.datasets;\n\t\t\tvar value = scale.getRightValue(datasets[datasetIndex].data[index]);\n\t\t\tvar stacked = scale.options.stacked;\n\t\t\tvar stack = meta.stack;\n\t\t\tvar start = 0;\n\t\t\tvar i, imeta, ivalue, base, head, size;\n\n\t\t\tif (stacked || (stacked === undefined && stack !== undefined)) {\n\t\t\t\tfor (i = 0; i < datasetIndex; ++i) {\n\t\t\t\t\timeta = chart.getDatasetMeta(i);\n\n\t\t\t\t\tif (imeta.bar &&\n\t\t\t\t\t\timeta.stack === stack &&\n\t\t\t\t\t\timeta.controller.getValueScaleId() === scale.id &&\n\t\t\t\t\t\tchart.isDatasetVisible(i)) {\n\n\t\t\t\t\t\tivalue = scale.getRightValue(datasets[i].data[index]);\n\t\t\t\t\t\tif ((value < 0 && ivalue < 0) || (value >= 0 && ivalue > 0)) {\n\t\t\t\t\t\t\tstart += ivalue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbase = scale.getPixelForValue(start);\n\t\t\thead = scale.getPixelForValue(start + value);\n\t\t\tsize = (head - base) / 2;\n\n\t\t\treturn {\n\t\t\t\tsize: size,\n\t\t\t\tbase: base,\n\t\t\t\thead: head,\n\t\t\t\tcenter: head + size / 2\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tcalculateBarIndexPixels: function(datasetIndex, index, ruler) {\n\t\t\tvar me = this;\n\t\t\tvar options = ruler.scale.options;\n\t\t\tvar range = options.barThickness === 'flex'\n\t\t\t\t? computeFlexCategoryTraits(index, ruler, options)\n\t\t\t\t: computeFitCategoryTraits(index, ruler, options);\n\n\t\t\tvar stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n\t\t\tvar center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n\t\t\tvar size = Math.min(\n\t\t\t\thelpers.valueOrDefault(options.maxBarThickness, Infinity),\n\t\t\t\trange.chunk * range.ratio);\n\n\t\t\treturn {\n\t\t\t\tbase: center - size / 2,\n\t\t\t\thead: center + size / 2,\n\t\t\t\tcenter: center,\n\t\t\t\tsize: size\n\t\t\t};\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar scale = me.getValueScale();\n\t\t\tvar rects = me.getMeta().data;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar ilen = rects.length;\n\t\t\tvar i = 0;\n\n\t\t\thelpers.canvas.clipArea(chart.ctx, chart.chartArea);\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\tif (!isNaN(scale.getRightValue(dataset.data[i]))) {\n\t\t\t\t\trects[i].draw();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thelpers.canvas.unclipArea(chart.ctx);\n\t\t},\n\t});\n\n\tChart.controllers.horizontalBar = Chart.controllers.bar.extend({\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScaleId: function() {\n\t\t\treturn this.getMeta().xAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScaleId: function() {\n\t\t\treturn this.getMeta().yAxisID;\n\t\t}\n\t});\n};\n","import mod from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../../../node_modules/css-loader/index.js??ref--9-oneOf-1-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/lib/index.js??ref--9-oneOf-1-2!../../../../../node_modules/sass-loader/lib/loader.js??ref--9-oneOf-1-3!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Dashboard.vue?vue&type=style&index=0&lang=sass&\"; export default mod; export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../../../node_modules/css-loader/index.js??ref--9-oneOf-1-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/lib/index.js??ref--9-oneOf-1-2!../../../../../node_modules/sass-loader/lib/loader.js??ref--9-oneOf-1-3!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Dashboard.vue?vue&type=style&index=0&lang=sass&\"","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('radar', {\n\tscale: {\n\t\ttype: 'radialLinear'\n\t},\n\telements: {\n\t\tline: {\n\t\t\ttension: 0 // no bezier in radar\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.radar = Chart.DatasetController.extend({\n\n\t\tdatasetElementType: elements.Line,\n\n\t\tdataElementType: elements.Point,\n\n\t\tlinkScales: helpers.noop,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar line = meta.dataset;\n\t\t\tvar points = meta.data;\n\t\t\tvar custom = line.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar lineElementOptions = me.chart.options.elements.line;\n\t\t\tvar scale = me.chart.scale;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t}\n\n\t\t\thelpers.extend(meta.dataset, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_scale: scale,\n\t\t\t\t// Data\n\t\t\t\t_children: points,\n\t\t\t\t_loop: true,\n\t\t\t\t// Model\n\t\t\t\t_model: {\n\t\t\t\t\t// Appearance\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmeta.dataset.pivot();\n\n\t\t\t// Update Points\n\t\t\thelpers.each(points, function(point, index) {\n\t\t\t\tme.updateElement(point, index, reset);\n\t\t\t}, me);\n\n\t\t\t// Update bezier control points\n\t\t\tme.updateBezierControlPoints();\n\t\t},\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar scale = me.chart.scale;\n\t\t\tvar pointElementOptions = me.chart.options.elements.point;\n\t\t\tvar pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\t\t\tif ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\n\t\t\t\tdataset.pointHitRadius = dataset.hitRadius;\n\t\t\t}\n\n\t\t\thelpers.extend(point, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\t\t\t\t_scale: scale,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: reset ? scale.xCenter : pointPosition.x, // value not used in dataset scale, but we want a consistent API between scales\n\t\t\t\t\ty: reset ? scale.yCenter : pointPosition.y,\n\n\t\t\t\t\t// Appearance\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, me.chart.options.elements.line.tension),\n\t\t\t\t\tradius: custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth),\n\t\t\t\t\tpointStyle: custom.pointStyle ? custom.pointStyle : helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointElementOptions.pointStyle),\n\t\t\t\t\trotation: custom.rotation ? custom.rotation : helpers.valueAtIndexOrDefault(dataset.pointRotation, index, pointElementOptions.rotation),\n\n\t\t\t\t\t// Tooltip\n\t\t\t\t\thitRadius: custom.hitRadius ? custom.hitRadius : helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointElementOptions.hitRadius)\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tpoint._model.skip = custom.skip ? custom.skip : (isNaN(point._model.x) || isNaN(point._model.y));\n\t\t},\n\t\tupdateBezierControlPoints: function() {\n\t\t\tvar chartArea = this.chart.chartArea;\n\t\t\tvar meta = this.getMeta();\n\n\t\t\thelpers.each(meta.data, function(point, index) {\n\t\t\t\tvar model = point._model;\n\t\t\t\tvar controlPoints = helpers.splineCurve(\n\t\t\t\t\thelpers.previousItem(meta.data, index, true)._model,\n\t\t\t\t\tmodel,\n\t\t\t\t\thelpers.nextItem(meta.data, index, true)._model,\n\t\t\t\t\tmodel.tension\n\t\t\t\t);\n\n\t\t\t\t// Prevent the bezier going outside of the bounds of the graph\n\t\t\t\tmodel.controlPointPreviousX = Math.max(Math.min(controlPoints.previous.x, chartArea.right), chartArea.left);\n\t\t\t\tmodel.controlPointPreviousY = Math.max(Math.min(controlPoints.previous.y, chartArea.bottom), chartArea.top);\n\n\t\t\t\tmodel.controlPointNextX = Math.max(Math.min(controlPoints.next.x, chartArea.right), chartArea.left);\n\t\t\t\tmodel.controlPointNextY = Math.max(Math.min(controlPoints.next.y, chartArea.bottom), chartArea.top);\n\n\t\t\t\t// Now pivot the point for animation\n\t\t\t\tpoint.pivot();\n\t\t\t});\n\t\t},\n\n\t\tsetHoverStyle: function(point) {\n\t\t\t// Point\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar index = point._index;\n\t\t\tvar model = point._model;\n\n\t\t\tpoint.$previousStyle = {\n\t\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\t\tborderColor: model.borderColor,\n\t\t\t\tborderWidth: model.borderWidth,\n\t\t\t\tradius: model.radius\n\t\t\t};\n\n\t\t\tmodel.radius = custom.hoverRadius ? custom.hoverRadius : helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n\t\t},\n\t});\n};\n","'use strict';\nrequire('./es6.regexp.flags');\nvar anObject = require('./_an-object');\nvar $flags = require('./_flags');\nvar DESCRIPTORS = require('./_descriptors');\nvar TO_STRING = 'toString';\nvar $toString = /./[TO_STRING];\n\nvar define = function (fn) {\n  require('./_redefine')(RegExp.prototype, TO_STRING, fn, true);\n};\n\n// 21.2.5.14 RegExp.prototype.toString()\nif (require('./_fails')(function () { return $toString.call({ source: 'a', flags: 'b' }) != '/a/b'; })) {\n  define(function toString() {\n    var R = anObject(this);\n    return '/'.concat(R.source, '/',\n      'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);\n  });\n// FF44- RegExp#toString has a wrong name\n} else if ($toString.name != TO_STRING) {\n  define(function toString() {\n    return $toString.call(this);\n  });\n}\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('bubble', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear', // bubble should probably use a linear scale by default\n\t\t\tposition: 'bottom',\n\t\t\tid: 'x-axis-0' // need an ID so datasets can reference the scale\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t},\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\t// Title doesn't make sense for scatter since we format the data as a point\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\tvar datasetLabel = data.datasets[item.datasetIndex].label || '';\n\t\t\t\tvar dataPoint = data.datasets[item.datasetIndex].data[item.index];\n\t\t\t\treturn datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.bubble = Chart.DatasetController.extend({\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tdataElementType: elements.Point,\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar points = meta.data;\n\n\t\t\t// Update Points\n\t\t\thelpers.each(points, function(point, index) {\n\t\t\t\tme.updateElement(point, index, reset);\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar options = me._resolveElementOptions(point, index);\n\t\t\tvar data = me.getDataset().data[index];\n\t\t\tvar dsIndex = me.index;\n\n\t\t\tvar x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n\t\t\tvar y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n\n\t\t\tpoint._xScale = xScale;\n\t\t\tpoint._yScale = yScale;\n\t\t\tpoint._options = options;\n\t\t\tpoint._datasetIndex = dsIndex;\n\t\t\tpoint._index = index;\n\t\t\tpoint._model = {\n\t\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\t\tborderColor: options.borderColor,\n\t\t\t\tborderWidth: options.borderWidth,\n\t\t\t\thitRadius: options.hitRadius,\n\t\t\t\tpointStyle: options.pointStyle,\n\t\t\t\trotation: options.rotation,\n\t\t\t\tradius: reset ? 0 : options.radius,\n\t\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t};\n\n\t\t\tpoint.pivot();\n\t\t},\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tsetHoverStyle: function(point) {\n\t\t\tvar model = point._model;\n\t\t\tvar options = point._options;\n\t\t\tpoint.$previousStyle = {\n\t\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\t\tborderColor: model.borderColor,\n\t\t\t\tborderWidth: model.borderWidth,\n\t\t\t\tradius: model.radius\n\t\t\t};\n\t\t\tmodel.backgroundColor = helpers.valueOrDefault(options.hoverBackgroundColor, helpers.getHoverColor(options.backgroundColor));\n\t\t\tmodel.borderColor = helpers.valueOrDefault(options.hoverBorderColor, helpers.getHoverColor(options.borderColor));\n\t\t\tmodel.borderWidth = helpers.valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n\t\t\tmodel.radius = options.radius + options.hoverRadius;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\t_resolveElementOptions: function(point, index) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar datasets = chart.data.datasets;\n\t\t\tvar dataset = datasets[me.index];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar options = chart.options.elements.point;\n\t\t\tvar resolve = helpers.options.resolve;\n\t\t\tvar data = dataset.data[index];\n\t\t\tvar values = {};\n\t\t\tvar i, ilen, key;\n\n\t\t\t// Scriptable options\n\t\t\tvar context = {\n\t\t\t\tchart: chart,\n\t\t\t\tdataIndex: index,\n\t\t\t\tdataset: dataset,\n\t\t\t\tdatasetIndex: me.index\n\t\t\t};\n\n\t\t\tvar keys = [\n\t\t\t\t'backgroundColor',\n\t\t\t\t'borderColor',\n\t\t\t\t'borderWidth',\n\t\t\t\t'hoverBackgroundColor',\n\t\t\t\t'hoverBorderColor',\n\t\t\t\t'hoverBorderWidth',\n\t\t\t\t'hoverRadius',\n\t\t\t\t'hitRadius',\n\t\t\t\t'pointStyle',\n\t\t\t\t'rotation'\n\t\t\t];\n\n\t\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\t\tkey = keys[i];\n\t\t\t\tvalues[key] = resolve([\n\t\t\t\t\tcustom[key],\n\t\t\t\t\tdataset[key],\n\t\t\t\t\toptions[key]\n\t\t\t\t], context, index);\n\t\t\t}\n\n\t\t\t// Custom radius resolution\n\t\t\tvalues.radius = resolve([\n\t\t\t\tcustom.radius,\n\t\t\t\tdata ? data.r : undefined,\n\t\t\t\tdataset.radius,\n\t\t\t\toptions.radius\n\t\t\t], context, index);\n\t\t\treturn values;\n\t\t}\n\t});\n};\n","'use strict';\n\nvar defaults = require('./core.defaults');\nvar Element = require('./core.element');\nvar helpers = require('../helpers/index');\nvar Ticks = require('./core.ticks');\n\ndefaults._set('scale', {\n\tdisplay: true,\n\tposition: 'left',\n\toffset: false,\n\n\t// grid line settings\n\tgridLines: {\n\t\tdisplay: true,\n\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\tlineWidth: 1,\n\t\tdrawBorder: true,\n\t\tdrawOnChartArea: true,\n\t\tdrawTicks: true,\n\t\ttickMarkLength: 10,\n\t\tzeroLineWidth: 1,\n\t\tzeroLineColor: 'rgba(0,0,0,0.25)',\n\t\tzeroLineBorderDash: [],\n\t\tzeroLineBorderDashOffset: 0.0,\n\t\toffsetGridLines: false,\n\t\tborderDash: [],\n\t\tborderDashOffset: 0.0\n\t},\n\n\t// scale label\n\tscaleLabel: {\n\t\t// display property\n\t\tdisplay: false,\n\n\t\t// actual label\n\t\tlabelString: '',\n\n\t\t// line height\n\t\tlineHeight: 1.2,\n\n\t\t// top/bottom padding\n\t\tpadding: {\n\t\t\ttop: 4,\n\t\t\tbottom: 4\n\t\t}\n\t},\n\n\t// label settings\n\tticks: {\n\t\tbeginAtZero: false,\n\t\tminRotation: 0,\n\t\tmaxRotation: 50,\n\t\tmirror: false,\n\t\tpadding: 0,\n\t\treverse: false,\n\t\tdisplay: true,\n\t\tautoSkip: true,\n\t\tautoSkipPadding: 0,\n\t\tlabelOffset: 0,\n\t\t// We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n\t\tcallback: Ticks.formatters.values,\n\t\tminor: {},\n\t\tmajor: {}\n\t}\n});\n\nfunction labelsFromTicks(ticks) {\n\tvar labels = [];\n\tvar i, ilen;\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tlabels.push(ticks[i].label);\n\t}\n\n\treturn labels;\n}\n\nfunction getLineValue(scale, index, offsetGridLines) {\n\tvar lineValue = scale.getPixelForTick(index);\n\n\tif (offsetGridLines) {\n\t\tif (index === 0) {\n\t\t\tlineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n\t\t} else {\n\t\t\tlineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n\t\t}\n\t}\n\treturn lineValue;\n}\n\nfunction computeTextSize(context, tick, font) {\n\treturn helpers.isArray(tick) ?\n\t\thelpers.longestText(context, font, tick) :\n\t\tcontext.measureText(tick).width;\n}\n\nfunction parseFontOptions(options) {\n\tvar valueOrDefault = helpers.valueOrDefault;\n\tvar globalDefaults = defaults.global;\n\tvar size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n\tvar style = valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle);\n\tvar family = valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily);\n\n\treturn {\n\t\tsize: size,\n\t\tstyle: style,\n\t\tfamily: family,\n\t\tfont: helpers.fontString(size, style, family)\n\t};\n}\n\nfunction parseLineHeight(options) {\n\treturn helpers.options.toLineHeight(\n\t\thelpers.valueOrDefault(options.lineHeight, 1.2),\n\t\thelpers.valueOrDefault(options.fontSize, defaults.global.defaultFontSize));\n}\n\nmodule.exports = Element.extend({\n\t/**\n\t * Get the padding needed for the scale\n\t * @method getPadding\n\t * @private\n\t * @returns {Padding} the necessary padding\n\t */\n\tgetPadding: function() {\n\t\tvar me = this;\n\t\treturn {\n\t\t\tleft: me.paddingLeft || 0,\n\t\t\ttop: me.paddingTop || 0,\n\t\t\tright: me.paddingRight || 0,\n\t\t\tbottom: me.paddingBottom || 0\n\t\t};\n\t},\n\n\t/**\n\t * Returns the scale tick objects ({label, major})\n\t * @since 2.7\n\t */\n\tgetTicks: function() {\n\t\treturn this._ticks;\n\t},\n\n\t// These methods are ordered by lifecyle. Utilities then follow.\n\t// Any function defined here is inherited by all scale types.\n\t// Any function can be extended by the scale type\n\n\tmergeTicksOptions: function() {\n\t\tvar ticks = this.options.ticks;\n\t\tif (ticks.minor === false) {\n\t\t\tticks.minor = {\n\t\t\t\tdisplay: false\n\t\t\t};\n\t\t}\n\t\tif (ticks.major === false) {\n\t\t\tticks.major = {\n\t\t\t\tdisplay: false\n\t\t\t};\n\t\t}\n\t\tfor (var key in ticks) {\n\t\t\tif (key !== 'major' && key !== 'minor') {\n\t\t\t\tif (typeof ticks.minor[key] === 'undefined') {\n\t\t\t\t\tticks.minor[key] = ticks[key];\n\t\t\t\t}\n\t\t\t\tif (typeof ticks.major[key] === 'undefined') {\n\t\t\t\t\tticks.major[key] = ticks[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tbeforeUpdate: function() {\n\t\thelpers.callback(this.options.beforeUpdate, [this]);\n\t},\n\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\t\tvar i, ilen, labels, label, ticks, tick;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = helpers.extend({\n\t\t\tleft: 0,\n\t\t\tright: 0,\n\t\t\ttop: 0,\n\t\t\tbottom: 0\n\t\t}, margins);\n\t\tme.longestTextCache = me.longestTextCache || {};\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\n\t\t// Data min/max\n\t\tme.beforeDataLimits();\n\t\tme.determineDataLimits();\n\t\tme.afterDataLimits();\n\n\t\t// Ticks - `this.ticks` is now DEPRECATED!\n\t\t// Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n\t\t// and must not be accessed directly from outside this class. `this.ticks` being\n\t\t// around for long time and not marked as private, we can't change its structure\n\t\t// without unexpected breaking changes. If you need to access the scale ticks,\n\t\t// use scale.getTicks() instead.\n\n\t\tme.beforeBuildTicks();\n\n\t\t// New implementations should return an array of objects but for BACKWARD COMPAT,\n\t\t// we still support no return (`this.ticks` internally set by calling this method).\n\t\tticks = me.buildTicks() || [];\n\n\t\tme.afterBuildTicks();\n\n\t\tme.beforeTickToLabelConversion();\n\n\t\t// New implementations should return the formatted tick labels but for BACKWARD\n\t\t// COMPAT, we still support no return (`this.ticks` internally changed by calling\n\t\t// this method and supposed to contain only string values).\n\t\tlabels = me.convertTicksToLabels(ticks) || me.ticks;\n\n\t\tme.afterTickToLabelConversion();\n\n\t\tme.ticks = labels;   // BACKWARD COMPATIBILITY\n\n\t\t// IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n\n\t\t// BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\t\tfor (i = 0, ilen = labels.length; i < ilen; ++i) {\n\t\t\tlabel = labels[i];\n\t\t\ttick = ticks[i];\n\t\t\tif (!tick) {\n\t\t\t\tticks.push(tick = {\n\t\t\t\t\tlabel: label,\n\t\t\t\t\tmajor: false\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\ttick.label = label;\n\t\t\t}\n\t\t}\n\n\t\tme._ticks = ticks;\n\n\t\t// Tick Rotation\n\t\tme.beforeCalculateTickRotation();\n\t\tme.calculateTickRotation();\n\t\tme.afterCalculateTickRotation();\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\n\t},\n\tafterUpdate: function() {\n\t\thelpers.callback(this.options.afterUpdate, [this]);\n\t},\n\n\t//\n\n\tbeforeSetDimensions: function() {\n\t\thelpers.callback(this.options.beforeSetDimensions, [this]);\n\t},\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\t},\n\tafterSetDimensions: function() {\n\t\thelpers.callback(this.options.afterSetDimensions, [this]);\n\t},\n\n\t// Data limits\n\tbeforeDataLimits: function() {\n\t\thelpers.callback(this.options.beforeDataLimits, [this]);\n\t},\n\tdetermineDataLimits: helpers.noop,\n\tafterDataLimits: function() {\n\t\thelpers.callback(this.options.afterDataLimits, [this]);\n\t},\n\n\t//\n\tbeforeBuildTicks: function() {\n\t\thelpers.callback(this.options.beforeBuildTicks, [this]);\n\t},\n\tbuildTicks: helpers.noop,\n\tafterBuildTicks: function() {\n\t\thelpers.callback(this.options.afterBuildTicks, [this]);\n\t},\n\n\tbeforeTickToLabelConversion: function() {\n\t\thelpers.callback(this.options.beforeTickToLabelConversion, [this]);\n\t},\n\tconvertTicksToLabels: function() {\n\t\tvar me = this;\n\t\t// Convert ticks to strings\n\t\tvar tickOpts = me.options.ticks;\n\t\tme.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n\t},\n\tafterTickToLabelConversion: function() {\n\t\thelpers.callback(this.options.afterTickToLabelConversion, [this]);\n\t},\n\n\t//\n\n\tbeforeCalculateTickRotation: function() {\n\t\thelpers.callback(this.options.beforeCalculateTickRotation, [this]);\n\t},\n\tcalculateTickRotation: function() {\n\t\tvar me = this;\n\t\tvar context = me.ctx;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\t// Get the width of each grid by calculating the difference\n\t\t// between x offsets between 0 and 1.\n\t\tvar tickFont = parseFontOptions(tickOpts);\n\t\tcontext.font = tickFont.font;\n\n\t\tvar labelRotation = tickOpts.minRotation || 0;\n\n\t\tif (labels.length && me.options.display && me.isHorizontal()) {\n\t\t\tvar originalLabelWidth = helpers.longestText(context, tickFont.font, labels, me.longestTextCache);\n\t\t\tvar labelWidth = originalLabelWidth;\n\t\t\tvar cosRotation, sinRotation;\n\n\t\t\t// Allow 3 pixels x2 padding either side for label readability\n\t\t\tvar tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;\n\n\t\t\t// Max label rotation can be set or default to 90 - also act as a loop counter\n\t\t\twhile (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n\t\t\t\tvar angleRadians = helpers.toRadians(labelRotation);\n\t\t\t\tcosRotation = Math.cos(angleRadians);\n\t\t\t\tsinRotation = Math.sin(angleRadians);\n\n\t\t\t\tif (sinRotation * originalLabelWidth > me.maxHeight) {\n\t\t\t\t\t// go back one step\n\t\t\t\t\tlabelRotation--;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tlabelRotation++;\n\t\t\t\tlabelWidth = cosRotation * originalLabelWidth;\n\t\t\t}\n\t\t}\n\n\t\tme.labelRotation = labelRotation;\n\t},\n\tafterCalculateTickRotation: function() {\n\t\thelpers.callback(this.options.afterCalculateTickRotation, [this]);\n\t},\n\n\t//\n\n\tbeforeFit: function() {\n\t\thelpers.callback(this.options.beforeFit, [this]);\n\t},\n\tfit: function() {\n\t\tvar me = this;\n\t\t// Reset\n\t\tvar minSize = me.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\n\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\tvar opts = me.options;\n\t\tvar tickOpts = opts.ticks;\n\t\tvar scaleLabelOpts = opts.scaleLabel;\n\t\tvar gridLineOpts = opts.gridLines;\n\t\tvar display = opts.display;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tvar tickFont = parseFontOptions(tickOpts);\n\t\tvar tickMarkLength = opts.gridLines.tickMarkLength;\n\n\t\t// Width\n\t\tif (isHorizontal) {\n\t\t\t// subtract the margins to line up with the chartArea if we are a full width scale\n\t\t\tminSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n\t\t} else {\n\t\t\tminSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t}\n\n\t\t// height\n\t\tif (isHorizontal) {\n\t\t\tminSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t} else {\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\t// Are we showing a title for the scale?\n\t\tif (scaleLabelOpts.display && display) {\n\t\t\tvar scaleLabelLineHeight = parseLineHeight(scaleLabelOpts);\n\t\t\tvar scaleLabelPadding = helpers.options.toPadding(scaleLabelOpts.padding);\n\t\t\tvar deltaHeight = scaleLabelLineHeight + scaleLabelPadding.height;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize.height += deltaHeight;\n\t\t\t} else {\n\t\t\t\tminSize.width += deltaHeight;\n\t\t\t}\n\t\t}\n\n\t\t// Don't bother fitting the ticks if we are not showing them\n\t\tif (tickOpts.display && display) {\n\t\t\tvar largestTextWidth = helpers.longestText(me.ctx, tickFont.font, labels, me.longestTextCache);\n\t\t\tvar tallestLabelHeightInLines = helpers.numberOfLabelLines(labels);\n\t\t\tvar lineSpace = tickFont.size * 0.5;\n\t\t\tvar tickPadding = me.options.ticks.padding;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\t// A horizontal axis is more constrained by the height.\n\t\t\t\tme.longestLabelWidth = largestTextWidth;\n\n\t\t\t\tvar angleRadians = helpers.toRadians(me.labelRotation);\n\t\t\t\tvar cosRotation = Math.cos(angleRadians);\n\t\t\t\tvar sinRotation = Math.sin(angleRadians);\n\n\t\t\t\t// TODO - improve this calculation\n\t\t\t\tvar labelHeight = (sinRotation * largestTextWidth)\n\t\t\t\t\t+ (tickFont.size * tallestLabelHeightInLines)\n\t\t\t\t\t+ (lineSpace * (tallestLabelHeightInLines - 1))\n\t\t\t\t\t+ lineSpace; // padding\n\n\t\t\t\tminSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n\n\t\t\t\tme.ctx.font = tickFont.font;\n\t\t\t\tvar firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.font);\n\t\t\t\tvar lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.font);\n\n\t\t\t\t// Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n\t\t\t\t// which means that the right padding is dominated by the font height\n\t\t\t\tif (me.labelRotation !== 0) {\n\t\t\t\t\tme.paddingLeft = opts.position === 'bottom' ? (cosRotation * firstLabelWidth) + 3 : (cosRotation * lineSpace) + 3; // add 3 px to move away from canvas edges\n\t\t\t\t\tme.paddingRight = opts.position === 'bottom' ? (cosRotation * lineSpace) + 3 : (cosRotation * lastLabelWidth) + 3;\n\t\t\t\t} else {\n\t\t\t\t\tme.paddingLeft = firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges\n\t\t\t\t\tme.paddingRight = lastLabelWidth / 2 + 3;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// A vertical axis is more constrained by the width. Labels are the\n\t\t\t\t// dominant factor here, so get that length first and account for padding\n\t\t\t\tif (tickOpts.mirror) {\n\t\t\t\t\tlargestTextWidth = 0;\n\t\t\t\t} else {\n\t\t\t\t\t// use lineSpace for consistency with horizontal axis\n\t\t\t\t\t// tickPadding is not implemented for horizontal\n\t\t\t\t\tlargestTextWidth += tickPadding + lineSpace;\n\t\t\t\t}\n\n\t\t\t\tminSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n\n\t\t\t\tme.paddingTop = tickFont.size / 2;\n\t\t\t\tme.paddingBottom = tickFont.size / 2;\n\t\t\t}\n\t\t}\n\n\t\tme.handleMargins();\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\t},\n\n\t/**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n\thandleMargins: function() {\n\t\tvar me = this;\n\t\tif (me.margins) {\n\t\t\tme.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n\t\t\tme.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n\t\t\tme.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n\t\t\tme.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n\t\t}\n\t},\n\n\tafterFit: function() {\n\t\thelpers.callback(this.options.afterFit, [this]);\n\t},\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t},\n\tisFullWidth: function() {\n\t\treturn (this.options.fullWidth);\n\t},\n\n\t// Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n\tgetRightValue: function(rawValue) {\n\t\t// Null and undefined values first\n\t\tif (helpers.isNullOrUndef(rawValue)) {\n\t\t\treturn NaN;\n\t\t}\n\t\t// isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\t\tif (typeof rawValue === 'number' && !isFinite(rawValue)) {\n\t\t\treturn NaN;\n\t\t}\n\t\t// If it is in fact an object, dive in one more level\n\t\tif (rawValue) {\n\t\t\tif (this.isHorizontal()) {\n\t\t\t\tif (rawValue.x !== undefined) {\n\t\t\t\t\treturn this.getRightValue(rawValue.x);\n\t\t\t\t}\n\t\t\t} else if (rawValue.y !== undefined) {\n\t\t\t\treturn this.getRightValue(rawValue.y);\n\t\t\t}\n\t\t}\n\n\t\t// Value is good, return it\n\t\treturn rawValue;\n\t},\n\n\t/**\n\t * Used to get the value to display in the tooltip for the data at the given index\n\t * @param index\n\t * @param datasetIndex\n\t */\n\tgetLabelForIndex: helpers.noop,\n\n\t/**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param value\n\t * @param index\n\t * @param datasetIndex\n\t */\n\tgetPixelForValue: helpers.noop,\n\n\t/**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param pixel\n\t */\n\tgetValueForPixel: helpers.noop,\n\n\t/**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t */\n\tgetPixelForTick: function(index) {\n\t\tvar me = this;\n\t\tvar offset = me.options.offset;\n\t\tif (me.isHorizontal()) {\n\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\tvar tickWidth = innerWidth / Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\t\tvar pixel = (tickWidth * index) + me.paddingLeft;\n\n\t\t\tif (offset) {\n\t\t\t\tpixel += tickWidth / 2;\n\t\t\t}\n\n\t\t\tvar finalVal = me.left + Math.round(pixel);\n\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\treturn finalVal;\n\t\t}\n\t\tvar innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n\t\treturn me.top + (index * (innerHeight / (me._ticks.length - 1)));\n\t},\n\n\t/**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t */\n\tgetPixelForDecimal: function(decimal) {\n\t\tvar me = this;\n\t\tif (me.isHorizontal()) {\n\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\tvar valueOffset = (innerWidth * decimal) + me.paddingLeft;\n\n\t\t\tvar finalVal = me.left + Math.round(valueOffset);\n\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\treturn finalVal;\n\t\t}\n\t\treturn me.top + (decimal * me.height);\n\t},\n\n\t/**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t */\n\tgetBasePixel: function() {\n\t\treturn this.getPixelForValue(this.getBaseValue());\n\t},\n\n\tgetBaseValue: function() {\n\t\tvar me = this;\n\t\tvar min = me.min;\n\t\tvar max = me.max;\n\n\t\treturn me.beginAtZero ? 0 :\n\t\t\tmin < 0 && max < 0 ? max :\n\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t0;\n\t},\n\n\t/**\n\t * Returns a subset of ticks to be plotted to avoid overlapping labels.\n\t * @private\n\t */\n\t_autoSkip: function(ticks) {\n\t\tvar skipRatio;\n\t\tvar me = this;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tvar optionTicks = me.options.ticks.minor;\n\t\tvar tickCount = ticks.length;\n\t\tvar labelRotationRadians = helpers.toRadians(me.labelRotation);\n\t\tvar cosRotation = Math.cos(labelRotationRadians);\n\t\tvar longestRotatedLabel = me.longestLabelWidth * cosRotation;\n\t\tvar result = [];\n\t\tvar i, tick, shouldSkip;\n\n\t\t// figure out the maximum number of gridlines to show\n\t\tvar maxTicks;\n\t\tif (optionTicks.maxTicksLimit) {\n\t\t\tmaxTicks = optionTicks.maxTicksLimit;\n\t\t}\n\n\t\tif (isHorizontal) {\n\t\t\tskipRatio = false;\n\n\t\t\tif ((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount > (me.width - (me.paddingLeft + me.paddingRight))) {\n\t\t\t\tskipRatio = 1 + Math.floor(((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount) / (me.width - (me.paddingLeft + me.paddingRight)));\n\t\t\t}\n\n\t\t\t// if they defined a max number of optionTicks,\n\t\t\t// increase skipRatio until that number is met\n\t\t\tif (maxTicks && tickCount > maxTicks) {\n\t\t\t\tskipRatio = Math.max(skipRatio, Math.floor(tickCount / maxTicks));\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0; i < tickCount; i++) {\n\t\t\ttick = ticks[i];\n\n\t\t\t// Since we always show the last tick,we need may need to hide the last shown one before\n\t\t\tshouldSkip = (skipRatio > 1 && i % skipRatio > 0) || (i % skipRatio === 0 && i + skipRatio >= tickCount);\n\t\t\tif (shouldSkip && i !== tickCount - 1) {\n\t\t\t\t// leave tick in place but make sure it's not displayed (#4635)\n\t\t\t\tdelete tick.label;\n\t\t\t}\n\t\t\tresult.push(tick);\n\t\t}\n\t\treturn result;\n\t},\n\n\t// Actually draw the scale on the canvas\n\t// @param {rectangle} chartArea : the area of the chart to draw full grid lines on\n\tdraw: function(chartArea) {\n\t\tvar me = this;\n\t\tvar options = me.options;\n\t\tif (!options.display) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar context = me.ctx;\n\t\tvar globalDefaults = defaults.global;\n\t\tvar optionTicks = options.ticks.minor;\n\t\tvar optionMajorTicks = options.ticks.major || optionTicks;\n\t\tvar gridLines = options.gridLines;\n\t\tvar scaleLabel = options.scaleLabel;\n\n\t\tvar isRotated = me.labelRotation !== 0;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tvar ticks = optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n\t\tvar tickFontColor = helpers.valueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);\n\t\tvar tickFont = parseFontOptions(optionTicks);\n\t\tvar majorTickFontColor = helpers.valueOrDefault(optionMajorTicks.fontColor, globalDefaults.defaultFontColor);\n\t\tvar majorTickFont = parseFontOptions(optionMajorTicks);\n\n\t\tvar tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n\n\t\tvar scaleLabelFontColor = helpers.valueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);\n\t\tvar scaleLabelFont = parseFontOptions(scaleLabel);\n\t\tvar scaleLabelPadding = helpers.options.toPadding(scaleLabel.padding);\n\t\tvar labelRotationRadians = helpers.toRadians(me.labelRotation);\n\n\t\tvar itemsToDraw = [];\n\n\t\tvar axisWidth = me.options.gridLines.lineWidth;\n\t\tvar xTickStart = options.position === 'right' ? me.left : me.right - axisWidth - tl;\n\t\tvar xTickEnd = options.position === 'right' ? me.left + tl : me.right;\n\t\tvar yTickStart = options.position === 'bottom' ? me.top + axisWidth : me.bottom - tl - axisWidth;\n\t\tvar yTickEnd = options.position === 'bottom' ? me.top + axisWidth + tl : me.bottom + axisWidth;\n\n\t\thelpers.each(ticks, function(tick, index) {\n\t\t\t// autoskipper skipped this tick (#4635)\n\t\t\tif (helpers.isNullOrUndef(tick.label)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar label = tick.label;\n\t\t\tvar lineWidth, lineColor, borderDash, borderDashOffset;\n\t\t\tif (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n\t\t\t\t// Draw the first index specially\n\t\t\t\tlineWidth = gridLines.zeroLineWidth;\n\t\t\t\tlineColor = gridLines.zeroLineColor;\n\t\t\t\tborderDash = gridLines.zeroLineBorderDash;\n\t\t\t\tborderDashOffset = gridLines.zeroLineBorderDashOffset;\n\t\t\t} else {\n\t\t\t\tlineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, index);\n\t\t\t\tlineColor = helpers.valueAtIndexOrDefault(gridLines.color, index);\n\t\t\t\tborderDash = helpers.valueOrDefault(gridLines.borderDash, globalDefaults.borderDash);\n\t\t\t\tborderDashOffset = helpers.valueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);\n\t\t\t}\n\n\t\t\t// Common properties\n\t\t\tvar tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;\n\t\t\tvar textAlign = 'middle';\n\t\t\tvar textBaseline = 'middle';\n\t\t\tvar tickPadding = optionTicks.padding;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tvar labelYOffset = tl + tickPadding;\n\n\t\t\t\tif (options.position === 'bottom') {\n\t\t\t\t\t// bottom\n\t\t\t\t\ttextBaseline = !isRotated ? 'top' : 'middle';\n\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'right';\n\t\t\t\t\tlabelY = me.top + labelYOffset;\n\t\t\t\t} else {\n\t\t\t\t\t// top\n\t\t\t\t\ttextBaseline = !isRotated ? 'bottom' : 'middle';\n\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'left';\n\t\t\t\t\tlabelY = me.bottom - labelYOffset;\n\t\t\t\t}\n\n\t\t\t\tvar xLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\t\t\t\tif (xLineValue < me.left) {\n\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\t\t\t\txLineValue += helpers.aliasPixel(lineWidth);\n\n\t\t\t\tlabelX = me.getPixelForTick(index) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n\t\t\t\ttx1 = tx2 = x1 = x2 = xLineValue;\n\t\t\t\tty1 = yTickStart;\n\t\t\t\tty2 = yTickEnd;\n\t\t\t\ty1 = chartArea.top;\n\t\t\t\ty2 = chartArea.bottom + axisWidth;\n\t\t\t} else {\n\t\t\t\tvar isLeft = options.position === 'left';\n\t\t\t\tvar labelXOffset;\n\n\t\t\t\tif (optionTicks.mirror) {\n\t\t\t\t\ttextAlign = isLeft ? 'left' : 'right';\n\t\t\t\t\tlabelXOffset = tickPadding;\n\t\t\t\t} else {\n\t\t\t\t\ttextAlign = isLeft ? 'right' : 'left';\n\t\t\t\t\tlabelXOffset = tl + tickPadding;\n\t\t\t\t}\n\n\t\t\t\tlabelX = isLeft ? me.right - labelXOffset : me.left + labelXOffset;\n\n\t\t\t\tvar yLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\t\t\t\tif (yLineValue < me.top) {\n\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\t\t\t\tyLineValue += helpers.aliasPixel(lineWidth);\n\n\t\t\t\tlabelY = me.getPixelForTick(index) + optionTicks.labelOffset;\n\n\t\t\t\ttx1 = xTickStart;\n\t\t\t\ttx2 = xTickEnd;\n\t\t\t\tx1 = chartArea.left;\n\t\t\t\tx2 = chartArea.right + axisWidth;\n\t\t\t\tty1 = ty2 = y1 = y2 = yLineValue;\n\t\t\t}\n\n\t\t\titemsToDraw.push({\n\t\t\t\ttx1: tx1,\n\t\t\t\tty1: ty1,\n\t\t\t\ttx2: tx2,\n\t\t\t\tty2: ty2,\n\t\t\t\tx1: x1,\n\t\t\t\ty1: y1,\n\t\t\t\tx2: x2,\n\t\t\t\ty2: y2,\n\t\t\t\tlabelX: labelX,\n\t\t\t\tlabelY: labelY,\n\t\t\t\tglWidth: lineWidth,\n\t\t\t\tglColor: lineColor,\n\t\t\t\tglBorderDash: borderDash,\n\t\t\t\tglBorderDashOffset: borderDashOffset,\n\t\t\t\trotation: -1 * labelRotationRadians,\n\t\t\t\tlabel: label,\n\t\t\t\tmajor: tick.major,\n\t\t\t\ttextBaseline: textBaseline,\n\t\t\t\ttextAlign: textAlign\n\t\t\t});\n\t\t});\n\n\t\t// Draw all of the tick labels, tick marks, and grid lines at the correct places\n\t\thelpers.each(itemsToDraw, function(itemToDraw) {\n\t\t\tif (gridLines.display) {\n\t\t\t\tcontext.save();\n\t\t\t\tcontext.lineWidth = itemToDraw.glWidth;\n\t\t\t\tcontext.strokeStyle = itemToDraw.glColor;\n\t\t\t\tif (context.setLineDash) {\n\t\t\t\t\tcontext.setLineDash(itemToDraw.glBorderDash);\n\t\t\t\t\tcontext.lineDashOffset = itemToDraw.glBorderDashOffset;\n\t\t\t\t}\n\n\t\t\t\tcontext.beginPath();\n\n\t\t\t\tif (gridLines.drawTicks) {\n\t\t\t\t\tcontext.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n\t\t\t\t\tcontext.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n\t\t\t\t}\n\n\t\t\t\tif (gridLines.drawOnChartArea) {\n\t\t\t\t\tcontext.moveTo(itemToDraw.x1, itemToDraw.y1);\n\t\t\t\t\tcontext.lineTo(itemToDraw.x2, itemToDraw.y2);\n\t\t\t\t}\n\n\t\t\t\tcontext.stroke();\n\t\t\t\tcontext.restore();\n\t\t\t}\n\n\t\t\tif (optionTicks.display) {\n\t\t\t\t// Make sure we draw text in the correct color and font\n\t\t\t\tcontext.save();\n\t\t\t\tcontext.translate(itemToDraw.labelX, itemToDraw.labelY);\n\t\t\t\tcontext.rotate(itemToDraw.rotation);\n\t\t\t\tcontext.font = itemToDraw.major ? majorTickFont.font : tickFont.font;\n\t\t\t\tcontext.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n\t\t\t\tcontext.textBaseline = itemToDraw.textBaseline;\n\t\t\t\tcontext.textAlign = itemToDraw.textAlign;\n\n\t\t\t\tvar label = itemToDraw.label;\n\t\t\t\tif (helpers.isArray(label)) {\n\t\t\t\t\tvar lineCount = label.length;\n\t\t\t\t\tvar lineHeight = tickFont.size * 1.5;\n\t\t\t\t\tvar y = me.isHorizontal() ? 0 : -lineHeight * (lineCount - 1) / 2;\n\n\t\t\t\t\tfor (var i = 0; i < lineCount; ++i) {\n\t\t\t\t\t\t// We just make sure the multiline element is a string here..\n\t\t\t\t\t\tcontext.fillText('' + label[i], 0, y);\n\t\t\t\t\t\t// apply same lineSpacing as calculated @ L#320\n\t\t\t\t\t\ty += lineHeight;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tcontext.fillText(label, 0, 0);\n\t\t\t\t}\n\t\t\t\tcontext.restore();\n\t\t\t}\n\t\t});\n\n\t\tif (scaleLabel.display) {\n\t\t\t// Draw the scale label\n\t\t\tvar scaleLabelX;\n\t\t\tvar scaleLabelY;\n\t\t\tvar rotation = 0;\n\t\t\tvar halfLineHeight = parseLineHeight(scaleLabel) / 2;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tscaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width\n\t\t\t\tscaleLabelY = options.position === 'bottom'\n\t\t\t\t\t? me.bottom - halfLineHeight - scaleLabelPadding.bottom\n\t\t\t\t\t: me.top + halfLineHeight + scaleLabelPadding.top;\n\t\t\t} else {\n\t\t\t\tvar isLeft = options.position === 'left';\n\t\t\t\tscaleLabelX = isLeft\n\t\t\t\t\t? me.left + halfLineHeight + scaleLabelPadding.top\n\t\t\t\t\t: me.right - halfLineHeight - scaleLabelPadding.top;\n\t\t\t\tscaleLabelY = me.top + ((me.bottom - me.top) / 2);\n\t\t\t\trotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n\t\t\t}\n\n\t\t\tcontext.save();\n\t\t\tcontext.translate(scaleLabelX, scaleLabelY);\n\t\t\tcontext.rotate(rotation);\n\t\t\tcontext.textAlign = 'center';\n\t\t\tcontext.textBaseline = 'middle';\n\t\t\tcontext.fillStyle = scaleLabelFontColor; // render in correct colour\n\t\t\tcontext.font = scaleLabelFont.font;\n\t\t\tcontext.fillText(scaleLabel.labelString, 0, 0);\n\t\t\tcontext.restore();\n\t\t}\n\n\t\tif (gridLines.drawBorder) {\n\t\t\t// Draw the line at the edge of the axis\n\t\t\tcontext.lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, 0);\n\t\t\tcontext.strokeStyle = helpers.valueAtIndexOrDefault(gridLines.color, 0);\n\t\t\tvar x1 = me.left;\n\t\t\tvar x2 = me.right + axisWidth;\n\t\t\tvar y1 = me.top;\n\t\t\tvar y2 = me.bottom + axisWidth;\n\n\t\t\tvar aliasPixel = helpers.aliasPixel(context.lineWidth);\n\t\t\tif (isHorizontal) {\n\t\t\t\ty1 = y2 = options.position === 'top' ? me.bottom : me.top;\n\t\t\t\ty1 += aliasPixel;\n\t\t\t\ty2 += aliasPixel;\n\t\t\t} else {\n\t\t\t\tx1 = x2 = options.position === 'left' ? me.right : me.left;\n\t\t\t\tx1 += aliasPixel;\n\t\t\t\tx2 += aliasPixel;\n\t\t\t}\n\n\t\t\tcontext.beginPath();\n\t\t\tcontext.moveTo(x1, y1);\n\t\t\tcontext.lineTo(x2, y2);\n\t\t\tcontext.stroke();\n\t\t}\n\t}\n});\n","/* global window: false */\n'use strict';\n\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\tanimation: {\n\t\tduration: 1000,\n\t\teasing: 'easeOutQuart',\n\t\tonProgress: helpers.noop,\n\t\tonComplete: helpers.noop\n\t}\n});\n\nmodule.exports = {\n\tframeDuration: 17,\n\tanimations: [],\n\tdropFrames: 0,\n\trequest: null,\n\n\t/**\n\t * @param {Chart} chart - The chart to animate.\n\t * @param {Chart.Animation} animation - The animation that we will animate.\n\t * @param {Number} duration - The animation duration in ms.\n\t * @param {Boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n\t */\n\taddAnimation: function(chart, animation, duration, lazy) {\n\t\tvar animations = this.animations;\n\t\tvar i, ilen;\n\n\t\tanimation.chart = chart;\n\n\t\tif (!lazy) {\n\t\t\tchart.animating = true;\n\t\t}\n\n\t\tfor (i = 0, ilen = animations.length; i < ilen; ++i) {\n\t\t\tif (animations[i].chart === chart) {\n\t\t\t\tanimations[i] = animation;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tanimations.push(animation);\n\n\t\t// If there are no animations queued, manually kickstart a digest, for lack of a better word\n\t\tif (animations.length === 1) {\n\t\t\tthis.requestAnimationFrame();\n\t\t}\n\t},\n\n\tcancelAnimation: function(chart) {\n\t\tvar index = helpers.findIndex(this.animations, function(animation) {\n\t\t\treturn animation.chart === chart;\n\t\t});\n\n\t\tif (index !== -1) {\n\t\t\tthis.animations.splice(index, 1);\n\t\t\tchart.animating = false;\n\t\t}\n\t},\n\n\trequestAnimationFrame: function() {\n\t\tvar me = this;\n\t\tif (me.request === null) {\n\t\t\t// Skip animation frame requests until the active one is executed.\n\t\t\t// This can happen when processing mouse events, e.g. 'mousemove'\n\t\t\t// and 'mouseout' events will trigger multiple renders.\n\t\t\tme.request = helpers.requestAnimFrame.call(window, function() {\n\t\t\t\tme.request = null;\n\t\t\t\tme.startDigest();\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tstartDigest: function() {\n\t\tvar me = this;\n\t\tvar startTime = Date.now();\n\t\tvar framesToDrop = 0;\n\n\t\tif (me.dropFrames > 1) {\n\t\t\tframesToDrop = Math.floor(me.dropFrames);\n\t\t\tme.dropFrames = me.dropFrames % 1;\n\t\t}\n\n\t\tme.advance(1 + framesToDrop);\n\n\t\tvar endTime = Date.now();\n\n\t\tme.dropFrames += (endTime - startTime) / me.frameDuration;\n\n\t\t// Do we have more stuff to animate?\n\t\tif (me.animations.length > 0) {\n\t\t\tme.requestAnimationFrame();\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tadvance: function(count) {\n\t\tvar animations = this.animations;\n\t\tvar animation, chart;\n\t\tvar i = 0;\n\n\t\twhile (i < animations.length) {\n\t\t\tanimation = animations[i];\n\t\t\tchart = animation.chart;\n\n\t\t\tanimation.currentStep = (animation.currentStep || 0) + count;\n\t\t\tanimation.currentStep = Math.min(animation.currentStep, animation.numSteps);\n\n\t\t\thelpers.callback(animation.render, [chart, animation], chart);\n\t\t\thelpers.callback(animation.onAnimationProgress, [animation], chart);\n\n\t\t\tif (animation.currentStep >= animation.numSteps) {\n\t\t\t\thelpers.callback(animation.onAnimationComplete, [animation], chart);\n\t\t\t\tchart.animating = false;\n\t\t\t\tanimations.splice(i, 1);\n\t\t\t} else {\n\t\t\t\t++i;\n\t\t\t}\n\t\t}\n\t}\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\nfunction filterByPosition(array, position) {\n\treturn helpers.where(array, function(v) {\n\t\treturn v.position === position;\n\t});\n}\n\nfunction sortByWeight(array, reverse) {\n\tarray.forEach(function(v, i) {\n\t\tv._tmpIndex_ = i;\n\t\treturn v;\n\t});\n\tarray.sort(function(a, b) {\n\t\tvar v0 = reverse ? b : a;\n\t\tvar v1 = reverse ? a : b;\n\t\treturn v0.weight === v1.weight ?\n\t\t\tv0._tmpIndex_ - v1._tmpIndex_ :\n\t\t\tv0.weight - v1.weight;\n\t});\n\tarray.forEach(function(v) {\n\t\tdelete v._tmpIndex_;\n\t});\n}\n\n/**\n * @interface ILayoutItem\n * @prop {String} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {Number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {Boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n * @prop {Function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {Function} update - Takes two parameters: width and height. Returns size of item\n * @prop {Function} getPadding -  Returns an object with padding on the edges\n * @prop {Number} width - Width of item. Must be valid after update()\n * @prop {Number} height - Height of item. Must be valid after update()\n * @prop {Number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nmodule.exports = {\n\tdefaults: {},\n\n\t/**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {ILayoutItem} item - the item to add to be layed out\n\t */\n\taddBox: function(chart, item) {\n\t\tif (!chart.boxes) {\n\t\t\tchart.boxes = [];\n\t\t}\n\n\t\t// initialize item with default values\n\t\titem.fullWidth = item.fullWidth || false;\n\t\titem.position = item.position || 'top';\n\t\titem.weight = item.weight || 0;\n\n\t\tchart.boxes.push(item);\n\t},\n\n\t/**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {Object} layoutItem - the item to remove from the layout\n\t */\n\tremoveBox: function(chart, layoutItem) {\n\t\tvar index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\t\tif (index !== -1) {\n\t\t\tchart.boxes.splice(index, 1);\n\t\t}\n\t},\n\n\t/**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {Object} item - the item to configure with the given options\n\t * @param {Object} options - the new item options.\n\t */\n\tconfigure: function(chart, item, options) {\n\t\tvar props = ['fullWidth', 'position', 'weight'];\n\t\tvar ilen = props.length;\n\t\tvar i = 0;\n\t\tvar prop;\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\tprop = props[i];\n\t\t\tif (options.hasOwnProperty(prop)) {\n\t\t\t\titem[prop] = options[prop];\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {Number} width - the width to fit into\n\t * @param {Number} height - the height to fit into\n\t */\n\tupdate: function(chart, width, height) {\n\t\tif (!chart) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar layoutOptions = chart.options.layout || {};\n\t\tvar padding = helpers.options.toPadding(layoutOptions.padding);\n\t\tvar leftPadding = padding.left;\n\t\tvar rightPadding = padding.right;\n\t\tvar topPadding = padding.top;\n\t\tvar bottomPadding = padding.bottom;\n\n\t\tvar leftBoxes = filterByPosition(chart.boxes, 'left');\n\t\tvar rightBoxes = filterByPosition(chart.boxes, 'right');\n\t\tvar topBoxes = filterByPosition(chart.boxes, 'top');\n\t\tvar bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n\t\tvar chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea');\n\n\t\t// Sort boxes by weight. A higher weight is further away from the chart area\n\t\tsortByWeight(leftBoxes, true);\n\t\tsortByWeight(rightBoxes, false);\n\t\tsortByWeight(topBoxes, true);\n\t\tsortByWeight(bottomBoxes, false);\n\n\t\t// Essentially we now have any number of boxes on each of the 4 sides.\n\t\t// Our canvas looks like the following.\n\t\t// The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n\t\t// B1 is the bottom axis\n\t\t// There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n\t\t// These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n\t\t// an error will be thrown.\n\t\t//\n\t\t// |----------------------------------------------------|\n\t\t// |                  T1 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t// |    |    |                 T2                  |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    | C1 |                           | C2 |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    |                                     |    |\n\t\t// | L1 | L2 |           ChartArea (C0)            | R1 |\n\t\t// |    |    |                                     |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    | C3 |                           | C4 |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    |                 B1                  |    |\n\t\t// |----------------------------------------------------|\n\t\t// |                  B2 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t//\n\t\t// What we do to find the best sizing, we do the following\n\t\t// 1. Determine the minimum size of the chart area.\n\t\t// 2. Split the remaining width equally between each vertical axis\n\t\t// 3. Split the remaining height equally between each horizontal axis\n\t\t// 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n\t\t// 5. Adjust the sizes of each axis based on it's minimum reported size.\n\t\t// 6. Refit each axis\n\t\t// 7. Position each axis in the final location\n\t\t// 8. Tell the chart the final location of the chart area\n\t\t// 9. Tell any axes that overlay the chart area the positions of the chart area\n\n\t\t// Step 1\n\t\tvar chartWidth = width - leftPadding - rightPadding;\n\t\tvar chartHeight = height - topPadding - bottomPadding;\n\t\tvar chartAreaWidth = chartWidth / 2; // min 50%\n\t\tvar chartAreaHeight = chartHeight / 2; // min 50%\n\n\t\t// Step 2\n\t\tvar verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length);\n\n\t\t// Step 3\n\t\tvar horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length);\n\n\t\t// Step 4\n\t\tvar maxChartAreaWidth = chartWidth;\n\t\tvar maxChartAreaHeight = chartHeight;\n\t\tvar minBoxSizes = [];\n\n\t\tfunction getMinimumBoxSize(box) {\n\t\t\tvar minSize;\n\t\t\tvar isHorizontal = box.isHorizontal();\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);\n\t\t\t\tmaxChartAreaHeight -= minSize.height;\n\t\t\t} else {\n\t\t\t\tminSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n\t\t\t\tmaxChartAreaWidth -= minSize.width;\n\t\t\t}\n\n\t\t\tminBoxSizes.push({\n\t\t\t\thorizontal: isHorizontal,\n\t\t\t\tminSize: minSize,\n\t\t\t\tbox: box,\n\t\t\t});\n\t\t}\n\n\t\thelpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize);\n\n\t\t// If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\t\tvar maxHorizontalLeftPadding = 0;\n\t\tvar maxHorizontalRightPadding = 0;\n\t\tvar maxVerticalTopPadding = 0;\n\t\tvar maxVerticalBottomPadding = 0;\n\n\t\thelpers.each(topBoxes.concat(bottomBoxes), function(horizontalBox) {\n\t\t\tif (horizontalBox.getPadding) {\n\t\t\t\tvar boxPadding = horizontalBox.getPadding();\n\t\t\t\tmaxHorizontalLeftPadding = Math.max(maxHorizontalLeftPadding, boxPadding.left);\n\t\t\t\tmaxHorizontalRightPadding = Math.max(maxHorizontalRightPadding, boxPadding.right);\n\t\t\t}\n\t\t});\n\n\t\thelpers.each(leftBoxes.concat(rightBoxes), function(verticalBox) {\n\t\t\tif (verticalBox.getPadding) {\n\t\t\t\tvar boxPadding = verticalBox.getPadding();\n\t\t\t\tmaxVerticalTopPadding = Math.max(maxVerticalTopPadding, boxPadding.top);\n\t\t\t\tmaxVerticalBottomPadding = Math.max(maxVerticalBottomPadding, boxPadding.bottom);\n\t\t\t}\n\t\t});\n\n\t\t// At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n\t\t// be if the axes are drawn at their minimum sizes.\n\t\t// Steps 5 & 6\n\t\tvar totalLeftBoxesWidth = leftPadding;\n\t\tvar totalRightBoxesWidth = rightPadding;\n\t\tvar totalTopBoxesHeight = topPadding;\n\t\tvar totalBottomBoxesHeight = bottomPadding;\n\n\t\t// Function to fit a box\n\t\tfunction fitBox(box) {\n\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minBox) {\n\t\t\t\treturn minBox.box === box;\n\t\t\t});\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tif (box.isHorizontal()) {\n\t\t\t\t\tvar scaleMargin = {\n\t\t\t\t\t\tleft: Math.max(totalLeftBoxesWidth, maxHorizontalLeftPadding),\n\t\t\t\t\t\tright: Math.max(totalRightBoxesWidth, maxHorizontalRightPadding),\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tbottom: 0\n\t\t\t\t\t};\n\n\t\t\t\t\t// Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n\t\t\t\t\t// on the margin. Sometimes they need to increase in size slightly\n\t\t\t\t\tbox.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n\t\t\t\t} else {\n\t\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Update, and calculate the left and right margins for the horizontal boxes\n\t\thelpers.each(leftBoxes.concat(rightBoxes), fitBox);\n\n\t\thelpers.each(leftBoxes, function(box) {\n\t\t\ttotalLeftBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(rightBoxes, function(box) {\n\t\t\ttotalRightBoxesWidth += box.width;\n\t\t});\n\n\t\t// Set the Left and Right margins for the horizontal boxes\n\t\thelpers.each(topBoxes.concat(bottomBoxes), fitBox);\n\n\t\t// Figure out how much margin is on the top and bottom of the vertical boxes\n\t\thelpers.each(topBoxes, function(box) {\n\t\t\ttotalTopBoxesHeight += box.height;\n\t\t});\n\n\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\ttotalBottomBoxesHeight += box.height;\n\t\t});\n\n\t\tfunction finalFitVerticalBox(box) {\n\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minSize) {\n\t\t\t\treturn minSize.box === box;\n\t\t\t});\n\n\t\t\tvar scaleMargin = {\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: totalTopBoxesHeight,\n\t\t\t\tbottom: totalBottomBoxesHeight\n\t\t\t};\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);\n\t\t\t}\n\t\t}\n\n\t\t// Let the left layout know the final margin\n\t\thelpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox);\n\n\t\t// Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\t\ttotalLeftBoxesWidth = leftPadding;\n\t\ttotalRightBoxesWidth = rightPadding;\n\t\ttotalTopBoxesHeight = topPadding;\n\t\ttotalBottomBoxesHeight = bottomPadding;\n\n\t\thelpers.each(leftBoxes, function(box) {\n\t\t\ttotalLeftBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(rightBoxes, function(box) {\n\t\t\ttotalRightBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(topBoxes, function(box) {\n\t\t\ttotalTopBoxesHeight += box.height;\n\t\t});\n\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\ttotalBottomBoxesHeight += box.height;\n\t\t});\n\n\t\t// We may be adding some padding to account for rotated x axis labels\n\t\tvar leftPaddingAddition = Math.max(maxHorizontalLeftPadding - totalLeftBoxesWidth, 0);\n\t\ttotalLeftBoxesWidth += leftPaddingAddition;\n\t\ttotalRightBoxesWidth += Math.max(maxHorizontalRightPadding - totalRightBoxesWidth, 0);\n\n\t\tvar topPaddingAddition = Math.max(maxVerticalTopPadding - totalTopBoxesHeight, 0);\n\t\ttotalTopBoxesHeight += topPaddingAddition;\n\t\ttotalBottomBoxesHeight += Math.max(maxVerticalBottomPadding - totalBottomBoxesHeight, 0);\n\n\t\t// Figure out if our chart area changed. This would occur if the dataset layout label rotation\n\t\t// changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n\t\t// without calling `fit` again\n\t\tvar newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;\n\t\tvar newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;\n\n\t\tif (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n\t\t\thelpers.each(leftBoxes, function(box) {\n\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t});\n\n\t\t\thelpers.each(rightBoxes, function(box) {\n\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t});\n\n\t\t\thelpers.each(topBoxes, function(box) {\n\t\t\t\tif (!box.fullWidth) {\n\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\t\tif (!box.fullWidth) {\n\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmaxChartAreaHeight = newMaxChartAreaHeight;\n\t\t\tmaxChartAreaWidth = newMaxChartAreaWidth;\n\t\t}\n\n\t\t// Step 7 - Position the boxes\n\t\tvar left = leftPadding + leftPaddingAddition;\n\t\tvar top = topPadding + topPaddingAddition;\n\n\t\tfunction placeBox(box) {\n\t\t\tif (box.isHorizontal()) {\n\t\t\t\tbox.left = box.fullWidth ? leftPadding : totalLeftBoxesWidth;\n\t\t\t\tbox.right = box.fullWidth ? width - rightPadding : totalLeftBoxesWidth + maxChartAreaWidth;\n\t\t\t\tbox.top = top;\n\t\t\t\tbox.bottom = top + box.height;\n\n\t\t\t\t// Move to next point\n\t\t\t\ttop = box.bottom;\n\n\t\t\t} else {\n\n\t\t\t\tbox.left = left;\n\t\t\t\tbox.right = left + box.width;\n\t\t\t\tbox.top = totalTopBoxesHeight;\n\t\t\t\tbox.bottom = totalTopBoxesHeight + maxChartAreaHeight;\n\n\t\t\t\t// Move to next point\n\t\t\t\tleft = box.right;\n\t\t\t}\n\t\t}\n\n\t\thelpers.each(leftBoxes.concat(topBoxes), placeBox);\n\n\t\t// Account for chart width and height\n\t\tleft += maxChartAreaWidth;\n\t\ttop += maxChartAreaHeight;\n\n\t\thelpers.each(rightBoxes, placeBox);\n\t\thelpers.each(bottomBoxes, placeBox);\n\n\t\t// Step 8\n\t\tchart.chartArea = {\n\t\t\tleft: totalLeftBoxesWidth,\n\t\t\ttop: totalTopBoxesHeight,\n\t\t\tright: totalLeftBoxesWidth + maxChartAreaWidth,\n\t\t\tbottom: totalTopBoxesHeight + maxChartAreaHeight\n\t\t};\n\n\t\t// Step 9\n\t\thelpers.each(chartAreaBoxes, function(box) {\n\t\t\tbox.left = chart.chartArea.left;\n\t\t\tbox.top = chart.chartArea.top;\n\t\t\tbox.right = chart.chartArea.right;\n\t\t\tbox.bottom = chart.chartArea.bottom;\n\n\t\t\tbox.update(maxChartAreaWidth, maxChartAreaHeight);\n\t\t});\n\t}\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nmodule.exports = {\n\t/**\n\t * Namespace to hold formatters for different types of ticks\n\t * @namespace Chart.Ticks.formatters\n\t */\n\tformatters: {\n\t\t/**\n\t\t * Formatter for value labels\n\t\t * @method Chart.Ticks.formatters.values\n\t\t * @param value the value to display\n\t\t * @return {String|Array} the label to display\n\t\t */\n\t\tvalues: function(value) {\n\t\t\treturn helpers.isArray(value) ? value : '' + value;\n\t\t},\n\n\t\t/**\n\t\t * Formatter for linear numeric ticks\n\t\t * @method Chart.Ticks.formatters.linear\n\t\t * @param tickValue {Number} the value to be formatted\n\t\t * @param index {Number} the position of the tickValue parameter in the ticks array\n\t\t * @param ticks {Array<Number>} the list of ticks being converted\n\t\t * @return {String} string representation of the tickValue parameter\n\t\t */\n\t\tlinear: function(tickValue, index, ticks) {\n\t\t\t// If we have lots of ticks, don't use the ones\n\t\t\tvar delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];\n\n\t\t\t// If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\t\t\tif (Math.abs(delta) > 1) {\n\t\t\t\tif (tickValue !== Math.floor(tickValue)) {\n\t\t\t\t\t// not an integer\n\t\t\t\t\tdelta = tickValue - Math.floor(tickValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar logDelta = helpers.log10(Math.abs(delta));\n\t\t\tvar tickString = '';\n\n\t\t\tif (tickValue !== 0) {\n\t\t\t\tvar maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\t\t\t\tif (maxTick < 1e-4) { // all ticks are small numbers; use scientific notation\n\t\t\t\t\tvar logTick = helpers.log10(Math.abs(tickValue));\n\t\t\t\t\ttickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n\t\t\t\t} else {\n\t\t\t\t\tvar numDecimal = -1 * Math.floor(logDelta);\n\t\t\t\t\tnumDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\t\t\t\t\ttickString = tickValue.toFixed(numDecimal);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttickString = '0'; // never show decimal places for 0\n\t\t\t}\n\n\t\t\treturn tickString;\n\t\t},\n\n\t\tlogarithmic: function(tickValue, index, ticks) {\n\t\t\tvar remain = tickValue / (Math.pow(10, Math.floor(helpers.log10(tickValue))));\n\n\t\t\tif (tickValue === 0) {\n\t\t\t\treturn '0';\n\t\t\t} else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n\t\t\t\treturn tickValue.toExponential();\n\t\t\t}\n\t\t\treturn '';\n\t\t}\n\t}\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\nvar basic = require('./platform.basic');\nvar dom = require('./platform.dom');\n\n// @TODO Make possible to select another platform at build time.\nvar implementation = dom._enabled ? dom : basic;\n\n/**\n * @namespace Chart.platform\n * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n * @since 2.4.0\n */\nmodule.exports = helpers.extend({\n\t/**\n\t * @since 2.7.0\n\t */\n\tinitialize: function() {},\n\n\t/**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {*} item - The native item from which to acquire context (platform specific)\n\t * @param {Object} options - The chart options\n\t * @returns {CanvasRenderingContext2D} context2d instance\n\t */\n\tacquireContext: function() {},\n\n\t/**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {Boolean} true if the method succeeded, else false\n\t */\n\treleaseContext: function() {},\n\n\t/**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {String} type - The ({@link IEvent}) type to listen for\n\t * @param {Function} listener - Receives a notification (an object that implements\n\t * the {@link IEvent} interface) when an event of the specified type occurs.\n\t */\n\taddEventListener: function() {},\n\n\t/**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart -Chart from which to remove the listener\n\t * @param {String} type - The ({@link IEvent}) type to remove\n\t * @param {Function} listener - The listener function to remove from the event target.\n\t */\n\tremoveEventListener: function() {}\n\n}, implementation);\n\n/**\n * @interface IPlatform\n * Allows abstracting platform dependencies away from the chart\n * @borrows Chart.platform.acquireContext as acquireContext\n * @borrows Chart.platform.releaseContext as releaseContext\n * @borrows Chart.platform.addEventListener as addEventListener\n * @borrows Chart.platform.removeEventListener as removeEventListener\n */\n\n/**\n * @interface IEvent\n * @prop {String} type - The event type name, possible values are:\n * 'contextmenu', 'mouseenter', 'mousedown', 'mousemove', 'mouseup', 'mouseout',\n * 'click', 'dblclick', 'keydown', 'keypress', 'keyup' and 'resize'\n * @prop {*} native - The original native event (null for emulated events, e.g. 'resize')\n * @prop {Number} x - The mouse x position, relative to the canvas (null for incompatible events)\n * @prop {Number} y - The mouse y position, relative to the canvas (null for incompatible events)\n */\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Radar = function(context, config) {\n\t\tconfig.type = 'radar';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\nmodule.exports = {};\nmodule.exports.filler = require('./plugin.filler');\nmodule.exports.legend = require('./plugin.legend');\nmodule.exports.title = require('./plugin.title');\n","/* MIT license */\nvar colorNames = require('color-name');\n\nmodule.exports = {\n   getRgba: getRgba,\n   getHsla: getHsla,\n   getRgb: getRgb,\n   getHsl: getHsl,\n   getHwb: getHwb,\n   getAlpha: getAlpha,\n\n   hexString: hexString,\n   rgbString: rgbString,\n   rgbaString: rgbaString,\n   percentString: percentString,\n   percentaString: percentaString,\n   hslString: hslString,\n   hslaString: hslaString,\n   hwbString: hwbString,\n   keyword: keyword\n}\n\nfunction getRgba(string) {\n   if (!string) {\n      return;\n   }\n   var abbr =  /^#([a-fA-F0-9]{3})$/i,\n       hex =  /^#([a-fA-F0-9]{6})$/i,\n       rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       keyword = /(\\w+)/;\n\n   var rgb = [0, 0, 0],\n       a = 1,\n       match = string.match(abbr);\n   if (match) {\n      match = match[1];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n   }\n   else if (match = string.match(hex)) {\n      match = match[1];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n   }\n   else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i + 1]);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n         return [0, 0, 0, 0];\n      }\n      rgb = colorNames[match[1]];\n      if (!rgb) {\n         return;\n      }\n   }\n\n   for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n   }\n   if (!a && a != 0) {\n      a = 1;\n   }\n   else {\n      a = scale(a, 0, 1);\n   }\n   rgb[3] = a;\n   return rgb;\n}\n\nfunction getHsla(string) {\n   if (!string) {\n      return;\n   }\n   var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hsl);\n   if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n   }\n}\n\nfunction getHwb(string) {\n   if (!string) {\n      return;\n   }\n   var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hwb);\n   if (match) {\n    var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n   }\n}\n\nfunction getRgb(string) {\n   var rgba = getRgba(string);\n   return rgba && rgba.slice(0, 3);\n}\n\nfunction getHsl(string) {\n  var hsla = getHsla(string);\n  return hsla && hsla.slice(0, 3);\n}\n\nfunction getAlpha(string) {\n   var vals = getRgba(string);\n   if (vals) {\n      return vals[3];\n   }\n   else if (vals = getHsla(string)) {\n      return vals[3];\n   }\n   else if (vals = getHwb(string)) {\n      return vals[3];\n   }\n}\n\n// generators\nfunction hexString(rgb) {\n   return \"#\" + hexDouble(rgb[0]) + hexDouble(rgb[1])\n              + hexDouble(rgb[2]);\n}\n\nfunction rgbString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return rgbaString(rgba, alpha);\n   }\n   return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n}\n\nfunction rgbaString(rgba, alpha) {\n   if (alpha === undefined) {\n      alpha = (rgba[3] !== undefined ? rgba[3] : 1);\n   }\n   return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2]\n           + \", \" + alpha + \")\";\n}\n\nfunction percentString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return percentaString(rgba, alpha);\n   }\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n\n   return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n}\n\nfunction percentaString(rgba, alpha) {\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n   return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n}\n\nfunction hslString(hsla, alpha) {\n   if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {\n      return hslaString(hsla, alpha);\n   }\n   return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n}\n\nfunction hslaString(hsla, alpha) {\n   if (alpha === undefined) {\n      alpha = (hsla[3] !== undefined ? hsla[3] : 1);\n   }\n   return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \"\n           + alpha + \")\";\n}\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\nfunction hwbString(hwb, alpha) {\n   if (alpha === undefined) {\n      alpha = (hwb[3] !== undefined ? hwb[3] : 1);\n   }\n   return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\"\n           + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n}\n\nfunction keyword(rgb) {\n  return reverseNames[rgb.slice(0, 3)];\n}\n\n// helpers\nfunction scale(num, min, max) {\n   return Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n  var str = num.toString(16).toUpperCase();\n  return (str.length < 2) ? \"0\" + str : str;\n}\n\n\n//create a list of reverse color names\nvar reverseNames = {};\nfor (var name in colorNames) {\n   reverseNames[colorNames[name]] = name;\n}\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n\ttitle: {\n\t\tdisplay: false,\n\t\tfontStyle: 'bold',\n\t\tfullWidth: true,\n\t\tlineHeight: 1.2,\n\t\tpadding: 10,\n\t\tposition: 'top',\n\t\ttext: '',\n\t\tweight: 2000         // by default greater than legend (1000) to be above\n\t}\n});\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Title = Element.extend({\n\tinitialize: function(config) {\n\t\tvar me = this;\n\t\thelpers.extend(me, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tme.legendHitBoxes = [];\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\n\tbeforeUpdate: noop,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\n\t},\n\tafterUpdate: noop,\n\n\t//\n\n\tbeforeSetDimensions: noop,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop,\n\n\t//\n\n\tbeforeBuildLabels: noop,\n\tbuildLabels: noop,\n\tafterBuildLabels: noop,\n\n\t//\n\n\tbeforeFit: noop,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar opts = me.options;\n\t\tvar display = opts.display;\n\t\tvar fontSize = valueOrDefault(opts.fontSize, defaults.global.defaultFontSize);\n\t\tvar minSize = me.minSize;\n\t\tvar lineCount = helpers.isArray(opts.text) ? opts.text.length : 1;\n\t\tvar lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n\t\tvar textSize = display ? (lineCount * lineHeight) + (opts.padding * 2) : 0;\n\n\t\tif (me.isHorizontal()) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = textSize;\n\t\t} else {\n\t\t\tminSize.width = textSize;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\n\t},\n\tafterFit: noop,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\tvar pos = this.options.position;\n\t\treturn pos === 'top' || pos === 'bottom';\n\t},\n\n\t// Actually draw the title block on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar ctx = me.ctx;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar opts = me.options;\n\t\tvar globalDefaults = defaults.global;\n\n\t\tif (opts.display) {\n\t\t\tvar fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize);\n\t\t\tvar fontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\tvar fontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\tvar titleFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\t\t\tvar lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n\t\t\tvar offset = lineHeight / 2 + opts.padding;\n\t\t\tvar rotation = 0;\n\t\t\tvar top = me.top;\n\t\t\tvar left = me.left;\n\t\t\tvar bottom = me.bottom;\n\t\t\tvar right = me.right;\n\t\t\tvar maxWidth, titleX, titleY;\n\n\t\t\tctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\n\t\t\tctx.font = titleFont;\n\n\t\t\t// Horizontal\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\ttitleX = left + ((right - left) / 2); // midpoint of the width\n\t\t\t\ttitleY = top + offset;\n\t\t\t\tmaxWidth = right - left;\n\t\t\t} else {\n\t\t\t\ttitleX = opts.position === 'left' ? left + offset : right - offset;\n\t\t\t\ttitleY = top + ((bottom - top) / 2);\n\t\t\t\tmaxWidth = bottom - top;\n\t\t\t\trotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n\t\t\t}\n\n\t\t\tctx.save();\n\t\t\tctx.translate(titleX, titleY);\n\t\t\tctx.rotate(rotation);\n\t\t\tctx.textAlign = 'center';\n\t\t\tctx.textBaseline = 'middle';\n\n\t\t\tvar text = opts.text;\n\t\t\tif (helpers.isArray(text)) {\n\t\t\t\tvar y = 0;\n\t\t\t\tfor (var i = 0; i < text.length; ++i) {\n\t\t\t\t\tctx.fillText(text[i], 0, y, maxWidth);\n\t\t\t\t\ty += lineHeight;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tctx.fillText(text, 0, 0, maxWidth);\n\t\t\t}\n\n\t\t\tctx.restore();\n\t\t}\n\t}\n});\n\nfunction createNewTitleBlockAndAttach(chart, titleOpts) {\n\tvar title = new Title({\n\t\tctx: chart.ctx,\n\t\toptions: titleOpts,\n\t\tchart: chart\n\t});\n\n\tlayouts.configure(chart, title, titleOpts);\n\tlayouts.addBox(chart, title);\n\tchart.titleBlock = title;\n}\n\nmodule.exports = {\n\tid: 'title',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n\t * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Title,\n\n\tbeforeInit: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\n\t\tif (titleOpts) {\n\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\t\tvar titleBlock = chart.titleBlock;\n\n\t\tif (titleOpts) {\n\t\t\thelpers.mergeIf(titleOpts, defaults.global.title);\n\n\t\t\tif (titleBlock) {\n\t\t\t\tlayouts.configure(chart, titleBlock, titleOpts);\n\t\t\t\ttitleBlock.options = titleOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t\t}\n\t\t} else if (titleBlock) {\n\t\t\tlayouts.removeBox(chart, titleBlock);\n\t\t\tdelete chart.titleBlock;\n\t\t}\n\t}\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\n/**\n * Helper function to get relative position for an event\n * @param {Event|IEvent} event - The event to get the position for\n * @param {Chart} chart - The chart\n * @returns {Point} the event position\n */\nfunction getRelativePosition(e, chart) {\n\tif (e.native) {\n\t\treturn {\n\t\t\tx: e.x,\n\t\t\ty: e.y\n\t\t};\n\t}\n\n\treturn helpers.getRelativePosition(e, chart);\n}\n\n/**\n * Helper function to traverse all of the visible elements in the chart\n * @param chart {chart} the chart\n * @param handler {Function} the callback to execute for each visible item\n */\nfunction parseVisibleItems(chart, handler) {\n\tvar datasets = chart.data.datasets;\n\tvar meta, i, j, ilen, jlen;\n\n\tfor (i = 0, ilen = datasets.length; i < ilen; ++i) {\n\t\tif (!chart.isDatasetVisible(i)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tmeta = chart.getDatasetMeta(i);\n\t\tfor (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n\t\t\tvar element = meta.data[j];\n\t\t\tif (!element._view.skip) {\n\t\t\t\thandler(element);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param items {ChartElement[]} elements to filter\n * @param position {Point} the point to be nearest to\n * @return {ChartElement[]} the nearest items\n */\nfunction getIntersectItems(chart, position) {\n\tvar elements = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (element.inRange(position.x, position.y)) {\n\t\t\telements.push(element);\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in teh chart\n * @param chart {Chart} the chart to look at elements from\n * @param position {Point} the point to be nearest to\n * @param intersect {Boolean} if true, only consider items that intersect the position\n * @param distanceMetric {Function} function to provide the distance between points\n * @return {ChartElement[]} the nearest items\n */\nfunction getNearestItems(chart, position, intersect, distanceMetric) {\n\tvar minDistance = Number.POSITIVE_INFINITY;\n\tvar nearestItems = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (intersect && !element.inRange(position.x, position.y)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar center = element.getCenterPoint();\n\t\tvar distance = distanceMetric(position, center);\n\n\t\tif (distance < minDistance) {\n\t\t\tnearestItems = [element];\n\t\t\tminDistance = distance;\n\t\t} else if (distance === minDistance) {\n\t\t\t// Can have multiple items at the same distance in which case we sort by size\n\t\t\tnearestItems.push(element);\n\t\t}\n\t});\n\n\treturn nearestItems;\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {String} axis the axis mode. x|y|xy\n */\nfunction getDistanceMetricForAxis(axis) {\n\tvar useX = axis.indexOf('x') !== -1;\n\tvar useY = axis.indexOf('y') !== -1;\n\n\treturn function(pt1, pt2) {\n\t\tvar deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n\t\tvar deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n\t\treturn Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n\t};\n}\n\nfunction indexMode(chart, e, options) {\n\tvar position = getRelativePosition(e, chart);\n\t// Default axis for index mode is 'x' to match old behaviour\n\toptions.axis = options.axis || 'x';\n\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\tvar elements = [];\n\n\tif (!items.length) {\n\t\treturn [];\n\t}\n\n\tchart.data.datasets.forEach(function(dataset, datasetIndex) {\n\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\tvar element = meta.data[items[0]._index];\n\n\t\t\t// don't count items that are skipped (null data)\n\t\t\tif (element && !element._view.skip) {\n\t\t\t\telements.push(element);\n\t\t\t}\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * @interface IInteractionOptions\n */\n/**\n * If true, only consider items that intersect the point\n * @name IInterfaceOptions#boolean\n * @type Boolean\n */\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nmodule.exports = {\n\t// Helper function for different modes\n\tmodes: {\n\t\tsingle: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar elements = [];\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\telements.push(element);\n\t\t\t\t\treturn elements;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn elements.slice(0, 1);\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.label\n\t\t * @deprecated since version 2.4.0\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\tlabel: indexMode,\n\n\t\t/**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tindex: indexMode,\n\n\t\t/**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tdataset: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n\t\t\tif (items.length > 0) {\n\t\t\t\titems = chart.getDatasetMeta(items[0]._datasetIndex).data;\n\t\t\t}\n\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.x-axis\n\t\t * @deprecated since version 2.4.0. Use index mode and intersect == true\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\t'x-axis': function(chart, e) {\n\t\t\treturn indexMode(chart, e, {intersect: false});\n\t\t},\n\n\t\t/**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tpoint: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\treturn getIntersectItems(chart, position);\n\t\t},\n\n\t\t/**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tnearest: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\tvar nearestItems = getNearestItems(chart, position, options.intersect, distanceMetric);\n\n\t\t\t// We have multiple items at the same distance from the event. Now sort by smallest\n\t\t\tif (nearestItems.length > 1) {\n\t\t\t\tnearestItems.sort(function(a, b) {\n\t\t\t\t\tvar sizeA = a.getArea();\n\t\t\t\t\tvar sizeB = b.getArea();\n\t\t\t\t\tvar ret = sizeA - sizeB;\n\n\t\t\t\t\tif (ret === 0) {\n\t\t\t\t\t\t// if equal sort by dataset index\n\t\t\t\t\t\tret = a._datasetIndex - b._datasetIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn ret;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Return only 1 item\n\t\t\treturn nearestItems.slice(0, 1);\n\t\t},\n\n\t\t/**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tx: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inXRange(position.x)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\ty: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inYRange(position.y)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t}\n\t}\n};\n","/* global window: false */\n/* global document: false */\n'use strict';\n\nvar color = require('chartjs-color');\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\nvar scaleService = require('../core/core.scaleService');\n\nmodule.exports = function() {\n\n\t// -- Basic js utility methods\n\n\thelpers.configMerge = function(/* objects ... */) {\n\t\treturn helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n\t\t\tmerger: function(key, target, source, options) {\n\t\t\t\tvar tval = target[key] || {};\n\t\t\t\tvar sval = source[key];\n\n\t\t\t\tif (key === 'scales') {\n\t\t\t\t\t// scale config merging is complex. Add our own function here for that\n\t\t\t\t\ttarget[key] = helpers.scaleMerge(tval, sval);\n\t\t\t\t} else if (key === 'scale') {\n\t\t\t\t\t// used in polar area & radar charts since there is only one scale\n\t\t\t\t\ttarget[key] = helpers.merge(tval, [scaleService.getScaleDefaults(sval.type), sval]);\n\t\t\t\t} else {\n\t\t\t\t\thelpers._merger(key, target, source, options);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\thelpers.scaleMerge = function(/* objects ... */) {\n\t\treturn helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n\t\t\tmerger: function(key, target, source, options) {\n\t\t\t\tif (key === 'xAxes' || key === 'yAxes') {\n\t\t\t\t\tvar slen = source[key].length;\n\t\t\t\t\tvar i, type, scale;\n\n\t\t\t\t\tif (!target[key]) {\n\t\t\t\t\t\ttarget[key] = [];\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (i = 0; i < slen; ++i) {\n\t\t\t\t\t\tscale = source[key][i];\n\t\t\t\t\t\ttype = helpers.valueOrDefault(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n\t\t\t\t\t\tif (i >= target[key].length) {\n\t\t\t\t\t\t\ttarget[key].push({});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!target[key][i].type || (scale.type && scale.type !== target[key][i].type)) {\n\t\t\t\t\t\t\t// new/untyped scale or type changed: let's apply the new defaults\n\t\t\t\t\t\t\t// then merge source scale to correctly overwrite the defaults.\n\t\t\t\t\t\t\thelpers.merge(target[key][i], [scaleService.getScaleDefaults(type), scale]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// scales type are the same\n\t\t\t\t\t\t\thelpers.merge(target[key][i], scale);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\thelpers._merger(key, target, source, options);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\thelpers.where = function(collection, filterCallback) {\n\t\tif (helpers.isArray(collection) && Array.prototype.filter) {\n\t\t\treturn collection.filter(filterCallback);\n\t\t}\n\t\tvar filtered = [];\n\n\t\thelpers.each(collection, function(item) {\n\t\t\tif (filterCallback(item)) {\n\t\t\t\tfiltered.push(item);\n\t\t\t}\n\t\t});\n\n\t\treturn filtered;\n\t};\n\thelpers.findIndex = Array.prototype.findIndex ?\n\t\tfunction(array, callback, scope) {\n\t\t\treturn array.findIndex(callback, scope);\n\t\t} :\n\t\tfunction(array, callback, scope) {\n\t\t\tscope = scope === undefined ? array : scope;\n\t\t\tfor (var i = 0, ilen = array.length; i < ilen; ++i) {\n\t\t\t\tif (callback.call(scope, array[i], i, array)) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t};\n\thelpers.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to start of the array\n\t\tif (helpers.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = -1;\n\t\t}\n\t\tfor (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\thelpers.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to end of the array\n\t\tif (helpers.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = arrayToSearch.length;\n\t\t}\n\t\tfor (var i = startIndex - 1; i >= 0; i--) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\n\t// -- Math methods\n\thelpers.isNumber = function(n) {\n\t\treturn !isNaN(parseFloat(n)) && isFinite(n);\n\t};\n\thelpers.almostEquals = function(x, y, epsilon) {\n\t\treturn Math.abs(x - y) < epsilon;\n\t};\n\thelpers.almostWhole = function(x, epsilon) {\n\t\tvar rounded = Math.round(x);\n\t\treturn (((rounded - epsilon) < x) && ((rounded + epsilon) > x));\n\t};\n\thelpers.max = function(array) {\n\t\treturn array.reduce(function(max, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.max(max, value);\n\t\t\t}\n\t\t\treturn max;\n\t\t}, Number.NEGATIVE_INFINITY);\n\t};\n\thelpers.min = function(array) {\n\t\treturn array.reduce(function(min, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.min(min, value);\n\t\t\t}\n\t\t\treturn min;\n\t\t}, Number.POSITIVE_INFINITY);\n\t};\n\thelpers.sign = Math.sign ?\n\t\tfunction(x) {\n\t\t\treturn Math.sign(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tx = +x; // convert to a number\n\t\t\tif (x === 0 || isNaN(x)) {\n\t\t\t\treturn x;\n\t\t\t}\n\t\t\treturn x > 0 ? 1 : -1;\n\t\t};\n\thelpers.log10 = Math.log10 ?\n\t\tfunction(x) {\n\t\t\treturn Math.log10(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tvar exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n\t\t\t// Check for whole powers of 10,\n\t\t\t// which due to floating point rounding error should be corrected.\n\t\t\tvar powerOf10 = Math.round(exponent);\n\t\t\tvar isPowerOf10 = x === Math.pow(10, powerOf10);\n\n\t\t\treturn isPowerOf10 ? powerOf10 : exponent;\n\t\t};\n\thelpers.toRadians = function(degrees) {\n\t\treturn degrees * (Math.PI / 180);\n\t};\n\thelpers.toDegrees = function(radians) {\n\t\treturn radians * (180 / Math.PI);\n\t};\n\t// Gets the angle from vertical upright to the point about a centre.\n\thelpers.getAngleFromPoint = function(centrePoint, anglePoint) {\n\t\tvar distanceFromXCenter = anglePoint.x - centrePoint.x;\n\t\tvar distanceFromYCenter = anglePoint.y - centrePoint.y;\n\t\tvar radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n\t\tvar angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n\t\tif (angle < (-0.5 * Math.PI)) {\n\t\t\tangle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n\t\t}\n\n\t\treturn {\n\t\t\tangle: angle,\n\t\t\tdistance: radialDistanceFromCenter\n\t\t};\n\t};\n\thelpers.distanceBetweenPoints = function(pt1, pt2) {\n\t\treturn Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n\t};\n\thelpers.aliasPixel = function(pixelWidth) {\n\t\treturn (pixelWidth % 2 === 0) ? 0 : 0.5;\n\t};\n\thelpers.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {\n\t\t// Props to Rob Spencer at scaled innovation for his post on splining between points\n\t\t// http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n\t\t// This function must also respect \"skipped\" points\n\n\t\tvar previous = firstPoint.skip ? middlePoint : firstPoint;\n\t\tvar current = middlePoint;\n\t\tvar next = afterPoint.skip ? middlePoint : afterPoint;\n\n\t\tvar d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n\t\tvar d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n\n\t\tvar s01 = d01 / (d01 + d12);\n\t\tvar s12 = d12 / (d01 + d12);\n\n\t\t// If all points are the same, s01 & s02 will be inf\n\t\ts01 = isNaN(s01) ? 0 : s01;\n\t\ts12 = isNaN(s12) ? 0 : s12;\n\n\t\tvar fa = t * s01; // scaling factor for triangle Ta\n\t\tvar fb = t * s12;\n\n\t\treturn {\n\t\t\tprevious: {\n\t\t\t\tx: current.x - fa * (next.x - previous.x),\n\t\t\t\ty: current.y - fa * (next.y - previous.y)\n\t\t\t},\n\t\t\tnext: {\n\t\t\t\tx: current.x + fb * (next.x - previous.x),\n\t\t\t\ty: current.y + fb * (next.y - previous.y)\n\t\t\t}\n\t\t};\n\t};\n\thelpers.EPSILON = Number.EPSILON || 1e-14;\n\thelpers.splineCurveMonotone = function(points) {\n\t\t// This function calculates Bézier control points in a similar way than |splineCurve|,\n\t\t// but preserves monotonicity of the provided data and ensures no local extremums are added\n\t\t// between the dataset discrete points due to the interpolation.\n\t\t// See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n\n\t\tvar pointsWithTangents = (points || []).map(function(point) {\n\t\t\treturn {\n\t\t\t\tmodel: point._model,\n\t\t\t\tdeltaK: 0,\n\t\t\t\tmK: 0\n\t\t\t};\n\t\t});\n\n\t\t// Calculate slopes (deltaK) and initialize tangents (mK)\n\t\tvar pointsLen = pointsWithTangents.length;\n\t\tvar i, pointBefore, pointCurrent, pointAfter;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tvar slopeDeltaX = (pointAfter.model.x - pointCurrent.model.x);\n\n\t\t\t\t// In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\t\t\t\tpointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n\t\t\t}\n\n\t\t\tif (!pointBefore || pointBefore.model.skip) {\n\t\t\t\tpointCurrent.mK = pointCurrent.deltaK;\n\t\t\t} else if (!pointAfter || pointAfter.model.skip) {\n\t\t\t\tpointCurrent.mK = pointBefore.deltaK;\n\t\t\t} else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n\t\t\t\tpointCurrent.mK = 0;\n\t\t\t} else {\n\t\t\t\tpointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n\t\t\t}\n\t\t}\n\n\t\t// Adjust tangents to ensure monotonic properties\n\t\tvar alphaK, betaK, tauK, squaredMagnitude;\n\t\tfor (i = 0; i < pointsLen - 1; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tpointAfter = pointsWithTangents[i + 1];\n\t\t\tif (pointCurrent.model.skip || pointAfter.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n\t\t\t\tpointCurrent.mK = pointAfter.mK = 0;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\talphaK = pointCurrent.mK / pointCurrent.deltaK;\n\t\t\tbetaK = pointAfter.mK / pointCurrent.deltaK;\n\t\t\tsquaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\t\t\tif (squaredMagnitude <= 9) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\ttauK = 3 / Math.sqrt(squaredMagnitude);\n\t\t\tpointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n\t\t\tpointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n\t\t}\n\n\t\t// Compute control points\n\t\tvar deltaX;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointBefore && !pointBefore.model.skip) {\n\t\t\t\tdeltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n\t\t\t\tpointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tdeltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n\t\t\t\tpointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t}\n\t};\n\thelpers.nextItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index >= collection.length - 1 ? collection[0] : collection[index + 1];\n\t\t}\n\t\treturn index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n\t};\n\thelpers.previousItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n\t\t}\n\t\treturn index <= 0 ? collection[0] : collection[index - 1];\n\t};\n\t// Implementation of the nice number algorithm used in determining where axis labels will go\n\thelpers.niceNum = function(range, round) {\n\t\tvar exponent = Math.floor(helpers.log10(range));\n\t\tvar fraction = range / Math.pow(10, exponent);\n\t\tvar niceFraction;\n\n\t\tif (round) {\n\t\t\tif (fraction < 1.5) {\n\t\t\t\tniceFraction = 1;\n\t\t\t} else if (fraction < 3) {\n\t\t\t\tniceFraction = 2;\n\t\t\t} else if (fraction < 7) {\n\t\t\t\tniceFraction = 5;\n\t\t\t} else {\n\t\t\t\tniceFraction = 10;\n\t\t\t}\n\t\t} else if (fraction <= 1.0) {\n\t\t\tniceFraction = 1;\n\t\t} else if (fraction <= 2) {\n\t\t\tniceFraction = 2;\n\t\t} else if (fraction <= 5) {\n\t\t\tniceFraction = 5;\n\t\t} else {\n\t\t\tniceFraction = 10;\n\t\t}\n\n\t\treturn niceFraction * Math.pow(10, exponent);\n\t};\n\t// Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\thelpers.requestAnimFrame = (function() {\n\t\tif (typeof window === 'undefined') {\n\t\t\treturn function(callback) {\n\t\t\t\tcallback();\n\t\t\t};\n\t\t}\n\t\treturn window.requestAnimationFrame ||\n\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\twindow.mozRequestAnimationFrame ||\n\t\t\twindow.oRequestAnimationFrame ||\n\t\t\twindow.msRequestAnimationFrame ||\n\t\t\tfunction(callback) {\n\t\t\t\treturn window.setTimeout(callback, 1000 / 60);\n\t\t\t};\n\t}());\n\t// -- DOM methods\n\thelpers.getRelativePosition = function(evt, chart) {\n\t\tvar mouseX, mouseY;\n\t\tvar e = evt.originalEvent || evt;\n\t\tvar canvas = evt.target || evt.srcElement;\n\t\tvar boundingRect = canvas.getBoundingClientRect();\n\n\t\tvar touches = e.touches;\n\t\tif (touches && touches.length > 0) {\n\t\t\tmouseX = touches[0].clientX;\n\t\t\tmouseY = touches[0].clientY;\n\n\t\t} else {\n\t\t\tmouseX = e.clientX;\n\t\t\tmouseY = e.clientY;\n\t\t}\n\n\t\t// Scale mouse coordinates into canvas coordinates\n\t\t// by following the pattern laid out by 'jerryj' in the comments of\n\t\t// http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\t\tvar paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));\n\t\tvar paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));\n\t\tvar paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));\n\t\tvar paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));\n\t\tvar width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n\t\tvar height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;\n\n\t\t// We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n\t\t// the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\t\tmouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);\n\t\tmouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);\n\n\t\treturn {\n\t\t\tx: mouseX,\n\t\t\ty: mouseY\n\t\t};\n\n\t};\n\n\t// Private helper function to convert max-width/max-height values that may be percentages into a number\n\tfunction parseMaxStyle(styleValue, node, parentProperty) {\n\t\tvar valueInPixels;\n\t\tif (typeof styleValue === 'string') {\n\t\t\tvalueInPixels = parseInt(styleValue, 10);\n\n\t\t\tif (styleValue.indexOf('%') !== -1) {\n\t\t\t\t// percentage * size in dimension\n\t\t\t\tvalueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n\t\t\t}\n\t\t} else {\n\t\t\tvalueInPixels = styleValue;\n\t\t}\n\n\t\treturn valueInPixels;\n\t}\n\n\t/**\n\t * Returns if the given value contains an effective constraint.\n\t * @private\n\t */\n\tfunction isConstrainedValue(value) {\n\t\treturn value !== undefined && value !== null && value !== 'none';\n\t}\n\n\t// Private helper to get a constraint dimension\n\t// @param domNode : the node to check the constraint on\n\t// @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)\n\t// @param percentageProperty : property of parent to use when calculating width as a percentage\n\t// @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser\n\tfunction getConstraintDimension(domNode, maxStyle, percentageProperty) {\n\t\tvar view = document.defaultView;\n\t\tvar parentNode = helpers._getParentNode(domNode);\n\t\tvar constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n\t\tvar constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n\t\tvar hasCNode = isConstrainedValue(constrainedNode);\n\t\tvar hasCContainer = isConstrainedValue(constrainedContainer);\n\t\tvar infinity = Number.POSITIVE_INFINITY;\n\n\t\tif (hasCNode || hasCContainer) {\n\t\t\treturn Math.min(\n\t\t\t\thasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,\n\t\t\t\thasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n\t\t}\n\n\t\treturn 'none';\n\t}\n\t// returns Number or undefined if no constraint\n\thelpers.getConstraintWidth = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-width', 'clientWidth');\n\t};\n\t// returns Number or undefined if no constraint\n\thelpers.getConstraintHeight = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-height', 'clientHeight');\n\t};\n\t/**\n\t * @private\n \t */\n\thelpers._calculatePadding = function(container, padding, parentDimension) {\n\t\tpadding = helpers.getStyle(container, padding);\n\n\t\treturn padding.indexOf('%') > -1 ? parentDimension / parseInt(padding, 10) : parseInt(padding, 10);\n\t};\n\t/**\n\t * @private\n\t */\n\thelpers._getParentNode = function(domNode) {\n\t\tvar parent = domNode.parentNode;\n\t\tif (parent && parent.host) {\n\t\t\tparent = parent.host;\n\t\t}\n\t\treturn parent;\n\t};\n\thelpers.getMaximumWidth = function(domNode) {\n\t\tvar container = helpers._getParentNode(domNode);\n\t\tif (!container) {\n\t\t\treturn domNode.clientWidth;\n\t\t}\n\n\t\tvar clientWidth = container.clientWidth;\n\t\tvar paddingLeft = helpers._calculatePadding(container, 'padding-left', clientWidth);\n\t\tvar paddingRight = helpers._calculatePadding(container, 'padding-right', clientWidth);\n\n\t\tvar w = clientWidth - paddingLeft - paddingRight;\n\t\tvar cw = helpers.getConstraintWidth(domNode);\n\t\treturn isNaN(cw) ? w : Math.min(w, cw);\n\t};\n\thelpers.getMaximumHeight = function(domNode) {\n\t\tvar container = helpers._getParentNode(domNode);\n\t\tif (!container) {\n\t\t\treturn domNode.clientHeight;\n\t\t}\n\n\t\tvar clientHeight = container.clientHeight;\n\t\tvar paddingTop = helpers._calculatePadding(container, 'padding-top', clientHeight);\n\t\tvar paddingBottom = helpers._calculatePadding(container, 'padding-bottom', clientHeight);\n\n\t\tvar h = clientHeight - paddingTop - paddingBottom;\n\t\tvar ch = helpers.getConstraintHeight(domNode);\n\t\treturn isNaN(ch) ? h : Math.min(h, ch);\n\t};\n\thelpers.getStyle = function(el, property) {\n\t\treturn el.currentStyle ?\n\t\t\tel.currentStyle[property] :\n\t\t\tdocument.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n\t};\n\thelpers.retinaScale = function(chart, forceRatio) {\n\t\tvar pixelRatio = chart.currentDevicePixelRatio = forceRatio || (typeof window !== 'undefined' && window.devicePixelRatio) || 1;\n\t\tif (pixelRatio === 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar canvas = chart.canvas;\n\t\tvar height = chart.height;\n\t\tvar width = chart.width;\n\n\t\tcanvas.height = height * pixelRatio;\n\t\tcanvas.width = width * pixelRatio;\n\t\tchart.ctx.scale(pixelRatio, pixelRatio);\n\n\t\t// If no style has been set on the canvas, the render size is used as display size,\n\t\t// making the chart visually bigger, so let's enforce it to the \"correct\" values.\n\t\t// See https://github.com/chartjs/Chart.js/issues/3575\n\t\tif (!canvas.style.height && !canvas.style.width) {\n\t\t\tcanvas.style.height = height + 'px';\n\t\t\tcanvas.style.width = width + 'px';\n\t\t}\n\t};\n\t// -- Canvas methods\n\thelpers.fontString = function(pixelSize, fontStyle, fontFamily) {\n\t\treturn fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n\t};\n\thelpers.longestText = function(ctx, font, arrayOfThings, cache) {\n\t\tcache = cache || {};\n\t\tvar data = cache.data = cache.data || {};\n\t\tvar gc = cache.garbageCollect = cache.garbageCollect || [];\n\n\t\tif (cache.font !== font) {\n\t\t\tdata = cache.data = {};\n\t\t\tgc = cache.garbageCollect = [];\n\t\t\tcache.font = font;\n\t\t}\n\n\t\tctx.font = font;\n\t\tvar longest = 0;\n\t\thelpers.each(arrayOfThings, function(thing) {\n\t\t\t// Undefined strings and arrays should not be measured\n\t\t\tif (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {\n\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, thing);\n\t\t\t} else if (helpers.isArray(thing)) {\n\t\t\t\t// if it is an array lets measure each element\n\t\t\t\t// to do maybe simplify this function a bit so we can do this more recursively?\n\t\t\t\thelpers.each(thing, function(nestedThing) {\n\t\t\t\t\t// Undefined strings and arrays should not be measured\n\t\t\t\t\tif (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {\n\t\t\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, nestedThing);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tvar gcLen = gc.length / 2;\n\t\tif (gcLen > arrayOfThings.length) {\n\t\t\tfor (var i = 0; i < gcLen; i++) {\n\t\t\t\tdelete data[gc[i]];\n\t\t\t}\n\t\t\tgc.splice(0, gcLen);\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers.measureText = function(ctx, data, gc, longest, string) {\n\t\tvar textWidth = data[string];\n\t\tif (!textWidth) {\n\t\t\ttextWidth = data[string] = ctx.measureText(string).width;\n\t\t\tgc.push(string);\n\t\t}\n\t\tif (textWidth > longest) {\n\t\t\tlongest = textWidth;\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers.numberOfLabelLines = function(arrayOfThings) {\n\t\tvar numberOfLines = 1;\n\t\thelpers.each(arrayOfThings, function(thing) {\n\t\t\tif (helpers.isArray(thing)) {\n\t\t\t\tif (thing.length > numberOfLines) {\n\t\t\t\t\tnumberOfLines = thing.length;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn numberOfLines;\n\t};\n\n\thelpers.color = !color ?\n\t\tfunction(value) {\n\t\t\tconsole.error('Color.js not found!');\n\t\t\treturn value;\n\t\t} :\n\t\tfunction(value) {\n\t\t\t/* global CanvasGradient */\n\t\t\tif (value instanceof CanvasGradient) {\n\t\t\t\tvalue = defaults.global.defaultColor;\n\t\t\t}\n\n\t\t\treturn color(value);\n\t\t};\n\n\thelpers.getHoverColor = function(colorValue) {\n\t\t/* global CanvasPattern */\n\t\treturn (colorValue instanceof CanvasPattern) ?\n\t\t\tcolorValue :\n\t\t\thelpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n\t};\n};\n","// @@replace logic\nrequire('./_fix-re-wks')('replace', 2, function (defined, REPLACE, $replace) {\n  // 21.1.3.14 String.prototype.replace(searchValue, replaceValue)\n  return [function replace(searchValue, replaceValue) {\n    'use strict';\n    var O = defined(this);\n    var fn = searchValue == undefined ? undefined : searchValue[REPLACE];\n    return fn !== undefined\n      ? fn.call(searchValue, O, replaceValue)\n      : $replace.call(String(O), searchValue, replaceValue);\n  }, $replace];\n});\n","'use strict';\n\nvar helpers = require('../helpers/index');\nvar Scale = require('../core/core.scale');\n\n/**\n * Generate a set of linear ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\nfunction generateTicks(generationOptions, dataRange) {\n\tvar ticks = [];\n\t// To get a \"nice\" value for the tick spacing, we will use the appropriately named\n\t// \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n\t// for details.\n\n\tvar factor;\n\tvar precision;\n\tvar spacing;\n\n\tif (generationOptions.stepSize && generationOptions.stepSize > 0) {\n\t\tspacing = generationOptions.stepSize;\n\t} else {\n\t\tvar niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);\n\t\tspacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true);\n\n\t\tprecision = generationOptions.precision;\n\t\tif (precision !== undefined) {\n\t\t\t// If the user specified a precision, round to that number of decimal places\n\t\t\tfactor = Math.pow(10, precision);\n\t\t\tspacing = Math.ceil(spacing * factor) / factor;\n\t\t}\n\t}\n\tvar niceMin = Math.floor(dataRange.min / spacing) * spacing;\n\tvar niceMax = Math.ceil(dataRange.max / spacing) * spacing;\n\n\t// If min, max and stepSize is set and they make an evenly spaced scale use it.\n\tif (!helpers.isNullOrUndef(generationOptions.min) && !helpers.isNullOrUndef(generationOptions.max) && generationOptions.stepSize) {\n\t\t// If very close to our whole number, use it.\n\t\tif (helpers.almostWhole((generationOptions.max - generationOptions.min) / generationOptions.stepSize, spacing / 1000)) {\n\t\t\tniceMin = generationOptions.min;\n\t\t\tniceMax = generationOptions.max;\n\t\t}\n\t}\n\n\tvar numSpaces = (niceMax - niceMin) / spacing;\n\t// If very close to our rounded value, use it.\n\tif (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n\t\tnumSpaces = Math.round(numSpaces);\n\t} else {\n\t\tnumSpaces = Math.ceil(numSpaces);\n\t}\n\n\tprecision = 1;\n\tif (spacing < 1) {\n\t\tprecision = Math.pow(10, 1 - Math.floor(helpers.log10(spacing)));\n\t\tniceMin = Math.round(niceMin * precision) / precision;\n\t\tniceMax = Math.round(niceMax * precision) / precision;\n\t}\n\tticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);\n\tfor (var j = 1; j < numSpaces; ++j) {\n\t\tticks.push(Math.round((niceMin + j * spacing) * precision) / precision);\n\t}\n\tticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);\n\n\treturn ticks;\n}\n\nmodule.exports = function(Chart) {\n\n\tvar noop = helpers.noop;\n\n\tChart.LinearScaleBase = Scale.extend({\n\t\tgetRightValue: function(value) {\n\t\t\tif (typeof value === 'string') {\n\t\t\t\treturn +value;\n\t\t\t}\n\t\t\treturn Scale.prototype.getRightValue.call(this, value);\n\t\t},\n\n\t\thandleTickRangeOptions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\t// If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n\t\t\t// do nothing since that would make the chart weird. If the user really wants a weird chart\n\t\t\t// axis, they can manually override it\n\t\t\tif (tickOpts.beginAtZero) {\n\t\t\t\tvar minSign = helpers.sign(me.min);\n\t\t\t\tvar maxSign = helpers.sign(me.max);\n\n\t\t\t\tif (minSign < 0 && maxSign < 0) {\n\t\t\t\t\t// move the top up to 0\n\t\t\t\t\tme.max = 0;\n\t\t\t\t} else if (minSign > 0 && maxSign > 0) {\n\t\t\t\t\t// move the bottom down to 0\n\t\t\t\t\tme.min = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n\t\t\tvar setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n\t\t\tif (tickOpts.min !== undefined) {\n\t\t\t\tme.min = tickOpts.min;\n\t\t\t} else if (tickOpts.suggestedMin !== undefined) {\n\t\t\t\tif (me.min === null) {\n\t\t\t\t\tme.min = tickOpts.suggestedMin;\n\t\t\t\t} else {\n\t\t\t\t\tme.min = Math.min(me.min, tickOpts.suggestedMin);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tickOpts.max !== undefined) {\n\t\t\t\tme.max = tickOpts.max;\n\t\t\t} else if (tickOpts.suggestedMax !== undefined) {\n\t\t\t\tif (me.max === null) {\n\t\t\t\t\tme.max = tickOpts.suggestedMax;\n\t\t\t\t} else {\n\t\t\t\t\tme.max = Math.max(me.max, tickOpts.suggestedMax);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (setMin !== setMax) {\n\t\t\t\t// We set the min or the max but not both.\n\t\t\t\t// So ensure that our range is good\n\t\t\t\t// Inverted or 0 length range can happen when\n\t\t\t\t// ticks.min is set, and no datasets are visible\n\t\t\t\tif (me.min >= me.max) {\n\t\t\t\t\tif (setMin) {\n\t\t\t\t\t\tme.max = me.min + 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme.min = me.max - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (me.min === me.max) {\n\t\t\t\tme.max++;\n\n\t\t\t\tif (!tickOpts.beginAtZero) {\n\t\t\t\t\tme.min--;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tgetTickLimit: noop,\n\t\thandleDirectionalChanges: noop,\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\t// Figure out what the max number of ticks we can support it is based on the size of\n\t\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n\t\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t\t\t// the graph. Make sure we always have at least 2 ticks\n\t\t\tvar maxTicks = me.getTickLimit();\n\t\t\tmaxTicks = Math.max(2, maxTicks);\n\n\t\t\tvar numericGeneratorOptions = {\n\t\t\t\tmaxTicks: maxTicks,\n\t\t\t\tmin: tickOpts.min,\n\t\t\t\tmax: tickOpts.max,\n\t\t\t\tprecision: tickOpts.precision,\n\t\t\t\tstepSize: helpers.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n\t\t\t};\n\t\t\tvar ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n\n\t\t\tme.handleDirectionalChanges();\n\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t\t// range of the scale\n\t\t\tme.max = helpers.max(ticks);\n\t\t\tme.min = helpers.min(ticks);\n\n\t\t\tif (tickOpts.reverse) {\n\t\t\t\tticks.reverse();\n\n\t\t\t\tme.start = me.max;\n\t\t\t\tme.end = me.min;\n\t\t\t} else {\n\t\t\t\tme.start = me.min;\n\t\t\t\tme.end = me.max;\n\t\t\t}\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\t\t\tme.ticksAsNumbers = me.ticks.slice();\n\t\t\tme.zeroLineIndex = me.ticks.indexOf(0);\n\n\t\t\tScale.prototype.convertTicksToLabels.call(me);\n\t\t}\n\t});\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.PolarArea = function(context, config) {\n\t\tconfig.type = 'polarArea';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\n'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar EXPANDO_KEY = '$chartjs';\nvar CSS_PREFIX = 'chartjs-';\nvar CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\nvar CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\nvar ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nvar EVENT_TYPES = {\n\ttouchstart: 'mousedown',\n\ttouchmove: 'mousemove',\n\ttouchend: 'mouseup',\n\tpointerenter: 'mouseenter',\n\tpointerdown: 'mousedown',\n\tpointermove: 'mousemove',\n\tpointerup: 'mouseup',\n\tpointerleave: 'mouseout',\n\tpointerout: 'mouseout'\n};\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns {Number} Size in pixels or undefined if unknown.\n */\nfunction readUsedSize(element, property) {\n\tvar value = helpers.getStyle(element, property);\n\tvar matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n\treturn matches ? Number(matches[1]) : undefined;\n}\n\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n */\nfunction initCanvas(canvas, config) {\n\tvar style = canvas.style;\n\n\t// NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n\t// returns null or '' if no explicit value has been set to the canvas attribute.\n\tvar renderHeight = canvas.getAttribute('height');\n\tvar renderWidth = canvas.getAttribute('width');\n\n\t// Chart.js modifies some canvas values that we want to restore on destroy\n\tcanvas[EXPANDO_KEY] = {\n\t\tinitial: {\n\t\t\theight: renderHeight,\n\t\t\twidth: renderWidth,\n\t\t\tstyle: {\n\t\t\t\tdisplay: style.display,\n\t\t\t\theight: style.height,\n\t\t\t\twidth: style.width\n\t\t\t}\n\t\t}\n\t};\n\n\t// Force canvas to display as block to avoid extra space caused by inline\n\t// elements, which would interfere with the responsive resize process.\n\t// https://github.com/chartjs/Chart.js/issues/2538\n\tstyle.display = style.display || 'block';\n\n\tif (renderWidth === null || renderWidth === '') {\n\t\tvar displayWidth = readUsedSize(canvas, 'width');\n\t\tif (displayWidth !== undefined) {\n\t\t\tcanvas.width = displayWidth;\n\t\t}\n\t}\n\n\tif (renderHeight === null || renderHeight === '') {\n\t\tif (canvas.style.height === '') {\n\t\t\t// If no explicit render height and style height, let's apply the aspect ratio,\n\t\t\t// which one can be specified by the user but also by charts as default option\n\t\t\t// (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n\t\t\tcanvas.height = canvas.width / (config.options.aspectRatio || 2);\n\t\t} else {\n\t\t\tvar displayHeight = readUsedSize(canvas, 'height');\n\t\t\tif (displayWidth !== undefined) {\n\t\t\t\tcanvas.height = displayHeight;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn canvas;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nvar supportsEventListenerOptions = (function() {\n\tvar supports = false;\n\ttry {\n\t\tvar options = Object.defineProperty({}, 'passive', {\n\t\t\tget: function() {\n\t\t\t\tsupports = true;\n\t\t\t}\n\t\t});\n\t\twindow.addEventListener('e', null, options);\n\t} catch (e) {\n\t\t// continue regardless of error\n\t}\n\treturn supports;\n}());\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nvar eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addEventListener(node, type, listener) {\n\tnode.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeEventListener(node, type, listener) {\n\tnode.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction createEvent(type, chart, x, y, nativeEvent) {\n\treturn {\n\t\ttype: type,\n\t\tchart: chart,\n\t\tnative: nativeEvent || null,\n\t\tx: x !== undefined ? x : null,\n\t\ty: y !== undefined ? y : null,\n\t};\n}\n\nfunction fromNativeEvent(event, chart) {\n\tvar type = EVENT_TYPES[event.type] || event.type;\n\tvar pos = helpers.getRelativePosition(event, chart);\n\treturn createEvent(type, chart, pos.x, pos.y, event);\n}\n\nfunction throttled(fn, thisArg) {\n\tvar ticking = false;\n\tvar args = [];\n\n\treturn function() {\n\t\targs = Array.prototype.slice.call(arguments);\n\t\tthisArg = thisArg || this;\n\n\t\tif (!ticking) {\n\t\t\tticking = true;\n\t\t\thelpers.requestAnimFrame.call(window, function() {\n\t\t\t\tticking = false;\n\t\t\t\tfn.apply(thisArg, args);\n\t\t\t});\n\t\t}\n\t};\n}\n\n// Implementation based on https://github.com/marcj/css-element-queries\nfunction createResizer(handler) {\n\tvar resizer = document.createElement('div');\n\tvar cls = CSS_PREFIX + 'size-monitor';\n\tvar maxSize = 1000000;\n\tvar style =\n\t\t'position:absolute;' +\n\t\t'left:0;' +\n\t\t'top:0;' +\n\t\t'right:0;' +\n\t\t'bottom:0;' +\n\t\t'overflow:hidden;' +\n\t\t'pointer-events:none;' +\n\t\t'visibility:hidden;' +\n\t\t'z-index:-1;';\n\n\tresizer.style.cssText = style;\n\tresizer.className = cls;\n\tresizer.innerHTML =\n\t\t'<div class=\"' + cls + '-expand\" style=\"' + style + '\">' +\n\t\t\t'<div style=\"' +\n\t\t\t\t'position:absolute;' +\n\t\t\t\t'width:' + maxSize + 'px;' +\n\t\t\t\t'height:' + maxSize + 'px;' +\n\t\t\t\t'left:0;' +\n\t\t\t\t'top:0\">' +\n\t\t\t'</div>' +\n\t\t'</div>' +\n\t\t'<div class=\"' + cls + '-shrink\" style=\"' + style + '\">' +\n\t\t\t'<div style=\"' +\n\t\t\t\t'position:absolute;' +\n\t\t\t\t'width:200%;' +\n\t\t\t\t'height:200%;' +\n\t\t\t\t'left:0; ' +\n\t\t\t\t'top:0\">' +\n\t\t\t'</div>' +\n\t\t'</div>';\n\n\tvar expand = resizer.childNodes[0];\n\tvar shrink = resizer.childNodes[1];\n\n\tresizer._reset = function() {\n\t\texpand.scrollLeft = maxSize;\n\t\texpand.scrollTop = maxSize;\n\t\tshrink.scrollLeft = maxSize;\n\t\tshrink.scrollTop = maxSize;\n\t};\n\tvar onScroll = function() {\n\t\tresizer._reset();\n\t\thandler();\n\t};\n\n\taddEventListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n\taddEventListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n\n\treturn resizer;\n}\n\n// https://davidwalsh.name/detect-node-insertion\nfunction watchForRender(node, handler) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\tvar proxy = expando.renderProxy = function(e) {\n\t\tif (e.animationName === CSS_RENDER_ANIMATION) {\n\t\t\thandler();\n\t\t}\n\t};\n\n\thelpers.each(ANIMATION_START_EVENTS, function(type) {\n\t\taddEventListener(node, type, proxy);\n\t});\n\n\t// #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n\t// is removed then added back immediately (same animation frame?). Accessing the\n\t// `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n\t// https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n\t// https://github.com/chartjs/Chart.js/issues/4737\n\texpando.reflow = !!node.offsetParent;\n\n\tnode.classList.add(CSS_RENDER_MONITOR);\n}\n\nfunction unwatchForRender(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar proxy = expando.renderProxy;\n\n\tif (proxy) {\n\t\thelpers.each(ANIMATION_START_EVENTS, function(type) {\n\t\t\tremoveEventListener(node, type, proxy);\n\t\t});\n\n\t\tdelete expando.renderProxy;\n\t}\n\n\tnode.classList.remove(CSS_RENDER_MONITOR);\n}\n\nfunction addResizeListener(node, listener, chart) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n\t// Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\tvar resizer = expando.resizer = createResizer(throttled(function() {\n\t\tif (expando.resizer) {\n\t\t\treturn listener(createEvent('resize', chart));\n\t\t}\n\t}));\n\n\t// The resizer needs to be attached to the node parent, so we first need to be\n\t// sure that `node` is attached to the DOM before injecting the resizer element.\n\twatchForRender(node, function() {\n\t\tif (expando.resizer) {\n\t\t\tvar container = node.parentNode;\n\t\t\tif (container && container !== resizer.parentNode) {\n\t\t\t\tcontainer.insertBefore(resizer, container.firstChild);\n\t\t\t}\n\n\t\t\t// The container size might have changed, let's reset the resizer state.\n\t\t\tresizer._reset();\n\t\t}\n\t});\n}\n\nfunction removeResizeListener(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar resizer = expando.resizer;\n\n\tdelete expando.resizer;\n\tunwatchForRender(node);\n\n\tif (resizer && resizer.parentNode) {\n\t\tresizer.parentNode.removeChild(resizer);\n\t}\n}\n\nfunction injectCSS(platform, css) {\n\t// http://stackoverflow.com/q/3922139\n\tvar style = platform._style || document.createElement('style');\n\tif (!platform._style) {\n\t\tplatform._style = style;\n\t\tcss = '/* Chart.js */\\n' + css;\n\t\tstyle.setAttribute('type', 'text/css');\n\t\tdocument.getElementsByTagName('head')[0].appendChild(style);\n\t}\n\n\tstyle.appendChild(document.createTextNode(css));\n}\n\nmodule.exports = {\n\t/**\n\t * This property holds whether this platform is enabled for the current environment.\n\t * Currently used by platform.js to select the proper implementation.\n\t * @private\n\t */\n\t_enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n\tinitialize: function() {\n\t\tvar keyframes = 'from{opacity:0.99}to{opacity:1}';\n\n\t\tinjectCSS(this,\n\t\t\t// DOM rendering detection\n\t\t\t// https://davidwalsh.name/detect-node-insertion\n\t\t\t'@-webkit-keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\n\t\t\t'@keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\n\t\t\t'.' + CSS_RENDER_MONITOR + '{' +\n\t\t\t\t'-webkit-animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\n\t\t\t\t'animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\n\t\t\t'}'\n\t\t);\n\t},\n\n\tacquireContext: function(item, config) {\n\t\tif (typeof item === 'string') {\n\t\t\titem = document.getElementById(item);\n\t\t} else if (item.length) {\n\t\t\t// Support for array based queries (such as jQuery)\n\t\t\titem = item[0];\n\t\t}\n\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\t// To prevent canvas fingerprinting, some add-ons undefine the getContext\n\t\t// method, for example: https://github.com/kkapsner/CanvasBlocker\n\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\tvar context = item && item.getContext && item.getContext('2d');\n\n\t\t// `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n\t\t// inside an iframe or when running in a protected environment. We could guess the\n\t\t// types from their toString() value but let's keep things flexible and assume it's\n\t\t// a sufficient condition if the item has a context2D which has item as `canvas`.\n\t\t// https://github.com/chartjs/Chart.js/issues/3887\n\t\t// https://github.com/chartjs/Chart.js/issues/4102\n\t\t// https://github.com/chartjs/Chart.js/issues/4152\n\t\tif (context && context.canvas === item) {\n\t\t\tinitCanvas(item, config);\n\t\t\treturn context;\n\t\t}\n\n\t\treturn null;\n\t},\n\n\treleaseContext: function(context) {\n\t\tvar canvas = context.canvas;\n\t\tif (!canvas[EXPANDO_KEY]) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar initial = canvas[EXPANDO_KEY].initial;\n\t\t['height', 'width'].forEach(function(prop) {\n\t\t\tvar value = initial[prop];\n\t\t\tif (helpers.isNullOrUndef(value)) {\n\t\t\t\tcanvas.removeAttribute(prop);\n\t\t\t} else {\n\t\t\t\tcanvas.setAttribute(prop, value);\n\t\t\t}\n\t\t});\n\n\t\thelpers.each(initial.style || {}, function(value, key) {\n\t\t\tcanvas.style[key] = value;\n\t\t});\n\n\t\t// The canvas render size might have been changed (and thus the state stack discarded),\n\t\t// we can't use save() and restore() to restore the initial state. So make sure that at\n\t\t// least the canvas context is reset to the default state by setting the canvas width.\n\t\t// https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n\t\tcanvas.width = canvas.width;\n\n\t\tdelete canvas[EXPANDO_KEY];\n\t},\n\n\taddEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\taddResizeListener(canvas, listener, chart);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n\t\tvar proxies = expando.proxies || (expando.proxies = {});\n\t\tvar proxy = proxies[chart.id + '_' + type] = function(event) {\n\t\t\tlistener(fromNativeEvent(event, chart));\n\t\t};\n\n\t\taddEventListener(canvas, type, proxy);\n\t},\n\n\tremoveEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\tremoveResizeListener(canvas, listener);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || {};\n\t\tvar proxies = expando.proxies || {};\n\t\tvar proxy = proxies[chart.id + '_' + type];\n\t\tif (!proxy) {\n\t\t\treturn;\n\t\t}\n\n\t\tremoveEventListener(canvas, type, proxy);\n\t}\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use EventTarget.addEventListener instead.\n * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n * @function Chart.helpers.addEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.addEvent = addEventListener;\n\n/**\n * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n * @function Chart.helpers.removeEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.removeEvent = removeEventListener;\n","'use strict';\n\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\nvar layouts = require('./core.layouts');\n\nmodule.exports = {\n\t// Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n\t// use the new chart options to grab the correct scale\n\tconstructors: {},\n\t// Use a registration function so that we can move to an ES6 map when we no longer need to support\n\t// old browsers\n\n\t// Scale config defaults\n\tdefaults: {},\n\tregisterScaleType: function(type, scaleConstructor, scaleDefaults) {\n\t\tthis.constructors[type] = scaleConstructor;\n\t\tthis.defaults[type] = helpers.clone(scaleDefaults);\n\t},\n\tgetScaleConstructor: function(type) {\n\t\treturn this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n\t},\n\tgetScaleDefaults: function(type) {\n\t\t// Return the scale defaults merged with the global settings so that we always use the latest ones\n\t\treturn this.defaults.hasOwnProperty(type) ? helpers.merge({}, [defaults.scale, this.defaults[type]]) : {};\n\t},\n\tupdateScaleDefaults: function(type, additions) {\n\t\tvar me = this;\n\t\tif (me.defaults.hasOwnProperty(type)) {\n\t\t\tme.defaults[type] = helpers.extend(me.defaults[type], additions);\n\t\t}\n\t},\n\taddScalesToLayout: function(chart) {\n\t\t// Adds each scale to the chart.boxes array to be sized accordingly\n\t\thelpers.each(chart.scales, function(scale) {\n\t\t\t// Set ILayoutItem parameters for backwards compatibility\n\t\t\tscale.fullWidth = scale.options.fullWidth;\n\t\t\tscale.position = scale.options.position;\n\t\t\tscale.weight = scale.options.weight;\n\t\t\tlayouts.addBox(chart, scale);\n\t\t});\n\t}\n};\n","'use strict';\n\nvar helpers = require('./helpers.core');\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easingEffects\n * @see http://www.robertpenner.com/easing/\n */\nvar effects = {\n\tlinear: function(t) {\n\t\treturn t;\n\t},\n\n\teaseInQuad: function(t) {\n\t\treturn t * t;\n\t},\n\n\teaseOutQuad: function(t) {\n\t\treturn -t * (t - 2);\n\t},\n\n\teaseInOutQuad: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t;\n\t\t}\n\t\treturn -0.5 * ((--t) * (t - 2) - 1);\n\t},\n\n\teaseInCubic: function(t) {\n\t\treturn t * t * t;\n\t},\n\n\teaseOutCubic: function(t) {\n\t\treturn (t = t - 1) * t * t + 1;\n\t},\n\n\teaseInOutCubic: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t + 2);\n\t},\n\n\teaseInQuart: function(t) {\n\t\treturn t * t * t * t;\n\t},\n\n\teaseOutQuart: function(t) {\n\t\treturn -((t = t - 1) * t * t * t - 1);\n\t},\n\n\teaseInOutQuart: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t;\n\t\t}\n\t\treturn -0.5 * ((t -= 2) * t * t * t - 2);\n\t},\n\n\teaseInQuint: function(t) {\n\t\treturn t * t * t * t * t;\n\t},\n\n\teaseOutQuint: function(t) {\n\t\treturn (t = t - 1) * t * t * t * t + 1;\n\t},\n\n\teaseInOutQuint: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t * t * t + 2);\n\t},\n\n\teaseInSine: function(t) {\n\t\treturn -Math.cos(t * (Math.PI / 2)) + 1;\n\t},\n\n\teaseOutSine: function(t) {\n\t\treturn Math.sin(t * (Math.PI / 2));\n\t},\n\n\teaseInOutSine: function(t) {\n\t\treturn -0.5 * (Math.cos(Math.PI * t) - 1);\n\t},\n\n\teaseInExpo: function(t) {\n\t\treturn (t === 0) ? 0 : Math.pow(2, 10 * (t - 1));\n\t},\n\n\teaseOutExpo: function(t) {\n\t\treturn (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1;\n\t},\n\n\teaseInOutExpo: function(t) {\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * Math.pow(2, 10 * (t - 1));\n\t\t}\n\t\treturn 0.5 * (-Math.pow(2, -10 * --t) + 2);\n\t},\n\n\teaseInCirc: function(t) {\n\t\tif (t >= 1) {\n\t\t\treturn t;\n\t\t}\n\t\treturn -(Math.sqrt(1 - t * t) - 1);\n\t},\n\n\teaseOutCirc: function(t) {\n\t\treturn Math.sqrt(1 - (t = t - 1) * t);\n\t},\n\n\teaseInOutCirc: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn -0.5 * (Math.sqrt(1 - t * t) - 1);\n\t\t}\n\t\treturn 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n\t},\n\n\teaseInElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t},\n\n\teaseOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n\t},\n\n\teaseInOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif ((t /= 0.5) === 2) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.45;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\tif (t < 1) {\n\t\t\treturn -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t\t}\n\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\t},\n\teaseInBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn t * t * ((s + 1) * t - s);\n\t},\n\n\teaseOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn (t = t - 1) * t * ((s + 1) * t + s) + 1;\n\t},\n\n\teaseInOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n\t},\n\n\teaseInBounce: function(t) {\n\t\treturn 1 - effects.easeOutBounce(1 - t);\n\t},\n\n\teaseOutBounce: function(t) {\n\t\tif (t < (1 / 2.75)) {\n\t\t\treturn 7.5625 * t * t;\n\t\t}\n\t\tif (t < (2 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75;\n\t\t}\n\t\tif (t < (2.5 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375;\n\t\t}\n\t\treturn 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375;\n\t},\n\n\teaseInOutBounce: function(t) {\n\t\tif (t < 0.5) {\n\t\t\treturn effects.easeInBounce(t * 2) * 0.5;\n\t\t}\n\t\treturn effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n\t}\n};\n\nmodule.exports = {\n\teffects: effects\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n * @function Chart.helpers.easingEffects\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.easingEffects = effects;\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\n'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\tplugins: {\n\t\tfiller: {\n\t\t\tpropagate: true\n\t\t}\n\t}\n});\n\nvar mappers = {\n\tdataset: function(source) {\n\t\tvar index = source.fill;\n\t\tvar chart = source.chart;\n\t\tvar meta = chart.getDatasetMeta(index);\n\t\tvar visible = meta && chart.isDatasetVisible(index);\n\t\tvar points = (visible && meta.dataset._children) || [];\n\t\tvar length = points.length || 0;\n\n\t\treturn !length ? null : function(point, i) {\n\t\t\treturn (i < length && points[i]._view) || null;\n\t\t};\n\t},\n\n\tboundary: function(source) {\n\t\tvar boundary = source.boundary;\n\t\tvar x = boundary ? boundary.x : null;\n\t\tvar y = boundary ? boundary.y : null;\n\n\t\treturn function(point) {\n\t\t\treturn {\n\t\t\t\tx: x === null ? point.x : x,\n\t\t\t\ty: y === null ? point.y : y,\n\t\t\t};\n\t\t};\n\t}\n};\n\n// @todo if (fill[0] === '#')\nfunction decodeFill(el, index, count) {\n\tvar model = el._model || {};\n\tvar fill = model.fill;\n\tvar target;\n\n\tif (fill === undefined) {\n\t\tfill = !!model.backgroundColor;\n\t}\n\n\tif (fill === false || fill === null) {\n\t\treturn false;\n\t}\n\n\tif (fill === true) {\n\t\treturn 'origin';\n\t}\n\n\ttarget = parseFloat(fill, 10);\n\tif (isFinite(target) && Math.floor(target) === target) {\n\t\tif (fill[0] === '-' || fill[0] === '+') {\n\t\t\ttarget = index + target;\n\t\t}\n\n\t\tif (target === index || target < 0 || target >= count) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn target;\n\t}\n\n\tswitch (fill) {\n\t// compatibility\n\tcase 'bottom':\n\t\treturn 'start';\n\tcase 'top':\n\t\treturn 'end';\n\tcase 'zero':\n\t\treturn 'origin';\n\t// supported boundaries\n\tcase 'origin':\n\tcase 'start':\n\tcase 'end':\n\t\treturn fill;\n\t// invalid fill values\n\tdefault:\n\t\treturn false;\n\t}\n}\n\nfunction computeBoundary(source) {\n\tvar model = source.el._model || {};\n\tvar scale = source.el._scale || {};\n\tvar fill = source.fill;\n\tvar target = null;\n\tvar horizontal;\n\n\tif (isFinite(fill)) {\n\t\treturn null;\n\t}\n\n\t// Backward compatibility: until v3, we still need to support boundary values set on\n\t// the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n\t// controllers might still use it (e.g. the Smith chart).\n\n\tif (fill === 'start') {\n\t\ttarget = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n\t} else if (fill === 'end') {\n\t\ttarget = model.scaleTop === undefined ? scale.top : model.scaleTop;\n\t} else if (model.scaleZero !== undefined) {\n\t\ttarget = model.scaleZero;\n\t} else if (scale.getBasePosition) {\n\t\ttarget = scale.getBasePosition();\n\t} else if (scale.getBasePixel) {\n\t\ttarget = scale.getBasePixel();\n\t}\n\n\tif (target !== undefined && target !== null) {\n\t\tif (target.x !== undefined && target.y !== undefined) {\n\t\t\treturn target;\n\t\t}\n\n\t\tif (typeof target === 'number' && isFinite(target)) {\n\t\t\thorizontal = scale.isHorizontal();\n\t\t\treturn {\n\t\t\t\tx: horizontal ? target : null,\n\t\t\t\ty: horizontal ? null : target\n\t\t\t};\n\t\t}\n\t}\n\n\treturn null;\n}\n\nfunction resolveTarget(sources, index, propagate) {\n\tvar source = sources[index];\n\tvar fill = source.fill;\n\tvar visited = [index];\n\tvar target;\n\n\tif (!propagate) {\n\t\treturn fill;\n\t}\n\n\twhile (fill !== false && visited.indexOf(fill) === -1) {\n\t\tif (!isFinite(fill)) {\n\t\t\treturn fill;\n\t\t}\n\n\t\ttarget = sources[fill];\n\t\tif (!target) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (target.visible) {\n\t\t\treturn fill;\n\t\t}\n\n\t\tvisited.push(fill);\n\t\tfill = target.fill;\n\t}\n\n\treturn false;\n}\n\nfunction createMapper(source) {\n\tvar fill = source.fill;\n\tvar type = 'dataset';\n\n\tif (fill === false) {\n\t\treturn null;\n\t}\n\n\tif (!isFinite(fill)) {\n\t\ttype = 'boundary';\n\t}\n\n\treturn mappers[type](source);\n}\n\nfunction isDrawable(point) {\n\treturn point && !point.skip;\n}\n\nfunction drawArea(ctx, curve0, curve1, len0, len1) {\n\tvar i;\n\n\tif (!len0 || !len1) {\n\t\treturn;\n\t}\n\n\t// building first area curve (normal)\n\tctx.moveTo(curve0[0].x, curve0[0].y);\n\tfor (i = 1; i < len0; ++i) {\n\t\thelpers.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n\t}\n\n\t// joining the two area curves\n\tctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y);\n\n\t// building opposite area curve (reverse)\n\tfor (i = len1 - 1; i > 0; --i) {\n\t\thelpers.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n\t}\n}\n\nfunction doFill(ctx, points, mapper, view, color, loop) {\n\tvar count = points.length;\n\tvar span = view.spanGaps;\n\tvar curve0 = [];\n\tvar curve1 = [];\n\tvar len0 = 0;\n\tvar len1 = 0;\n\tvar i, ilen, index, p0, p1, d0, d1;\n\n\tctx.beginPath();\n\n\tfor (i = 0, ilen = (count + !!loop); i < ilen; ++i) {\n\t\tindex = i % count;\n\t\tp0 = points[index]._view;\n\t\tp1 = mapper(p0, index, view);\n\t\td0 = isDrawable(p0);\n\t\td1 = isDrawable(p1);\n\n\t\tif (d0 && d1) {\n\t\t\tlen0 = curve0.push(p0);\n\t\t\tlen1 = curve1.push(p1);\n\t\t} else if (len0 && len1) {\n\t\t\tif (!span) {\n\t\t\t\tdrawArea(ctx, curve0, curve1, len0, len1);\n\t\t\t\tlen0 = len1 = 0;\n\t\t\t\tcurve0 = [];\n\t\t\t\tcurve1 = [];\n\t\t\t} else {\n\t\t\t\tif (d0) {\n\t\t\t\t\tcurve0.push(p0);\n\t\t\t\t}\n\t\t\t\tif (d1) {\n\t\t\t\t\tcurve1.push(p1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdrawArea(ctx, curve0, curve1, len0, len1);\n\n\tctx.closePath();\n\tctx.fillStyle = color;\n\tctx.fill();\n}\n\nmodule.exports = {\n\tid: 'filler',\n\n\tafterDatasetsUpdate: function(chart, options) {\n\t\tvar count = (chart.data.datasets || []).length;\n\t\tvar propagate = options.propagate;\n\t\tvar sources = [];\n\t\tvar meta, i, el, source;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\tel = meta.dataset;\n\t\t\tsource = null;\n\n\t\t\tif (el && el._model && el instanceof elements.Line) {\n\t\t\t\tsource = {\n\t\t\t\t\tvisible: chart.isDatasetVisible(i),\n\t\t\t\t\tfill: decodeFill(el, i, count),\n\t\t\t\t\tchart: chart,\n\t\t\t\t\tel: el\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tmeta.$filler = source;\n\t\t\tsources.push(source);\n\t\t}\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!source) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tsource.fill = resolveTarget(sources, i, propagate);\n\t\t\tsource.boundary = computeBoundary(source);\n\t\t\tsource.mapper = createMapper(source);\n\t\t}\n\t},\n\n\tbeforeDatasetDraw: function(chart, args) {\n\t\tvar meta = args.meta.$filler;\n\t\tif (!meta) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar ctx = chart.ctx;\n\t\tvar el = meta.el;\n\t\tvar view = el._view;\n\t\tvar points = el._children || [];\n\t\tvar mapper = meta.mapper;\n\t\tvar color = view.backgroundColor || defaults.global.defaultColor;\n\n\t\tif (mapper && color && points.length) {\n\t\t\thelpers.canvas.clipArea(ctx, chart.chartArea);\n\t\t\tdoFill(ctx, points, mapper, view, color, el._loop);\n\t\t\thelpers.canvas.unclipArea(ctx);\n\t\t}\n\t}\n};\n","'use strict';\n\nmodule.exports = {};\nmodule.exports.Arc = require('./element.arc');\nmodule.exports.Line = require('./element.line');\nmodule.exports.Point = require('./element.point');\nmodule.exports.Rectangle = require('./element.rectangle');\n","'use strict';\n\nvar defaults = require('./core.defaults');\nvar Element = require('./core.element');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\ttooltips: {\n\t\tenabled: true,\n\t\tcustom: null,\n\t\tmode: 'nearest',\n\t\tposition: 'average',\n\t\tintersect: true,\n\t\tbackgroundColor: 'rgba(0,0,0,0.8)',\n\t\ttitleFontStyle: 'bold',\n\t\ttitleSpacing: 2,\n\t\ttitleMarginBottom: 6,\n\t\ttitleFontColor: '#fff',\n\t\ttitleAlign: 'left',\n\t\tbodySpacing: 2,\n\t\tbodyFontColor: '#fff',\n\t\tbodyAlign: 'left',\n\t\tfooterFontStyle: 'bold',\n\t\tfooterSpacing: 2,\n\t\tfooterMarginTop: 6,\n\t\tfooterFontColor: '#fff',\n\t\tfooterAlign: 'left',\n\t\tyPadding: 6,\n\t\txPadding: 6,\n\t\tcaretPadding: 2,\n\t\tcaretSize: 5,\n\t\tcornerRadius: 6,\n\t\tmultiKeyBackground: '#fff',\n\t\tdisplayColors: true,\n\t\tborderColor: 'rgba(0,0,0,0)',\n\t\tborderWidth: 0,\n\t\tcallbacks: {\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeTitle: helpers.noop,\n\t\t\ttitle: function(tooltipItems, data) {\n\t\t\t\t// Pick first xLabel for now\n\t\t\t\tvar title = '';\n\t\t\t\tvar labels = data.labels;\n\t\t\t\tvar labelCount = labels ? labels.length : 0;\n\n\t\t\t\tif (tooltipItems.length > 0) {\n\t\t\t\t\tvar item = tooltipItems[0];\n\n\t\t\t\t\tif (item.xLabel) {\n\t\t\t\t\t\ttitle = item.xLabel;\n\t\t\t\t\t} else if (labelCount > 0 && item.index < labelCount) {\n\t\t\t\t\t\ttitle = labels[item.index];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn title;\n\t\t\t},\n\t\t\tafterTitle: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeBody: helpers.noop,\n\n\t\t\t// Args are: (tooltipItem, data)\n\t\t\tbeforeLabel: helpers.noop,\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel += ': ';\n\t\t\t\t}\n\t\t\t\tlabel += tooltipItem.yLabel;\n\t\t\t\treturn label;\n\t\t\t},\n\t\t\tlabelColor: function(tooltipItem, chart) {\n\t\t\t\tvar meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n\t\t\t\tvar activeElement = meta.data[tooltipItem.index];\n\t\t\t\tvar view = activeElement._view;\n\t\t\t\treturn {\n\t\t\t\t\tborderColor: view.borderColor,\n\t\t\t\t\tbackgroundColor: view.backgroundColor\n\t\t\t\t};\n\t\t\t},\n\t\t\tlabelTextColor: function() {\n\t\t\t\treturn this._options.bodyFontColor;\n\t\t\t},\n\t\t\tafterLabel: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tafterBody: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeFooter: helpers.noop,\n\t\t\tfooter: helpers.noop,\n\t\t\tafterFooter: helpers.noop\n\t\t}\n\t}\n});\n\nvar positioners = {\n\t/**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t * @function Chart.Tooltip.positioners.average\n\t * @param elements {ChartElement[]} the elements being displayed in the tooltip\n\t * @returns {Point} tooltip position\n\t */\n\taverage: function(elements) {\n\t\tif (!elements.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar i, len;\n\t\tvar x = 0;\n\t\tvar y = 0;\n\t\tvar count = 0;\n\n\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\tvar el = elements[i];\n\t\t\tif (el && el.hasValue()) {\n\t\t\t\tvar pos = el.tooltipPosition();\n\t\t\t\tx += pos.x;\n\t\t\t\ty += pos.y;\n\t\t\t\t++count;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tx: Math.round(x / count),\n\t\t\ty: Math.round(y / count)\n\t\t};\n\t},\n\n\t/**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t * @function Chart.Tooltip.positioners.nearest\n\t * @param elements {Chart.Element[]} the tooltip elements\n\t * @param eventPosition {Point} the position of the event in canvas coordinates\n\t * @returns {Point} the tooltip position\n\t */\n\tnearest: function(elements, eventPosition) {\n\t\tvar x = eventPosition.x;\n\t\tvar y = eventPosition.y;\n\t\tvar minDistance = Number.POSITIVE_INFINITY;\n\t\tvar i, len, nearestElement;\n\n\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\tvar el = elements[i];\n\t\t\tif (el && el.hasValue()) {\n\t\t\t\tvar center = el.getCenterPoint();\n\t\t\t\tvar d = helpers.distanceBetweenPoints(eventPosition, center);\n\n\t\t\t\tif (d < minDistance) {\n\t\t\t\t\tminDistance = d;\n\t\t\t\t\tnearestElement = el;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (nearestElement) {\n\t\t\tvar tp = nearestElement.tooltipPosition();\n\t\t\tx = tp.x;\n\t\t\ty = tp.y;\n\t\t}\n\n\t\treturn {\n\t\t\tx: x,\n\t\t\ty: y\n\t\t};\n\t}\n};\n\n/**\n * Helper method to merge the opacity into a color\n */\nfunction mergeOpacity(colorString, opacity) {\n\tvar color = helpers.color(colorString);\n\treturn color.alpha(opacity * color.alpha()).rgbaString();\n}\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n\tif (toPush) {\n\t\tif (helpers.isArray(toPush)) {\n\t\t\t// base = base.concat(toPush);\n\t\t\tArray.prototype.push.apply(base, toPush);\n\t\t} else {\n\t\t\tbase.push(toPush);\n\t\t}\n\t}\n\n\treturn base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {String} value - The value to split by newline.\n * @returns {Array} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n\tif ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n\t\treturn str.split('\\n');\n\t}\n\treturn str;\n}\n\n\n// Private helper to create a tooltip item model\n// @param element : the chart element (point, arc, bar) to create the tooltip item for\n// @return : new tooltip item\nfunction createTooltipItem(element) {\n\tvar xScale = element._xScale;\n\tvar yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\tvar index = element._index;\n\tvar datasetIndex = element._datasetIndex;\n\n\treturn {\n\t\txLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n\t\tyLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n\t\tindex: index,\n\t\tdatasetIndex: datasetIndex,\n\t\tx: element._model.x,\n\t\ty: element._model.y\n\t};\n}\n\n/**\n * Helper to get the reset model for the tooltip\n * @param tooltipOpts {Object} the tooltip options\n */\nfunction getBaseModel(tooltipOpts) {\n\tvar globalDefaults = defaults.global;\n\tvar valueOrDefault = helpers.valueOrDefault;\n\n\treturn {\n\t\t// Positioning\n\t\txPadding: tooltipOpts.xPadding,\n\t\tyPadding: tooltipOpts.yPadding,\n\t\txAlign: tooltipOpts.xAlign,\n\t\tyAlign: tooltipOpts.yAlign,\n\n\t\t// Body\n\t\tbodyFontColor: tooltipOpts.bodyFontColor,\n\t\t_bodyFontFamily: valueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n\t\t_bodyFontStyle: valueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n\t\t_bodyAlign: tooltipOpts.bodyAlign,\n\t\tbodyFontSize: valueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n\t\tbodySpacing: tooltipOpts.bodySpacing,\n\n\t\t// Title\n\t\ttitleFontColor: tooltipOpts.titleFontColor,\n\t\t_titleFontFamily: valueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n\t\t_titleFontStyle: valueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n\t\ttitleFontSize: valueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n\t\t_titleAlign: tooltipOpts.titleAlign,\n\t\ttitleSpacing: tooltipOpts.titleSpacing,\n\t\ttitleMarginBottom: tooltipOpts.titleMarginBottom,\n\n\t\t// Footer\n\t\tfooterFontColor: tooltipOpts.footerFontColor,\n\t\t_footerFontFamily: valueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n\t\t_footerFontStyle: valueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n\t\tfooterFontSize: valueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n\t\t_footerAlign: tooltipOpts.footerAlign,\n\t\tfooterSpacing: tooltipOpts.footerSpacing,\n\t\tfooterMarginTop: tooltipOpts.footerMarginTop,\n\n\t\t// Appearance\n\t\tcaretSize: tooltipOpts.caretSize,\n\t\tcornerRadius: tooltipOpts.cornerRadius,\n\t\tbackgroundColor: tooltipOpts.backgroundColor,\n\t\topacity: 0,\n\t\tlegendColorBackground: tooltipOpts.multiKeyBackground,\n\t\tdisplayColors: tooltipOpts.displayColors,\n\t\tborderColor: tooltipOpts.borderColor,\n\t\tborderWidth: tooltipOpts.borderWidth\n\t};\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, model) {\n\tvar ctx = tooltip._chart.ctx;\n\n\tvar height = model.yPadding * 2; // Tooltip Padding\n\tvar width = 0;\n\n\t// Count of all lines in the body\n\tvar body = model.body;\n\tvar combinedBodyLength = body.reduce(function(count, bodyItem) {\n\t\treturn count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n\t}, 0);\n\tcombinedBodyLength += model.beforeBody.length + model.afterBody.length;\n\n\tvar titleLineCount = model.title.length;\n\tvar footerLineCount = model.footer.length;\n\tvar titleFontSize = model.titleFontSize;\n\tvar bodyFontSize = model.bodyFontSize;\n\tvar footerFontSize = model.footerFontSize;\n\n\theight += titleLineCount * titleFontSize; // Title Lines\n\theight += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\theight += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\theight += combinedBodyLength * bodyFontSize; // Body Lines\n\theight += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\theight += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\theight += footerLineCount * (footerFontSize); // Footer Lines\n\theight += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n\n\t// Title width\n\tvar widthPadding = 0;\n\tvar maxLineWidth = function(line) {\n\t\twidth = Math.max(width, ctx.measureText(line).width + widthPadding);\n\t};\n\n\tctx.font = helpers.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n\thelpers.each(model.title, maxLineWidth);\n\n\t// Body width\n\tctx.font = helpers.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n\thelpers.each(model.beforeBody.concat(model.afterBody), maxLineWidth);\n\n\t// Body lines may include some extra width due to the color box\n\twidthPadding = model.displayColors ? (bodyFontSize + 2) : 0;\n\thelpers.each(body, function(bodyItem) {\n\t\thelpers.each(bodyItem.before, maxLineWidth);\n\t\thelpers.each(bodyItem.lines, maxLineWidth);\n\t\thelpers.each(bodyItem.after, maxLineWidth);\n\t});\n\n\t// Reset back to 0\n\twidthPadding = 0;\n\n\t// Footer width\n\tctx.font = helpers.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n\thelpers.each(model.footer, maxLineWidth);\n\n\t// Add padding\n\twidth += 2 * model.xPadding;\n\n\treturn {\n\t\twidth: width,\n\t\theight: height\n\t};\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(tooltip, size) {\n\tvar model = tooltip._model;\n\tvar chart = tooltip._chart;\n\tvar chartArea = tooltip._chart.chartArea;\n\tvar xAlign = 'center';\n\tvar yAlign = 'center';\n\n\tif (model.y < size.height) {\n\t\tyAlign = 'top';\n\t} else if (model.y > (chart.height - size.height)) {\n\t\tyAlign = 'bottom';\n\t}\n\n\tvar lf, rf; // functions to determine left, right alignment\n\tvar olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\tvar yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\tvar midX = (chartArea.left + chartArea.right) / 2;\n\tvar midY = (chartArea.top + chartArea.bottom) / 2;\n\n\tif (yAlign === 'center') {\n\t\tlf = function(x) {\n\t\t\treturn x <= midX;\n\t\t};\n\t\trf = function(x) {\n\t\t\treturn x > midX;\n\t\t};\n\t} else {\n\t\tlf = function(x) {\n\t\t\treturn x <= (size.width / 2);\n\t\t};\n\t\trf = function(x) {\n\t\t\treturn x >= (chart.width - (size.width / 2));\n\t\t};\n\t}\n\n\tolf = function(x) {\n\t\treturn x + size.width + model.caretSize + model.caretPadding > chart.width;\n\t};\n\torf = function(x) {\n\t\treturn x - size.width - model.caretSize - model.caretPadding < 0;\n\t};\n\tyf = function(y) {\n\t\treturn y <= midY ? 'top' : 'bottom';\n\t};\n\n\tif (lf(model.x)) {\n\t\txAlign = 'left';\n\n\t\t// Is tooltip too wide and goes over the right side of the chart.?\n\t\tif (olf(model.x)) {\n\t\t\txAlign = 'center';\n\t\t\tyAlign = yf(model.y);\n\t\t}\n\t} else if (rf(model.x)) {\n\t\txAlign = 'right';\n\n\t\t// Is tooltip too wide and goes outside left edge of canvas?\n\t\tif (orf(model.x)) {\n\t\t\txAlign = 'center';\n\t\t\tyAlign = yf(model.y);\n\t\t}\n\t}\n\n\tvar opts = tooltip._options;\n\treturn {\n\t\txAlign: opts.xAlign ? opts.xAlign : xAlign,\n\t\tyAlign: opts.yAlign ? opts.yAlign : yAlign\n\t};\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(vm, size, alignment, chart) {\n\t// Background Position\n\tvar x = vm.x;\n\tvar y = vm.y;\n\n\tvar caretSize = vm.caretSize;\n\tvar caretPadding = vm.caretPadding;\n\tvar cornerRadius = vm.cornerRadius;\n\tvar xAlign = alignment.xAlign;\n\tvar yAlign = alignment.yAlign;\n\tvar paddingAndSize = caretSize + caretPadding;\n\tvar radiusAndPadding = cornerRadius + caretPadding;\n\n\tif (xAlign === 'right') {\n\t\tx -= size.width;\n\t} else if (xAlign === 'center') {\n\t\tx -= (size.width / 2);\n\t\tif (x + size.width > chart.width) {\n\t\t\tx = chart.width - size.width;\n\t\t}\n\t\tif (x < 0) {\n\t\t\tx = 0;\n\t\t}\n\t}\n\n\tif (yAlign === 'top') {\n\t\ty += paddingAndSize;\n\t} else if (yAlign === 'bottom') {\n\t\ty -= size.height + paddingAndSize;\n\t} else {\n\t\ty -= (size.height / 2);\n\t}\n\n\tif (yAlign === 'center') {\n\t\tif (xAlign === 'left') {\n\t\t\tx += paddingAndSize;\n\t\t} else if (xAlign === 'right') {\n\t\t\tx -= paddingAndSize;\n\t\t}\n\t} else if (xAlign === 'left') {\n\t\tx -= radiusAndPadding;\n\t} else if (xAlign === 'right') {\n\t\tx += radiusAndPadding;\n\t}\n\n\treturn {\n\t\tx: x,\n\t\ty: y\n\t};\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n\treturn pushOrConcat([], splitNewlines(callback));\n}\n\nvar exports = module.exports = Element.extend({\n\tinitialize: function() {\n\t\tthis._model = getBaseModel(this._options);\n\t\tthis._lastActive = [];\n\t},\n\n\t// Get the title\n\t// Args are: (tooltipItem, data)\n\tgetTitle: function() {\n\t\tvar me = this;\n\t\tvar opts = me._options;\n\t\tvar callbacks = opts.callbacks;\n\n\t\tvar beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n\t\tvar title = callbacks.title.apply(me, arguments);\n\t\tvar afterTitle = callbacks.afterTitle.apply(me, arguments);\n\n\t\tvar lines = [];\n\t\tlines = pushOrConcat(lines, splitNewlines(beforeTitle));\n\t\tlines = pushOrConcat(lines, splitNewlines(title));\n\t\tlines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n\t\treturn lines;\n\t},\n\n\t// Args are: (tooltipItem, data)\n\tgetBeforeBody: function() {\n\t\treturn getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n\t},\n\n\t// Args are: (tooltipItem, data)\n\tgetBody: function(tooltipItems, data) {\n\t\tvar me = this;\n\t\tvar callbacks = me._options.callbacks;\n\t\tvar bodyItems = [];\n\n\t\thelpers.each(tooltipItems, function(tooltipItem) {\n\t\t\tvar bodyItem = {\n\t\t\t\tbefore: [],\n\t\t\t\tlines: [],\n\t\t\t\tafter: []\n\t\t\t};\n\t\t\tpushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n\t\t\tpushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n\t\t\tpushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n\n\t\t\tbodyItems.push(bodyItem);\n\t\t});\n\n\t\treturn bodyItems;\n\t},\n\n\t// Args are: (tooltipItem, data)\n\tgetAfterBody: function() {\n\t\treturn getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n\t},\n\n\t// Get the footer and beforeFooter and afterFooter lines\n\t// Args are: (tooltipItem, data)\n\tgetFooter: function() {\n\t\tvar me = this;\n\t\tvar callbacks = me._options.callbacks;\n\n\t\tvar beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n\t\tvar footer = callbacks.footer.apply(me, arguments);\n\t\tvar afterFooter = callbacks.afterFooter.apply(me, arguments);\n\n\t\tvar lines = [];\n\t\tlines = pushOrConcat(lines, splitNewlines(beforeFooter));\n\t\tlines = pushOrConcat(lines, splitNewlines(footer));\n\t\tlines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n\t\treturn lines;\n\t},\n\n\tupdate: function(changed) {\n\t\tvar me = this;\n\t\tvar opts = me._options;\n\n\t\t// Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n\t\t// that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n\t\t// which breaks any animations.\n\t\tvar existingModel = me._model;\n\t\tvar model = me._model = getBaseModel(opts);\n\t\tvar active = me._active;\n\n\t\tvar data = me._data;\n\n\t\t// In the case where active.length === 0 we need to keep these at existing values for good animations\n\t\tvar alignment = {\n\t\t\txAlign: existingModel.xAlign,\n\t\t\tyAlign: existingModel.yAlign\n\t\t};\n\t\tvar backgroundPoint = {\n\t\t\tx: existingModel.x,\n\t\t\ty: existingModel.y\n\t\t};\n\t\tvar tooltipSize = {\n\t\t\twidth: existingModel.width,\n\t\t\theight: existingModel.height\n\t\t};\n\t\tvar tooltipPosition = {\n\t\t\tx: existingModel.caretX,\n\t\t\ty: existingModel.caretY\n\t\t};\n\n\t\tvar i, len;\n\n\t\tif (active.length) {\n\t\t\tmodel.opacity = 1;\n\n\t\t\tvar labelColors = [];\n\t\t\tvar labelTextColors = [];\n\t\t\ttooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n\n\t\t\tvar tooltipItems = [];\n\t\t\tfor (i = 0, len = active.length; i < len; ++i) {\n\t\t\t\ttooltipItems.push(createTooltipItem(active[i]));\n\t\t\t}\n\n\t\t\t// If the user provided a filter function, use it to modify the tooltip items\n\t\t\tif (opts.filter) {\n\t\t\t\ttooltipItems = tooltipItems.filter(function(a) {\n\t\t\t\t\treturn opts.filter(a, data);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// If the user provided a sorting function, use it to modify the tooltip items\n\t\t\tif (opts.itemSort) {\n\t\t\t\ttooltipItems = tooltipItems.sort(function(a, b) {\n\t\t\t\t\treturn opts.itemSort(a, b, data);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Determine colors for boxes\n\t\t\thelpers.each(tooltipItems, function(tooltipItem) {\n\t\t\t\tlabelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n\t\t\t\tlabelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n\t\t\t});\n\n\n\t\t\t// Build the Text Lines\n\t\t\tmodel.title = me.getTitle(tooltipItems, data);\n\t\t\tmodel.beforeBody = me.getBeforeBody(tooltipItems, data);\n\t\t\tmodel.body = me.getBody(tooltipItems, data);\n\t\t\tmodel.afterBody = me.getAfterBody(tooltipItems, data);\n\t\t\tmodel.footer = me.getFooter(tooltipItems, data);\n\n\t\t\t// Initial positioning and colors\n\t\t\tmodel.x = Math.round(tooltipPosition.x);\n\t\t\tmodel.y = Math.round(tooltipPosition.y);\n\t\t\tmodel.caretPadding = opts.caretPadding;\n\t\t\tmodel.labelColors = labelColors;\n\t\t\tmodel.labelTextColors = labelTextColors;\n\n\t\t\t// data points\n\t\t\tmodel.dataPoints = tooltipItems;\n\n\t\t\t// We need to determine alignment of the tooltip\n\t\t\ttooltipSize = getTooltipSize(this, model);\n\t\t\talignment = determineAlignment(this, tooltipSize);\n\t\t\t// Final Size and Position\n\t\t\tbackgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n\t\t} else {\n\t\t\tmodel.opacity = 0;\n\t\t}\n\n\t\tmodel.xAlign = alignment.xAlign;\n\t\tmodel.yAlign = alignment.yAlign;\n\t\tmodel.x = backgroundPoint.x;\n\t\tmodel.y = backgroundPoint.y;\n\t\tmodel.width = tooltipSize.width;\n\t\tmodel.height = tooltipSize.height;\n\n\t\t// Point where the caret on the tooltip points to\n\t\tmodel.caretX = tooltipPosition.x;\n\t\tmodel.caretY = tooltipPosition.y;\n\n\t\tme._model = model;\n\n\t\tif (changed && opts.custom) {\n\t\t\topts.custom.call(me, model);\n\t\t}\n\n\t\treturn me;\n\t},\n\n\tdrawCaret: function(tooltipPoint, size) {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n\n\t\tctx.lineTo(caretPosition.x1, caretPosition.y1);\n\t\tctx.lineTo(caretPosition.x2, caretPosition.y2);\n\t\tctx.lineTo(caretPosition.x3, caretPosition.y3);\n\t},\n\tgetCaretPosition: function(tooltipPoint, size, vm) {\n\t\tvar x1, x2, x3, y1, y2, y3;\n\t\tvar caretSize = vm.caretSize;\n\t\tvar cornerRadius = vm.cornerRadius;\n\t\tvar xAlign = vm.xAlign;\n\t\tvar yAlign = vm.yAlign;\n\t\tvar ptX = tooltipPoint.x;\n\t\tvar ptY = tooltipPoint.y;\n\t\tvar width = size.width;\n\t\tvar height = size.height;\n\n\t\tif (yAlign === 'center') {\n\t\t\ty2 = ptY + (height / 2);\n\n\t\t\tif (xAlign === 'left') {\n\t\t\t\tx1 = ptX;\n\t\t\t\tx2 = x1 - caretSize;\n\t\t\t\tx3 = x1;\n\n\t\t\t\ty1 = y2 + caretSize;\n\t\t\t\ty3 = y2 - caretSize;\n\t\t\t} else {\n\t\t\t\tx1 = ptX + width;\n\t\t\t\tx2 = x1 + caretSize;\n\t\t\t\tx3 = x1;\n\n\t\t\t\ty1 = y2 - caretSize;\n\t\t\t\ty3 = y2 + caretSize;\n\t\t\t}\n\t\t} else {\n\t\t\tif (xAlign === 'left') {\n\t\t\t\tx2 = ptX + cornerRadius + (caretSize);\n\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\tx3 = x2 + caretSize;\n\t\t\t} else if (xAlign === 'right') {\n\t\t\t\tx2 = ptX + width - cornerRadius - caretSize;\n\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\tx3 = x2 + caretSize;\n\t\t\t} else {\n\t\t\t\tx2 = vm.caretX;\n\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\tx3 = x2 + caretSize;\n\t\t\t}\n\t\t\tif (yAlign === 'top') {\n\t\t\t\ty1 = ptY;\n\t\t\t\ty2 = y1 - caretSize;\n\t\t\t\ty3 = y1;\n\t\t\t} else {\n\t\t\t\ty1 = ptY + height;\n\t\t\t\ty2 = y1 + caretSize;\n\t\t\t\ty3 = y1;\n\t\t\t\t// invert drawing order\n\t\t\t\tvar tmp = x3;\n\t\t\t\tx3 = x1;\n\t\t\t\tx1 = tmp;\n\t\t\t}\n\t\t}\n\t\treturn {x1: x1, x2: x2, x3: x3, y1: y1, y2: y2, y3: y3};\n\t},\n\n\tdrawTitle: function(pt, vm, ctx, opacity) {\n\t\tvar title = vm.title;\n\n\t\tif (title.length) {\n\t\t\tctx.textAlign = vm._titleAlign;\n\t\t\tctx.textBaseline = 'top';\n\n\t\t\tvar titleFontSize = vm.titleFontSize;\n\t\t\tvar titleSpacing = vm.titleSpacing;\n\n\t\t\tctx.fillStyle = mergeOpacity(vm.titleFontColor, opacity);\n\t\t\tctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n\n\t\t\tvar i, len;\n\t\t\tfor (i = 0, len = title.length; i < len; ++i) {\n\t\t\t\tctx.fillText(title[i], pt.x, pt.y);\n\t\t\t\tpt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n\t\t\t\tif (i + 1 === title.length) {\n\t\t\t\t\tpt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tdrawBody: function(pt, vm, ctx, opacity) {\n\t\tvar bodyFontSize = vm.bodyFontSize;\n\t\tvar bodySpacing = vm.bodySpacing;\n\t\tvar body = vm.body;\n\n\t\tctx.textAlign = vm._bodyAlign;\n\t\tctx.textBaseline = 'top';\n\t\tctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n\n\t\t// Before Body\n\t\tvar xLinePadding = 0;\n\t\tvar fillLineOfText = function(line) {\n\t\t\tctx.fillText(line, pt.x + xLinePadding, pt.y);\n\t\t\tpt.y += bodyFontSize + bodySpacing;\n\t\t};\n\n\t\t// Before body lines\n\t\tctx.fillStyle = mergeOpacity(vm.bodyFontColor, opacity);\n\t\thelpers.each(vm.beforeBody, fillLineOfText);\n\n\t\tvar drawColorBoxes = vm.displayColors;\n\t\txLinePadding = drawColorBoxes ? (bodyFontSize + 2) : 0;\n\n\t\t// Draw body lines now\n\t\thelpers.each(body, function(bodyItem, i) {\n\t\t\tvar textColor = mergeOpacity(vm.labelTextColors[i], opacity);\n\t\t\tctx.fillStyle = textColor;\n\t\t\thelpers.each(bodyItem.before, fillLineOfText);\n\n\t\t\thelpers.each(bodyItem.lines, function(line) {\n\t\t\t\t// Draw Legend-like boxes if needed\n\t\t\t\tif (drawColorBoxes) {\n\t\t\t\t\t// Fill a white rect so that colours merge nicely if the opacity is < 1\n\t\t\t\t\tctx.fillStyle = mergeOpacity(vm.legendColorBackground, opacity);\n\t\t\t\t\tctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t// Border\n\t\t\t\t\tctx.lineWidth = 1;\n\t\t\t\t\tctx.strokeStyle = mergeOpacity(vm.labelColors[i].borderColor, opacity);\n\t\t\t\t\tctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t// Inner square\n\t\t\t\t\tctx.fillStyle = mergeOpacity(vm.labelColors[i].backgroundColor, opacity);\n\t\t\t\t\tctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n\t\t\t\t\tctx.fillStyle = textColor;\n\t\t\t\t}\n\n\t\t\t\tfillLineOfText(line);\n\t\t\t});\n\n\t\t\thelpers.each(bodyItem.after, fillLineOfText);\n\t\t});\n\n\t\t// Reset back to 0 for after body\n\t\txLinePadding = 0;\n\n\t\t// After body lines\n\t\thelpers.each(vm.afterBody, fillLineOfText);\n\t\tpt.y -= bodySpacing; // Remove last body spacing\n\t},\n\n\tdrawFooter: function(pt, vm, ctx, opacity) {\n\t\tvar footer = vm.footer;\n\n\t\tif (footer.length) {\n\t\t\tpt.y += vm.footerMarginTop;\n\n\t\t\tctx.textAlign = vm._footerAlign;\n\t\t\tctx.textBaseline = 'top';\n\n\t\t\tctx.fillStyle = mergeOpacity(vm.footerFontColor, opacity);\n\t\t\tctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n\n\t\t\thelpers.each(footer, function(line) {\n\t\t\t\tctx.fillText(line, pt.x, pt.y);\n\t\t\t\tpt.y += vm.footerFontSize + vm.footerSpacing;\n\t\t\t});\n\t\t}\n\t},\n\n\tdrawBackground: function(pt, vm, ctx, tooltipSize, opacity) {\n\t\tctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);\n\t\tctx.strokeStyle = mergeOpacity(vm.borderColor, opacity);\n\t\tctx.lineWidth = vm.borderWidth;\n\t\tvar xAlign = vm.xAlign;\n\t\tvar yAlign = vm.yAlign;\n\t\tvar x = pt.x;\n\t\tvar y = pt.y;\n\t\tvar width = tooltipSize.width;\n\t\tvar height = tooltipSize.height;\n\t\tvar radius = vm.cornerRadius;\n\n\t\tctx.beginPath();\n\t\tctx.moveTo(x + radius, y);\n\t\tif (yAlign === 'top') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x + width - radius, y);\n\t\tctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\t\tif (yAlign === 'center' && xAlign === 'right') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x + width, y + height - radius);\n\t\tctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\t\tif (yAlign === 'bottom') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x + radius, y + height);\n\t\tctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\t\tif (yAlign === 'center' && xAlign === 'left') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x, y + radius);\n\t\tctx.quadraticCurveTo(x, y, x + radius, y);\n\t\tctx.closePath();\n\n\t\tctx.fill();\n\n\t\tif (vm.borderWidth > 0) {\n\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\n\t\tif (vm.opacity === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar tooltipSize = {\n\t\t\twidth: vm.width,\n\t\t\theight: vm.height\n\t\t};\n\t\tvar pt = {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\n\t\t// IE11/Edge does not like very small opacities, so snap to 0\n\t\tvar opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;\n\n\t\t// Truthy/falsey value for empty tooltip\n\t\tvar hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n\t\tif (this._options.enabled && hasTooltipContent) {\n\t\t\t// Draw Background\n\t\t\tthis.drawBackground(pt, vm, ctx, tooltipSize, opacity);\n\n\t\t\t// Draw Title, Body, and Footer\n\t\t\tpt.x += vm.xPadding;\n\t\t\tpt.y += vm.yPadding;\n\n\t\t\t// Titles\n\t\t\tthis.drawTitle(pt, vm, ctx, opacity);\n\n\t\t\t// Body\n\t\t\tthis.drawBody(pt, vm, ctx, opacity);\n\n\t\t\t// Footer\n\t\t\tthis.drawFooter(pt, vm, ctx, opacity);\n\t\t}\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event - The event to handle\n\t * @returns {Boolean} true if the tooltip changed\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar options = me._options;\n\t\tvar changed = false;\n\n\t\tme._lastActive = me._lastActive || [];\n\n\t\t// Find Active Elements for tooltips\n\t\tif (e.type === 'mouseout') {\n\t\t\tme._active = [];\n\t\t} else {\n\t\t\tme._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n\t\t}\n\n\t\t// Remember Last Actives\n\t\tchanged = !helpers.arrayEquals(me._active, me._lastActive);\n\n\t\t// Only handle target event on tooltip change\n\t\tif (changed) {\n\t\t\tme._lastActive = me._active;\n\n\t\t\tif (options.enabled || options.custom) {\n\t\t\t\tme._eventPosition = {\n\t\t\t\t\tx: e.x,\n\t\t\t\t\ty: e.y\n\t\t\t\t};\n\n\t\t\t\tme.update(true);\n\t\t\t\tme.pivot();\n\t\t\t}\n\t\t}\n\n\t\treturn changed;\n\t}\n});\n\n/**\n * @namespace Chart.Tooltip.positioners\n */\nexports.positioners = positioners;\n\n","'use strict';\n\nvar defaults = require('./core.defaults');\n\ndefaults._set('global', {\n\tresponsive: true,\n\tresponsiveAnimationDuration: 0,\n\tmaintainAspectRatio: true,\n\tevents: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n\thover: {\n\t\tonHover: null,\n\t\tmode: 'nearest',\n\t\tintersect: true,\n\t\tanimationDuration: 400\n\t},\n\tonClick: null,\n\tdefaultColor: 'rgba(0,0,0,0.1)',\n\tdefaultFontColor: '#666',\n\tdefaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\tdefaultFontSize: 12,\n\tdefaultFontStyle: 'normal',\n\tshowLines: true,\n\n\t// Element defaults defined in element extensions\n\telements: {},\n\n\t// Layout options such as padding\n\tlayout: {\n\t\tpadding: {\n\t\t\ttop: 0,\n\t\t\tright: 0,\n\t\t\tbottom: 0,\n\t\t\tleft: 0\n\t\t}\n\t}\n});\n\nmodule.exports = function() {\n\n\t// Occupy the global variable of Chart, and create a simple base class\n\tvar Chart = function(item, config) {\n\t\tthis.construct(item, config);\n\t\treturn this;\n\t};\n\n\tChart.Chart = Chart;\n\n\treturn Chart;\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\n\ndefaults._set('global', {\n\telements: {\n\t\trectangle: {\n\t\t\tbackgroundColor: defaults.global.defaultColor,\n\t\t\tborderColor: defaults.global.defaultColor,\n\t\t\tborderSkipped: 'bottom',\n\t\t\tborderWidth: 0\n\t\t}\n\t}\n});\n\nfunction isVertical(bar) {\n\treturn bar._view.width !== undefined;\n}\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param bar {Chart.Element.Rectangle} the bar\n * @return {Bounds} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar) {\n\tvar vm = bar._view;\n\tvar x1, x2, y1, y2;\n\n\tif (isVertical(bar)) {\n\t\t// vertical\n\t\tvar halfWidth = vm.width / 2;\n\t\tx1 = vm.x - halfWidth;\n\t\tx2 = vm.x + halfWidth;\n\t\ty1 = Math.min(vm.y, vm.base);\n\t\ty2 = Math.max(vm.y, vm.base);\n\t} else {\n\t\t// horizontal bar\n\t\tvar halfHeight = vm.height / 2;\n\t\tx1 = Math.min(vm.x, vm.base);\n\t\tx2 = Math.max(vm.x, vm.base);\n\t\ty1 = vm.y - halfHeight;\n\t\ty2 = vm.y + halfHeight;\n\t}\n\n\treturn {\n\t\tleft: x1,\n\t\ttop: y1,\n\t\tright: x2,\n\t\tbottom: y2\n\t};\n}\n\nmodule.exports = Element.extend({\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar left, right, top, bottom, signX, signY, borderSkipped;\n\t\tvar borderWidth = vm.borderWidth;\n\n\t\tif (!vm.horizontal) {\n\t\t\t// bar\n\t\t\tleft = vm.x - vm.width / 2;\n\t\t\tright = vm.x + vm.width / 2;\n\t\t\ttop = vm.y;\n\t\t\tbottom = vm.base;\n\t\t\tsignX = 1;\n\t\t\tsignY = bottom > top ? 1 : -1;\n\t\t\tborderSkipped = vm.borderSkipped || 'bottom';\n\t\t} else {\n\t\t\t// horizontal bar\n\t\t\tleft = vm.base;\n\t\t\tright = vm.x;\n\t\t\ttop = vm.y - vm.height / 2;\n\t\t\tbottom = vm.y + vm.height / 2;\n\t\t\tsignX = right > left ? 1 : -1;\n\t\t\tsignY = 1;\n\t\t\tborderSkipped = vm.borderSkipped || 'left';\n\t\t}\n\n\t\t// Canvas doesn't allow us to stroke inside the width so we can\n\t\t// adjust the sizes to fit if we're setting a stroke on the line\n\t\tif (borderWidth) {\n\t\t\t// borderWidth shold be less than bar width and bar height.\n\t\t\tvar barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n\t\t\tborderWidth = borderWidth > barSize ? barSize : borderWidth;\n\t\t\tvar halfStroke = borderWidth / 2;\n\t\t\t// Adjust borderWidth when bar top position is near vm.base(zero).\n\t\t\tvar borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\n\t\t\tvar borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\n\t\t\tvar borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\n\t\t\tvar borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\n\t\t\t// not become a vertical line?\n\t\t\tif (borderLeft !== borderRight) {\n\t\t\t\ttop = borderTop;\n\t\t\t\tbottom = borderBottom;\n\t\t\t}\n\t\t\t// not become a horizontal line?\n\t\t\tif (borderTop !== borderBottom) {\n\t\t\t\tleft = borderLeft;\n\t\t\t\tright = borderRight;\n\t\t\t}\n\t\t}\n\n\t\tctx.beginPath();\n\t\tctx.fillStyle = vm.backgroundColor;\n\t\tctx.strokeStyle = vm.borderColor;\n\t\tctx.lineWidth = borderWidth;\n\n\t\t// Corner points, from bottom-left to bottom-right clockwise\n\t\t// | 1 2 |\n\t\t// | 0 3 |\n\t\tvar corners = [\n\t\t\t[left, bottom],\n\t\t\t[left, top],\n\t\t\t[right, top],\n\t\t\t[right, bottom]\n\t\t];\n\n\t\t// Find first (starting) corner with fallback to 'bottom'\n\t\tvar borders = ['bottom', 'left', 'top', 'right'];\n\t\tvar startCorner = borders.indexOf(borderSkipped, 0);\n\t\tif (startCorner === -1) {\n\t\t\tstartCorner = 0;\n\t\t}\n\n\t\tfunction cornerAt(index) {\n\t\t\treturn corners[(startCorner + index) % 4];\n\t\t}\n\n\t\t// Draw rectangle from 'startCorner'\n\t\tvar corner = cornerAt(0);\n\t\tctx.moveTo(corner[0], corner[1]);\n\n\t\tfor (var i = 1; i < 4; i++) {\n\t\t\tcorner = cornerAt(i);\n\t\t\tctx.lineTo(corner[0], corner[1]);\n\t\t}\n\n\t\tctx.fill();\n\t\tif (borderWidth) {\n\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\theight: function() {\n\t\tvar vm = this._view;\n\t\treturn vm.base - vm.y;\n\t},\n\n\tinRange: function(mouseX, mouseY) {\n\t\tvar inRange = false;\n\n\t\tif (this._view) {\n\t\t\tvar bounds = getBarBounds(this);\n\t\t\tinRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t}\n\n\t\treturn inRange;\n\t},\n\n\tinLabelRange: function(mouseX, mouseY) {\n\t\tvar me = this;\n\t\tif (!me._view) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar inRange = false;\n\t\tvar bounds = getBarBounds(me);\n\n\t\tif (isVertical(me)) {\n\t\t\tinRange = mouseX >= bounds.left && mouseX <= bounds.right;\n\t\t} else {\n\t\t\tinRange = mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t}\n\n\t\treturn inRange;\n\t},\n\n\tinXRange: function(mouseX) {\n\t\tvar bounds = getBarBounds(this);\n\t\treturn mouseX >= bounds.left && mouseX <= bounds.right;\n\t},\n\n\tinYRange: function(mouseY) {\n\t\tvar bounds = getBarBounds(this);\n\t\treturn mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar x, y;\n\t\tif (isVertical(this)) {\n\t\t\tx = vm.x;\n\t\t\ty = (vm.y + vm.base) / 2;\n\t\t} else {\n\t\t\tx = (vm.x + vm.base) / 2;\n\t\t\ty = vm.y;\n\t\t}\n\n\t\treturn {x: x, y: y};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\t\treturn vm.width * Math.abs(vm.y - vm.base);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t}\n});\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\ndefaults._set('scatter', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\tid: 'x-axis-1',    // need an ID so datasets can reference the scale\n\t\t\ttype: 'linear',    // scatter should not use a category axis\n\t\t\tposition: 'bottom'\n\t\t}],\n\t\tyAxes: [{\n\t\t\tid: 'y-axis-1',\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left'\n\t\t}]\n\t},\n\n\tshowLines: false,\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';     // doesn't make sense for scatter since data are formatted as a point\n\t\t\t},\n\t\t\tlabel: function(item) {\n\t\t\t\treturn '(' + item.xLabel + ', ' + item.yLabel + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\t// Scatter charts use line controllers\n\tChart.controllers.scatter = Chart.controllers.line;\n\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('polarArea', {\n\tscale: {\n\t\ttype: 'radialLinear',\n\t\tangleLines: {\n\t\t\tdisplay: false\n\t\t},\n\t\tgridLines: {\n\t\t\tcircular: true\n\t\t},\n\t\tpointLabels: {\n\t\t\tdisplay: false\n\t\t},\n\t\tticks: {\n\t\t\tbeginAtZero: true\n\t\t}\n\t},\n\n\t// Boolean - Whether to animate the rotation of the chart\n\tanimation: {\n\t\tanimateRotate: true,\n\t\tanimateScale: true\n\t},\n\n\tstartAngle: -0.5 * Math.PI,\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc.custom || {};\n\t\t\t\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\treturn data.labels[item.index] + ': ' + item.yLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.polarArea = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Arc,\n\n\t\tlinkScales: helpers.noop,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar start = me.chart.options.startAngle || 0;\n\t\t\tvar starts = me._starts = [];\n\t\t\tvar angles = me._angles = [];\n\t\t\tvar i, ilen, angle;\n\n\t\t\tme._updateRadius();\n\n\t\t\tmeta.count = me.countVisibleElements();\n\n\t\t\tfor (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n\t\t\t\tstarts[i] = start;\n\t\t\t\tangle = me._computeAngle(i);\n\t\t\t\tangles[i] = angle;\n\t\t\t\tstart += angle;\n\t\t\t}\n\n\t\t\thelpers.each(meta.data, function(arc, index) {\n\t\t\t\tme.updateElement(arc, index, reset);\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\t_updateRadius: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar opts = chart.options;\n\t\t\tvar arcOpts = opts.elements.arc;\n\t\t\tvar minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n\t\t\tchart.outerRadius = Math.max((minSize - arcOpts.borderWidth / 2) / 2, 0);\n\t\t\tchart.innerRadius = Math.max(opts.cutoutPercentage ? (chart.outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.index);\n\t\t\tme.innerRadius = me.outerRadius - chart.radiusLength;\n\t\t},\n\n\t\tupdateElement: function(arc, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar opts = chart.options;\n\t\t\tvar animationOpts = opts.animation;\n\t\t\tvar scale = chart.scale;\n\t\t\tvar labels = chart.data.labels;\n\n\t\t\tvar centerX = scale.xCenter;\n\t\t\tvar centerY = scale.yCenter;\n\n\t\t\t// var negHalfPI = -0.5 * Math.PI;\n\t\t\tvar datasetStartAngle = opts.startAngle;\n\t\t\tvar distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\t\t\tvar startAngle = me._starts[index];\n\t\t\tvar endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n\n\t\t\tvar resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\n\t\t\thelpers.extend(arc, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\t\t\t\t_scale: scale,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: centerX,\n\t\t\t\t\ty: centerY,\n\t\t\t\t\tinnerRadius: 0,\n\t\t\t\t\touterRadius: reset ? resetRadius : distance,\n\t\t\t\t\tstartAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n\t\t\t\t\tendAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n\t\t\t\t\tlabel: helpers.valueAtIndexOrDefault(labels, index, labels[index])\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Apply border and fill style\n\t\t\tvar elementOpts = this.chart.options.elements.arc;\n\t\t\tvar custom = arc.custom || {};\n\t\t\tvar valueOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\tvar model = arc._model;\n\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\n\n\t\t\tarc.pivot();\n\t\t},\n\n\t\tcountVisibleElements: function() {\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar count = 0;\n\n\t\t\thelpers.each(meta.data, function(element, index) {\n\t\t\t\tif (!isNaN(dataset.data[index]) && !element.hidden) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn count;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\t_computeAngle: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar count = this.getMeta().count;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar meta = me.getMeta();\n\n\t\t\tif (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\t// Scriptable options\n\t\t\tvar context = {\n\t\t\t\tchart: me.chart,\n\t\t\t\tdataIndex: index,\n\t\t\t\tdataset: dataset,\n\t\t\t\tdatasetIndex: me.index\n\t\t\t};\n\n\t\t\treturn helpers.options.resolve([\n\t\t\t\tme.chart.options.elements.arc.angle,\n\t\t\t\t(2 * Math.PI) / count\n\t\t\t], context, index);\n\t\t}\n\t});\n};\n","'use strict';\n\nvar Animation = require('./core.animation');\nvar animations = require('./core.animations');\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\nvar Interaction = require('./core.interaction');\nvar layouts = require('./core.layouts');\nvar platform = require('../platforms/platform');\nvar plugins = require('./core.plugins');\nvar scaleService = require('../core/core.scaleService');\nvar Tooltip = require('./core.tooltip');\n\nmodule.exports = function(Chart) {\n\n\t// Create a dictionary of chart types, to allow for extension of existing types\n\tChart.types = {};\n\n\t// Store a reference to each instance - allowing us to globally resize chart instances on window resize.\n\t// Destroy method on the chart will remove the instance of the chart from this reference.\n\tChart.instances = {};\n\n\t// Controllers available for dataset visualization eg. bar, line, slice, etc.\n\tChart.controllers = {};\n\n\t/**\n\t * Initializes the given config with global and chart default values.\n\t */\n\tfunction initConfig(config) {\n\t\tconfig = config || {};\n\n\t\t// Do NOT use configMerge() for the data object because this method merges arrays\n\t\t// and so would change references to labels and datasets, preventing data updates.\n\t\tvar data = config.data = config.data || {};\n\t\tdata.datasets = data.datasets || [];\n\t\tdata.labels = data.labels || [];\n\n\t\tconfig.options = helpers.configMerge(\n\t\t\tdefaults.global,\n\t\t\tdefaults[config.type],\n\t\t\tconfig.options || {});\n\n\t\treturn config;\n\t}\n\n\t/**\n\t * Updates the config of the chart\n\t * @param chart {Chart} chart to update the options for\n\t */\n\tfunction updateConfig(chart) {\n\t\tvar newOptions = chart.options;\n\n\t\thelpers.each(chart.scales, function(scale) {\n\t\t\tlayouts.removeBox(chart, scale);\n\t\t});\n\n\t\tnewOptions = helpers.configMerge(\n\t\t\tChart.defaults.global,\n\t\t\tChart.defaults[chart.config.type],\n\t\t\tnewOptions);\n\n\t\tchart.options = chart.config.options = newOptions;\n\t\tchart.ensureScalesHaveIDs();\n\t\tchart.buildOrUpdateScales();\n\t\t// Tooltip\n\t\tchart.tooltip._options = newOptions.tooltips;\n\t\tchart.tooltip.initialize();\n\t}\n\n\tfunction positionIsHorizontal(position) {\n\t\treturn position === 'top' || position === 'bottom';\n\t}\n\n\thelpers.extend(Chart.prototype, /** @lends Chart */ {\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tconstruct: function(item, config) {\n\t\t\tvar me = this;\n\n\t\t\tconfig = initConfig(config);\n\n\t\t\tvar context = platform.acquireContext(item, config);\n\t\t\tvar canvas = context && context.canvas;\n\t\t\tvar height = canvas && canvas.height;\n\t\t\tvar width = canvas && canvas.width;\n\n\t\t\tme.id = helpers.uid();\n\t\t\tme.ctx = context;\n\t\t\tme.canvas = canvas;\n\t\t\tme.config = config;\n\t\t\tme.width = width;\n\t\t\tme.height = height;\n\t\t\tme.aspectRatio = height ? width / height : null;\n\t\t\tme.options = config.options;\n\t\t\tme._bufferedRender = false;\n\n\t\t\t/**\n\t\t\t * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n\t\t\t * the \"instance\" still need to be defined since it might be called from plugins.\n\t\t\t * @prop Chart#chart\n\t\t\t * @deprecated since version 2.6.0\n\t\t\t * @todo remove at version 3\n\t\t\t * @private\n\t\t\t */\n\t\t\tme.chart = me;\n\t\t\tme.controller = me; // chart.chart.controller #inception\n\n\t\t\t// Add the chart instance to the global namespace\n\t\t\tChart.instances[me.id] = me;\n\n\t\t\t// Define alias to the config data: `chart.data === chart.config.data`\n\t\t\tObject.defineProperty(me, 'data', {\n\t\t\t\tget: function() {\n\t\t\t\t\treturn me.config.data;\n\t\t\t\t},\n\t\t\t\tset: function(value) {\n\t\t\t\t\tme.config.data = value;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (!context || !canvas) {\n\t\t\t\t// The given item is not a compatible context2d element, let's return before finalizing\n\t\t\t\t// the chart initialization but after setting basic chart / controller properties that\n\t\t\t\t// can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n\t\t\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\t\t\tconsole.error(\"Failed to create chart: can't acquire context from the given item\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tme.initialize();\n\t\t\tme.update();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tinitialize: function() {\n\t\t\tvar me = this;\n\n\t\t\t// Before init plugin notification\n\t\t\tplugins.notify(me, 'beforeInit');\n\n\t\t\thelpers.retinaScale(me, me.options.devicePixelRatio);\n\n\t\t\tme.bindEvents();\n\n\t\t\tif (me.options.responsive) {\n\t\t\t\t// Initial resize before chart draws (must be silent to preserve initial animations).\n\t\t\t\tme.resize(true);\n\t\t\t}\n\n\t\t\t// Make sure scales have IDs and are built before we build any controllers.\n\t\t\tme.ensureScalesHaveIDs();\n\t\t\tme.buildOrUpdateScales();\n\t\t\tme.initToolTip();\n\n\t\t\t// After init plugin notification\n\t\t\tplugins.notify(me, 'afterInit');\n\n\t\t\treturn me;\n\t\t},\n\n\t\tclear: function() {\n\t\t\thelpers.canvas.clear(this);\n\t\t\treturn this;\n\t\t},\n\n\t\tstop: function() {\n\t\t\t// Stops any current animation loop occurring\n\t\t\tanimations.cancelAnimation(this);\n\t\t\treturn this;\n\t\t},\n\n\t\tresize: function(silent) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar canvas = me.canvas;\n\t\t\tvar aspectRatio = (options.maintainAspectRatio && me.aspectRatio) || null;\n\n\t\t\t// the canvas render width and height will be casted to integers so make sure that\n\t\t\t// the canvas display style uses the same integer values to avoid blurring effect.\n\n\t\t\t// Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\t\t\tvar newWidth = Math.max(0, Math.floor(helpers.getMaximumWidth(canvas)));\n\t\t\tvar newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers.getMaximumHeight(canvas)));\n\n\t\t\tif (me.width === newWidth && me.height === newHeight) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcanvas.width = me.width = newWidth;\n\t\t\tcanvas.height = me.height = newHeight;\n\t\t\tcanvas.style.width = newWidth + 'px';\n\t\t\tcanvas.style.height = newHeight + 'px';\n\n\t\t\thelpers.retinaScale(me, options.devicePixelRatio);\n\n\t\t\tif (!silent) {\n\t\t\t\t// Notify any plugins about the resize\n\t\t\t\tvar newSize = {width: newWidth, height: newHeight};\n\t\t\t\tplugins.notify(me, 'resize', [newSize]);\n\n\t\t\t\t// Notify of resize\n\t\t\t\tif (me.options.onResize) {\n\t\t\t\t\tme.options.onResize(me, newSize);\n\t\t\t\t}\n\n\t\t\t\tme.stop();\n\t\t\t\tme.update({\n\t\t\t\t\tduration: me.options.responsiveAnimationDuration\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\tensureScalesHaveIDs: function() {\n\t\t\tvar options = this.options;\n\t\t\tvar scalesOptions = options.scales || {};\n\t\t\tvar scaleOptions = options.scale;\n\n\t\t\thelpers.each(scalesOptions.xAxes, function(xAxisOptions, index) {\n\t\t\t\txAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);\n\t\t\t});\n\n\t\t\thelpers.each(scalesOptions.yAxes, function(yAxisOptions, index) {\n\t\t\t\tyAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);\n\t\t\t});\n\n\t\t\tif (scaleOptions) {\n\t\t\t\tscaleOptions.id = scaleOptions.id || 'scale';\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Builds a map of scale ID to scale object for future lookup.\n\t\t */\n\t\tbuildOrUpdateScales: function() {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar scales = me.scales || {};\n\t\t\tvar items = [];\n\t\t\tvar updated = Object.keys(scales).reduce(function(obj, id) {\n\t\t\t\tobj[id] = false;\n\t\t\t\treturn obj;\n\t\t\t}, {});\n\n\t\t\tif (options.scales) {\n\t\t\t\titems = items.concat(\n\t\t\t\t\t(options.scales.xAxes || []).map(function(xAxisOptions) {\n\t\t\t\t\t\treturn {options: xAxisOptions, dtype: 'category', dposition: 'bottom'};\n\t\t\t\t\t}),\n\t\t\t\t\t(options.scales.yAxes || []).map(function(yAxisOptions) {\n\t\t\t\t\t\treturn {options: yAxisOptions, dtype: 'linear', dposition: 'left'};\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (options.scale) {\n\t\t\t\titems.push({\n\t\t\t\t\toptions: options.scale,\n\t\t\t\t\tdtype: 'radialLinear',\n\t\t\t\t\tisDefault: true,\n\t\t\t\t\tdposition: 'chartArea'\n\t\t\t\t});\n\t\t\t}\n\n\t\t\thelpers.each(items, function(item) {\n\t\t\t\tvar scaleOptions = item.options;\n\t\t\t\tvar id = scaleOptions.id;\n\t\t\t\tvar scaleType = helpers.valueOrDefault(scaleOptions.type, item.dtype);\n\n\t\t\t\tif (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n\t\t\t\t\tscaleOptions.position = item.dposition;\n\t\t\t\t}\n\n\t\t\t\tupdated[id] = true;\n\t\t\t\tvar scale = null;\n\t\t\t\tif (id in scales && scales[id].type === scaleType) {\n\t\t\t\t\tscale = scales[id];\n\t\t\t\t\tscale.options = scaleOptions;\n\t\t\t\t\tscale.ctx = me.ctx;\n\t\t\t\t\tscale.chart = me;\n\t\t\t\t} else {\n\t\t\t\t\tvar scaleClass = scaleService.getScaleConstructor(scaleType);\n\t\t\t\t\tif (!scaleClass) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tscale = new scaleClass({\n\t\t\t\t\t\tid: id,\n\t\t\t\t\t\ttype: scaleType,\n\t\t\t\t\t\toptions: scaleOptions,\n\t\t\t\t\t\tctx: me.ctx,\n\t\t\t\t\t\tchart: me\n\t\t\t\t\t});\n\t\t\t\t\tscales[scale.id] = scale;\n\t\t\t\t}\n\n\t\t\t\tscale.mergeTicksOptions();\n\n\t\t\t\t// TODO(SB): I think we should be able to remove this custom case (options.scale)\n\t\t\t\t// and consider it as a regular scale part of the \"scales\"\" map only! This would\n\t\t\t\t// make the logic easier and remove some useless? custom code.\n\t\t\t\tif (item.isDefault) {\n\t\t\t\t\tme.scale = scale;\n\t\t\t\t}\n\t\t\t});\n\t\t\t// clear up discarded scales\n\t\t\thelpers.each(updated, function(hasUpdated, id) {\n\t\t\t\tif (!hasUpdated) {\n\t\t\t\t\tdelete scales[id];\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tme.scales = scales;\n\n\t\t\tscaleService.addScalesToLayout(this);\n\t\t},\n\n\t\tbuildOrUpdateControllers: function() {\n\t\t\tvar me = this;\n\t\t\tvar types = [];\n\t\t\tvar newControllers = [];\n\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = me.getDatasetMeta(datasetIndex);\n\t\t\t\tvar type = dataset.type || me.config.type;\n\n\t\t\t\tif (meta.type && meta.type !== type) {\n\t\t\t\t\tme.destroyDatasetMeta(datasetIndex);\n\t\t\t\t\tmeta = me.getDatasetMeta(datasetIndex);\n\t\t\t\t}\n\t\t\t\tmeta.type = type;\n\n\t\t\t\ttypes.push(meta.type);\n\n\t\t\t\tif (meta.controller) {\n\t\t\t\t\tmeta.controller.updateIndex(datasetIndex);\n\t\t\t\t\tmeta.controller.linkScales();\n\t\t\t\t} else {\n\t\t\t\t\tvar ControllerClass = Chart.controllers[meta.type];\n\t\t\t\t\tif (ControllerClass === undefined) {\n\t\t\t\t\t\tthrow new Error('\"' + meta.type + '\" is not a chart type.');\n\t\t\t\t\t}\n\n\t\t\t\t\tmeta.controller = new ControllerClass(me, datasetIndex);\n\t\t\t\t\tnewControllers.push(meta.controller);\n\t\t\t\t}\n\t\t\t}, me);\n\n\t\t\treturn newControllers;\n\t\t},\n\n\t\t/**\n\t\t * Reset the elements of all datasets\n\t\t * @private\n\t\t */\n\t\tresetElements: function() {\n\t\t\tvar me = this;\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.reset();\n\t\t\t}, me);\n\t\t},\n\n\t\t/**\n\t\t* Resets the chart back to it's state before the initial animation\n\t\t*/\n\t\treset: function() {\n\t\t\tthis.resetElements();\n\t\t\tthis.tooltip.initialize();\n\t\t},\n\n\t\tupdate: function(config) {\n\t\t\tvar me = this;\n\n\t\t\tif (!config || typeof config !== 'object') {\n\t\t\t\t// backwards compatibility\n\t\t\t\tconfig = {\n\t\t\t\t\tduration: config,\n\t\t\t\t\tlazy: arguments[1]\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tupdateConfig(me);\n\n\t\t\t// plugins options references might have change, let's invalidate the cache\n\t\t\t// https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t\t\tplugins._invalidate(me);\n\n\t\t\tif (plugins.notify(me, 'beforeUpdate') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// In case the entire data object changed\n\t\t\tme.tooltip._data = me.data;\n\n\t\t\t// Make sure dataset controllers are updated and new controllers are reset\n\t\t\tvar newControllers = me.buildOrUpdateControllers();\n\n\t\t\t// Make sure all dataset controllers have correct meta data counts\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n\t\t\t}, me);\n\n\t\t\tme.updateLayout();\n\n\t\t\t// Can only reset the new controllers after the scales have been updated\n\t\t\tif (me.options.animation && me.options.animation.duration) {\n\t\t\t\thelpers.each(newControllers, function(controller) {\n\t\t\t\t\tcontroller.reset();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tme.updateDatasets();\n\n\t\t\t// Need to reset tooltip in case it is displayed with elements that are removed\n\t\t\t// after update.\n\t\t\tme.tooltip.initialize();\n\n\t\t\t// Last active contains items that were previously in the tooltip.\n\t\t\t// When we reset the tooltip, we need to clear it\n\t\t\tme.lastActive = [];\n\n\t\t\t// Do this before render so that any plugins that need final scale updates can use it\n\t\t\tplugins.notify(me, 'afterUpdate');\n\n\t\t\tif (me._bufferedRender) {\n\t\t\t\tme._bufferedRequest = {\n\t\t\t\t\tduration: config.duration,\n\t\t\t\t\teasing: config.easing,\n\t\t\t\t\tlazy: config.lazy\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tme.render(config);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t\t * @private\n\t\t */\n\t\tupdateLayout: function() {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeLayout') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlayouts.update(this, this.width, this.height);\n\n\t\t\t/**\n\t\t\t * Provided for backward compatibility, use `afterLayout` instead.\n\t\t\t * @method IPlugin#afterScaleUpdate\n\t\t\t * @deprecated since version 2.5.0\n\t\t\t * @todo remove at version 3\n\t\t\t * @private\n\t\t\t */\n\t\t\tplugins.notify(me, 'afterScaleUpdate');\n\t\t\tplugins.notify(me, 'afterLayout');\n\t\t},\n\n\t\t/**\n\t\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t\t * @private\n\t\t */\n\t\tupdateDatasets: function() {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tme.updateDataset(i);\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterDatasetsUpdate');\n\t\t},\n\n\t\t/**\n\t\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t\t * @private\n\t\t */\n\t\tupdateDataset: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getDatasetMeta(index);\n\t\t\tvar args = {\n\t\t\t\tmeta: meta,\n\t\t\t\tindex: index\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmeta.controller.update();\n\n\t\t\tplugins.notify(me, 'afterDatasetUpdate', [args]);\n\t\t},\n\n\t\trender: function(config) {\n\t\t\tvar me = this;\n\n\t\t\tif (!config || typeof config !== 'object') {\n\t\t\t\t// backwards compatibility\n\t\t\t\tconfig = {\n\t\t\t\t\tduration: config,\n\t\t\t\t\tlazy: arguments[1]\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar duration = config.duration;\n\t\t\tvar lazy = config.lazy;\n\n\t\t\tif (plugins.notify(me, 'beforeRender') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar animationOptions = me.options.animation;\n\t\t\tvar onComplete = function(animation) {\n\t\t\t\tplugins.notify(me, 'afterRender');\n\t\t\t\thelpers.callback(animationOptions && animationOptions.onComplete, [animation], me);\n\t\t\t};\n\n\t\t\tif (animationOptions && ((typeof duration !== 'undefined' && duration !== 0) || (typeof duration === 'undefined' && animationOptions.duration !== 0))) {\n\t\t\t\tvar animation = new Animation({\n\t\t\t\t\tnumSteps: (duration || animationOptions.duration) / 16.66, // 60 fps\n\t\t\t\t\teasing: config.easing || animationOptions.easing,\n\n\t\t\t\t\trender: function(chart, animationObject) {\n\t\t\t\t\t\tvar easingFunction = helpers.easing.effects[animationObject.easing];\n\t\t\t\t\t\tvar currentStep = animationObject.currentStep;\n\t\t\t\t\t\tvar stepDecimal = currentStep / animationObject.numSteps;\n\n\t\t\t\t\t\tchart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n\t\t\t\t\t},\n\n\t\t\t\t\tonAnimationProgress: animationOptions.onProgress,\n\t\t\t\t\tonAnimationComplete: onComplete\n\t\t\t\t});\n\n\t\t\t\tanimations.addAnimation(me, animation, duration, lazy);\n\t\t\t} else {\n\t\t\t\tme.draw();\n\n\t\t\t\t// See https://github.com/chartjs/Chart.js/issues/3781\n\t\t\t\tonComplete(new Animation({numSteps: 0, chart: me}));\n\t\t\t}\n\n\t\t\treturn me;\n\t\t},\n\n\t\tdraw: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tme.clear();\n\n\t\t\tif (helpers.isNullOrUndef(easingValue)) {\n\t\t\t\teasingValue = 1;\n\t\t\t}\n\n\t\t\tme.transition(easingValue);\n\n\t\t\tif (me.width <= 0 || me.height <= 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Draw all the scales\n\t\t\thelpers.each(me.boxes, function(box) {\n\t\t\t\tbox.draw(me.chartArea);\n\t\t\t}, me);\n\n\t\t\tif (me.scale) {\n\t\t\t\tme.scale.draw();\n\t\t\t}\n\n\t\t\tme.drawDatasets(easingValue);\n\t\t\tme._drawTooltip(easingValue);\n\n\t\t\tplugins.notify(me, 'afterDraw', [easingValue]);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\ttransition: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tfor (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\t\tme.getDatasetMeta(i).controller.transition(easingValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.tooltip.transition(easingValue);\n\t\t},\n\n\t\t/**\n\t\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t\t * @private\n\t\t */\n\t\tdrawDatasets: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Draw datasets reversed to support proper line stacking\n\t\t\tfor (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n\t\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\t\tme.drawDataset(i, easingValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n\t\t},\n\n\t\t/**\n\t\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t\t * @private\n\t\t */\n\t\tdrawDataset: function(index, easingValue) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getDatasetMeta(index);\n\t\t\tvar args = {\n\t\t\t\tmeta: meta,\n\t\t\t\tindex: index,\n\t\t\t\teasingValue: easingValue\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmeta.controller.draw(easingValue);\n\n\t\t\tplugins.notify(me, 'afterDatasetDraw', [args]);\n\t\t},\n\n\t\t/**\n\t\t * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n\t\t * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n\t\t * @private\n\t\t */\n\t\t_drawTooltip: function(easingValue) {\n\t\t\tvar me = this;\n\t\t\tvar tooltip = me.tooltip;\n\t\t\tvar args = {\n\t\t\t\ttooltip: tooltip,\n\t\t\t\teasingValue: easingValue\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttooltip.draw();\n\n\t\t\tplugins.notify(me, 'afterTooltipDraw', [args]);\n\t\t},\n\n\t\t// Get the single element that was clicked on\n\t\t// @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n\t\tgetElementAtEvent: function(e) {\n\t\t\treturn Interaction.modes.single(this, e);\n\t\t},\n\n\t\tgetElementsAtEvent: function(e) {\n\t\t\treturn Interaction.modes.label(this, e, {intersect: true});\n\t\t},\n\n\t\tgetElementsAtXAxis: function(e) {\n\t\t\treturn Interaction.modes['x-axis'](this, e, {intersect: true});\n\t\t},\n\n\t\tgetElementsAtEventForMode: function(e, mode, options) {\n\t\t\tvar method = Interaction.modes[mode];\n\t\t\tif (typeof method === 'function') {\n\t\t\t\treturn method(this, e, options);\n\t\t\t}\n\n\t\t\treturn [];\n\t\t},\n\n\t\tgetDatasetAtEvent: function(e) {\n\t\t\treturn Interaction.modes.dataset(this, e, {intersect: true});\n\t\t},\n\n\t\tgetDatasetMeta: function(datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.data.datasets[datasetIndex];\n\t\t\tif (!dataset._meta) {\n\t\t\t\tdataset._meta = {};\n\t\t\t}\n\n\t\t\tvar meta = dataset._meta[me.id];\n\t\t\tif (!meta) {\n\t\t\t\tmeta = dataset._meta[me.id] = {\n\t\t\t\t\ttype: null,\n\t\t\t\t\tdata: [],\n\t\t\t\t\tdataset: null,\n\t\t\t\t\tcontroller: null,\n\t\t\t\t\thidden: null,\t\t\t// See isDatasetVisible() comment\n\t\t\t\t\txAxisID: null,\n\t\t\t\t\tyAxisID: null\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn meta;\n\t\t},\n\n\t\tgetVisibleDatasetCount: function() {\n\t\t\tvar count = 0;\n\t\t\tfor (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tif (this.isDatasetVisible(i)) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn count;\n\t\t},\n\n\t\tisDatasetVisible: function(datasetIndex) {\n\t\t\tvar meta = this.getDatasetMeta(datasetIndex);\n\n\t\t\t// meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n\t\t\t// the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\t\t\treturn typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n\t\t},\n\n\t\tgenerateLegend: function() {\n\t\t\treturn this.options.legendCallback(this);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tdestroyDatasetMeta: function(datasetIndex) {\n\t\t\tvar id = this.id;\n\t\t\tvar dataset = this.data.datasets[datasetIndex];\n\t\t\tvar meta = dataset._meta && dataset._meta[id];\n\n\t\t\tif (meta) {\n\t\t\t\tmeta.controller.destroy();\n\t\t\t\tdelete dataset._meta[id];\n\t\t\t}\n\t\t},\n\n\t\tdestroy: function() {\n\t\t\tvar me = this;\n\t\t\tvar canvas = me.canvas;\n\t\t\tvar i, ilen;\n\n\t\t\tme.stop();\n\n\t\t\t// dataset controllers need to cleanup associated data\n\t\t\tfor (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tme.destroyDatasetMeta(i);\n\t\t\t}\n\n\t\t\tif (canvas) {\n\t\t\t\tme.unbindEvents();\n\t\t\t\thelpers.canvas.clear(me);\n\t\t\t\tplatform.releaseContext(me.ctx);\n\t\t\t\tme.canvas = null;\n\t\t\t\tme.ctx = null;\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'destroy');\n\n\t\t\tdelete Chart.instances[me.id];\n\t\t},\n\n\t\ttoBase64Image: function() {\n\t\t\treturn this.canvas.toDataURL.apply(this.canvas, arguments);\n\t\t},\n\n\t\tinitToolTip: function() {\n\t\t\tvar me = this;\n\t\t\tme.tooltip = new Tooltip({\n\t\t\t\t_chart: me,\n\t\t\t\t_chartInstance: me, // deprecated, backward compatibility\n\t\t\t\t_data: me.data,\n\t\t\t\t_options: me.options.tooltips\n\t\t\t}, me);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tbindEvents: function() {\n\t\t\tvar me = this;\n\t\t\tvar listeners = me._listeners = {};\n\t\t\tvar listener = function() {\n\t\t\t\tme.eventHandler.apply(me, arguments);\n\t\t\t};\n\n\t\t\thelpers.each(me.options.events, function(type) {\n\t\t\t\tplatform.addEventListener(me, type, listener);\n\t\t\t\tlisteners[type] = listener;\n\t\t\t});\n\n\t\t\t// Elements used to detect size change should not be injected for non responsive charts.\n\t\t\t// See https://github.com/chartjs/Chart.js/issues/2210\n\t\t\tif (me.options.responsive) {\n\t\t\t\tlistener = function() {\n\t\t\t\t\tme.resize();\n\t\t\t\t};\n\n\t\t\t\tplatform.addEventListener(me, 'resize', listener);\n\t\t\t\tlisteners.resize = listener;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tunbindEvents: function() {\n\t\t\tvar me = this;\n\t\t\tvar listeners = me._listeners;\n\t\t\tif (!listeners) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdelete me._listeners;\n\t\t\thelpers.each(listeners, function(listener, type) {\n\t\t\t\tplatform.removeEventListener(me, type, listener);\n\t\t\t});\n\t\t},\n\n\t\tupdateHoverStyle: function(elements, mode, enabled) {\n\t\t\tvar method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n\t\t\tvar element, i, ilen;\n\n\t\t\tfor (i = 0, ilen = elements.length; i < ilen; ++i) {\n\t\t\t\telement = elements[i];\n\t\t\t\tif (element) {\n\t\t\t\t\tthis.getDatasetMeta(element._datasetIndex).controller[method](element);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\teventHandler: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar tooltip = me.tooltip;\n\n\t\t\tif (plugins.notify(me, 'beforeEvent', [e]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Buffer any update calls so that renders do not occur\n\t\t\tme._bufferedRender = true;\n\t\t\tme._bufferedRequest = null;\n\n\t\t\tvar changed = me.handleEvent(e);\n\t\t\t// for smooth tooltip animations issue #4989\n\t\t\t// the tooltip should be the source of change\n\t\t\t// Animation check workaround:\n\t\t\t// tooltip._start will be null when tooltip isn't animating\n\t\t\tif (tooltip) {\n\t\t\t\tchanged = tooltip._start\n\t\t\t\t\t? tooltip.handleEvent(e)\n\t\t\t\t\t: changed | tooltip.handleEvent(e);\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterEvent', [e]);\n\n\t\t\tvar bufferedRequest = me._bufferedRequest;\n\t\t\tif (bufferedRequest) {\n\t\t\t\t// If we have an update that was triggered, we need to do a normal render\n\t\t\t\tme.render(bufferedRequest);\n\t\t\t} else if (changed && !me.animating) {\n\t\t\t\t// If entering, leaving, or changing elements, animate the change via pivot\n\t\t\t\tme.stop();\n\n\t\t\t\t// We only need to render at this point. Updating will cause scales to be\n\t\t\t\t// recomputed generating flicker & using more memory than necessary.\n\t\t\t\tme.render({\n\t\t\t\t\tduration: me.options.hover.animationDuration,\n\t\t\t\t\tlazy: true\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tme._bufferedRender = false;\n\t\t\tme._bufferedRequest = null;\n\n\t\t\treturn me;\n\t\t},\n\n\t\t/**\n\t\t * Handle an event\n\t\t * @private\n\t\t * @param {IEvent} event the event to handle\n\t\t * @return {Boolean} true if the chart needs to re-render\n\t\t */\n\t\thandleEvent: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options || {};\n\t\t\tvar hoverOptions = options.hover;\n\t\t\tvar changed = false;\n\n\t\t\tme.lastActive = me.lastActive || [];\n\n\t\t\t// Find Active Elements for hover and tooltips\n\t\t\tif (e.type === 'mouseout') {\n\t\t\t\tme.active = [];\n\t\t\t} else {\n\t\t\t\tme.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n\t\t\t}\n\n\t\t\t// Invoke onHover hook\n\t\t\t// Need to call with native event here to not break backwards compatibility\n\t\t\thelpers.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n\t\t\tif (e.type === 'mouseup' || e.type === 'click') {\n\t\t\t\tif (options.onClick) {\n\t\t\t\t\t// Use e.native here for backwards compatibility\n\t\t\t\t\toptions.onClick.call(me, e.native, me.active);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove styling for last active (even if it may still be active)\n\t\t\tif (me.lastActive.length) {\n\t\t\t\tme.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n\t\t\t}\n\n\t\t\t// Built in hover styling\n\t\t\tif (me.active.length && hoverOptions.mode) {\n\t\t\t\tme.updateHoverStyle(me.active, hoverOptions.mode, true);\n\t\t\t}\n\n\t\t\tchanged = !helpers.arrayEquals(me.active, me.lastActive);\n\n\t\t\t// Remember Last Actives\n\t\t\tme.lastActive = me.active;\n\n\t\t\treturn changed;\n\t\t}\n\t});\n\n\t/**\n\t * Provided for backward compatibility, use Chart instead.\n\t * @class Chart.Controller\n\t * @deprecated since version 2.6.0\n\t * @todo remove at version 3\n\t * @private\n\t */\n\tChart.Controller = Chart;\n};\n","/* MIT license */\nvar convert = require('color-convert');\nvar string = require('chartjs-color-string');\n\nvar Color = function (obj) {\n\tif (obj instanceof Color) {\n\t\treturn obj;\n\t}\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(obj);\n\t}\n\n\tthis.valid = false;\n\tthis.values = {\n\t\trgb: [0, 0, 0],\n\t\thsl: [0, 0, 0],\n\t\thsv: [0, 0, 0],\n\t\thwb: [0, 0, 0],\n\t\tcmyk: [0, 0, 0, 0],\n\t\talpha: 1\n\t};\n\n\t// parse Color() argument\n\tvar vals;\n\tif (typeof obj === 'string') {\n\t\tvals = string.getRgba(obj);\n\t\tif (vals) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals = string.getHsla(obj)) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals = string.getHwb(obj)) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t}\n\t} else if (typeof obj === 'object') {\n\t\tvals = obj;\n\t\tif (vals.r !== undefined || vals.red !== undefined) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals.l !== undefined || vals.lightness !== undefined) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals.v !== undefined || vals.value !== undefined) {\n\t\t\tthis.setValues('hsv', vals);\n\t\t} else if (vals.w !== undefined || vals.whiteness !== undefined) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t} else if (vals.c !== undefined || vals.cyan !== undefined) {\n\t\t\tthis.setValues('cmyk', vals);\n\t\t}\n\t}\n};\n\nColor.prototype = {\n\tisValid: function () {\n\t\treturn this.valid;\n\t},\n\trgb: function () {\n\t\treturn this.setSpace('rgb', arguments);\n\t},\n\thsl: function () {\n\t\treturn this.setSpace('hsl', arguments);\n\t},\n\thsv: function () {\n\t\treturn this.setSpace('hsv', arguments);\n\t},\n\thwb: function () {\n\t\treturn this.setSpace('hwb', arguments);\n\t},\n\tcmyk: function () {\n\t\treturn this.setSpace('cmyk', arguments);\n\t},\n\n\trgbArray: function () {\n\t\treturn this.values.rgb;\n\t},\n\thslArray: function () {\n\t\treturn this.values.hsl;\n\t},\n\thsvArray: function () {\n\t\treturn this.values.hsv;\n\t},\n\thwbArray: function () {\n\t\tvar values = this.values;\n\t\tif (values.alpha !== 1) {\n\t\t\treturn values.hwb.concat([values.alpha]);\n\t\t}\n\t\treturn values.hwb;\n\t},\n\tcmykArray: function () {\n\t\treturn this.values.cmyk;\n\t},\n\trgbaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.rgb.concat([values.alpha]);\n\t},\n\thslaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.hsl.concat([values.alpha]);\n\t},\n\talpha: function (val) {\n\t\tif (val === undefined) {\n\t\t\treturn this.values.alpha;\n\t\t}\n\t\tthis.setValues('alpha', val);\n\t\treturn this;\n\t},\n\n\tred: function (val) {\n\t\treturn this.setChannel('rgb', 0, val);\n\t},\n\tgreen: function (val) {\n\t\treturn this.setChannel('rgb', 1, val);\n\t},\n\tblue: function (val) {\n\t\treturn this.setChannel('rgb', 2, val);\n\t},\n\thue: function (val) {\n\t\tif (val) {\n\t\t\tval %= 360;\n\t\t\tval = val < 0 ? 360 + val : val;\n\t\t}\n\t\treturn this.setChannel('hsl', 0, val);\n\t},\n\tsaturation: function (val) {\n\t\treturn this.setChannel('hsl', 1, val);\n\t},\n\tlightness: function (val) {\n\t\treturn this.setChannel('hsl', 2, val);\n\t},\n\tsaturationv: function (val) {\n\t\treturn this.setChannel('hsv', 1, val);\n\t},\n\twhiteness: function (val) {\n\t\treturn this.setChannel('hwb', 1, val);\n\t},\n\tblackness: function (val) {\n\t\treturn this.setChannel('hwb', 2, val);\n\t},\n\tvalue: function (val) {\n\t\treturn this.setChannel('hsv', 2, val);\n\t},\n\tcyan: function (val) {\n\t\treturn this.setChannel('cmyk', 0, val);\n\t},\n\tmagenta: function (val) {\n\t\treturn this.setChannel('cmyk', 1, val);\n\t},\n\tyellow: function (val) {\n\t\treturn this.setChannel('cmyk', 2, val);\n\t},\n\tblack: function (val) {\n\t\treturn this.setChannel('cmyk', 3, val);\n\t},\n\n\thexString: function () {\n\t\treturn string.hexString(this.values.rgb);\n\t},\n\trgbString: function () {\n\t\treturn string.rgbString(this.values.rgb, this.values.alpha);\n\t},\n\trgbaString: function () {\n\t\treturn string.rgbaString(this.values.rgb, this.values.alpha);\n\t},\n\tpercentString: function () {\n\t\treturn string.percentString(this.values.rgb, this.values.alpha);\n\t},\n\thslString: function () {\n\t\treturn string.hslString(this.values.hsl, this.values.alpha);\n\t},\n\thslaString: function () {\n\t\treturn string.hslaString(this.values.hsl, this.values.alpha);\n\t},\n\thwbString: function () {\n\t\treturn string.hwbString(this.values.hwb, this.values.alpha);\n\t},\n\tkeyword: function () {\n\t\treturn string.keyword(this.values.rgb, this.values.alpha);\n\t},\n\n\trgbNumber: function () {\n\t\tvar rgb = this.values.rgb;\n\t\treturn (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];\n\t},\n\n\tluminosity: function () {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tvar rgb = this.values.rgb;\n\t\tvar lum = [];\n\t\tfor (var i = 0; i < rgb.length; i++) {\n\t\t\tvar chan = rgb[i] / 255;\n\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\n\t\t}\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast: function (color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tvar lum1 = this.luminosity();\n\t\tvar lum2 = color2.luminosity();\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel: function (color2) {\n\t\tvar contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7.1) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tdark: function () {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tvar rgb = this.values.rgb;\n\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n\t\treturn yiq < 128;\n\t},\n\n\tlight: function () {\n\t\treturn !this.dark();\n\t},\n\n\tnegate: function () {\n\t\tvar rgb = [];\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\trgb[i] = 255 - this.values.rgb[i];\n\t\t}\n\t\tthis.setValues('rgb', rgb);\n\t\treturn this;\n\t},\n\n\tlighten: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] += hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdarken: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] -= hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tsaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] += hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdesaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] -= hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\twhiten: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[1] += hwb[1] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tblacken: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[2] += hwb[2] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tgreyscale: function () {\n\t\tvar rgb = this.values.rgb;\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\tthis.setValues('rgb', [val, val, val]);\n\t\treturn this;\n\t},\n\n\tclearer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha - (alpha * ratio));\n\t\treturn this;\n\t},\n\n\topaquer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha + (alpha * ratio));\n\t\treturn this;\n\t},\n\n\trotate: function (degrees) {\n\t\tvar hsl = this.values.hsl;\n\t\tvar hue = (hsl[0] + degrees) % 360;\n\t\thsl[0] = hue < 0 ? 360 + hue : hue;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\t/**\n\t * Ported from sass implementation in C\n\t * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t */\n\tmix: function (mixinColor, weight) {\n\t\tvar color1 = this;\n\t\tvar color2 = mixinColor;\n\t\tvar p = weight === undefined ? 0.5 : weight;\n\n\t\tvar w = 2 * p - 1;\n\t\tvar a = color1.alpha() - color2.alpha();\n\n\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\tvar w2 = 1 - w1;\n\n\t\treturn this\n\t\t\t.rgb(\n\t\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\t\tw1 * color1.blue() + w2 * color2.blue()\n\t\t\t)\n\t\t\t.alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n\t},\n\n\ttoJSON: function () {\n\t\treturn this.rgb();\n\t},\n\n\tclone: function () {\n\t\t// NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n\t\t// making the final build way to big to embed in Chart.js. So let's do it manually,\n\t\t// assuming that values to clone are 1 dimension arrays containing only numbers,\n\t\t// except 'alpha' which is a number.\n\t\tvar result = new Color();\n\t\tvar source = this.values;\n\t\tvar target = result.values;\n\t\tvar value, type;\n\n\t\tfor (var prop in source) {\n\t\t\tif (source.hasOwnProperty(prop)) {\n\t\t\t\tvalue = source[prop];\n\t\t\t\ttype = ({}).toString.call(value);\n\t\t\t\tif (type === '[object Array]') {\n\t\t\t\t\ttarget[prop] = value.slice(0);\n\t\t\t\t} else if (type === '[object Number]') {\n\t\t\t\t\ttarget[prop] = value;\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error('unexpected color value:', value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n};\n\nColor.prototype.spaces = {\n\trgb: ['red', 'green', 'blue'],\n\thsl: ['hue', 'saturation', 'lightness'],\n\thsv: ['hue', 'saturation', 'value'],\n\thwb: ['hue', 'whiteness', 'blackness'],\n\tcmyk: ['cyan', 'magenta', 'yellow', 'black']\n};\n\nColor.prototype.maxes = {\n\trgb: [255, 255, 255],\n\thsl: [360, 100, 100],\n\thsv: [360, 100, 100],\n\thwb: [360, 100, 100],\n\tcmyk: [100, 100, 100, 100]\n};\n\nColor.prototype.getValues = function (space) {\n\tvar values = this.values;\n\tvar vals = {};\n\n\tfor (var i = 0; i < space.length; i++) {\n\t\tvals[space.charAt(i)] = values[space][i];\n\t}\n\n\tif (values.alpha !== 1) {\n\t\tvals.a = values.alpha;\n\t}\n\n\t// {r: 255, g: 255, b: 255, a: 0.4}\n\treturn vals;\n};\n\nColor.prototype.setValues = function (space, vals) {\n\tvar values = this.values;\n\tvar spaces = this.spaces;\n\tvar maxes = this.maxes;\n\tvar alpha = 1;\n\tvar i;\n\n\tthis.valid = true;\n\n\tif (space === 'alpha') {\n\t\talpha = vals;\n\t} else if (vals.length) {\n\t\t// [10, 10, 10]\n\t\tvalues[space] = vals.slice(0, space.length);\n\t\talpha = vals[space.length];\n\t} else if (vals[space.charAt(0)] !== undefined) {\n\t\t// {r: 10, g: 10, b: 10}\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[space.charAt(i)];\n\t\t}\n\n\t\talpha = vals.a;\n\t} else if (vals[spaces[space][0]] !== undefined) {\n\t\t// {red: 10, green: 10, blue: 10}\n\t\tvar chans = spaces[space];\n\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[chans[i]];\n\t\t}\n\n\t\talpha = vals.alpha;\n\t}\n\n\tvalues.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));\n\n\tif (space === 'alpha') {\n\t\treturn false;\n\t}\n\n\tvar capped;\n\n\t// cap values of the space prior converting all values\n\tfor (i = 0; i < space.length; i++) {\n\t\tcapped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n\t\tvalues[space][i] = Math.round(capped);\n\t}\n\n\t// convert to all the other color spaces\n\tfor (var sname in spaces) {\n\t\tif (sname !== space) {\n\t\t\tvalues[sname] = convert[space][sname](values[space]);\n\t\t}\n\t}\n\n\treturn true;\n};\n\nColor.prototype.setSpace = function (space, args) {\n\tvar vals = args[0];\n\n\tif (vals === undefined) {\n\t\t// color.rgb()\n\t\treturn this.getValues(space);\n\t}\n\n\t// color.rgb(10, 10, 10)\n\tif (typeof vals === 'number') {\n\t\tvals = Array.prototype.slice.call(args);\n\t}\n\n\tthis.setValues(space, vals);\n\treturn this;\n};\n\nColor.prototype.setChannel = function (space, index, val) {\n\tvar svalues = this.values[space];\n\tif (val === undefined) {\n\t\t// color.red()\n\t\treturn svalues[index];\n\t} else if (val === svalues[index]) {\n\t\t// color.red(color.red())\n\t\treturn this;\n\t}\n\n\t// color.red(100)\n\tsvalues[index] = val;\n\tthis.setValues(space, svalues);\n\n\treturn this;\n};\n\nif (typeof window !== 'undefined') {\n\twindow.Color = Color;\n}\n\nmodule.exports = Color;\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Line = function(context, config) {\n\t\tconfig.type = 'line';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\nvar Scale = require('../core/core.scale');\nvar scaleService = require('../core/core.scaleService');\n\nmodule.exports = function() {\n\n\t// Default config for a category scale\n\tvar defaultConfig = {\n\t\tposition: 'bottom'\n\t};\n\n\tvar DatasetScale = Scale.extend({\n\t\t/**\n\t\t* Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n\t\t* else fall back to data.labels\n\t\t* @private\n\t\t*/\n\t\tgetLabels: function() {\n\t\t\tvar data = this.chart.data;\n\t\t\treturn this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n\t\t},\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar labels = me.getLabels();\n\t\t\tme.minIndex = 0;\n\t\t\tme.maxIndex = labels.length - 1;\n\t\t\tvar findIndex;\n\n\t\t\tif (me.options.ticks.min !== undefined) {\n\t\t\t\t// user specified min value\n\t\t\t\tfindIndex = labels.indexOf(me.options.ticks.min);\n\t\t\t\tme.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n\t\t\t}\n\n\t\t\tif (me.options.ticks.max !== undefined) {\n\t\t\t\t// user specified max value\n\t\t\t\tfindIndex = labels.indexOf(me.options.ticks.max);\n\t\t\t\tme.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n\t\t\t}\n\n\t\t\tme.min = labels[me.minIndex];\n\t\t\tme.max = labels[me.maxIndex];\n\t\t},\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar labels = me.getLabels();\n\t\t\t// If we are viewing some subset of labels, slice the original array\n\t\t\tme.ticks = (me.minIndex === 0 && me.maxIndex === labels.length - 1) ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n\t\t},\n\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar data = me.chart.data;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tif (data.yLabels && !isHorizontal) {\n\t\t\t\treturn me.getRightValue(data.datasets[datasetIndex].data[index]);\n\t\t\t}\n\t\t\treturn me.ticks[index - me.minIndex];\n\t\t},\n\n\t\t// Used to get data value locations.  Value can either be an index or a numerical value\n\t\tgetPixelForValue: function(value, index) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\t// 1 is added because we need the length but we have the indexes\n\t\t\tvar offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1)), 1);\n\n\t\t\t// If value is a data object, then index is the index in the data array,\n\t\t\t// not the index of the scale. We need to change that.\n\t\t\tvar valueCategory;\n\t\t\tif (value !== undefined && value !== null) {\n\t\t\t\tvalueCategory = me.isHorizontal() ? value.x : value.y;\n\t\t\t}\n\t\t\tif (valueCategory !== undefined || (value !== undefined && isNaN(index))) {\n\t\t\t\tvar labels = me.getLabels();\n\t\t\t\tvalue = valueCategory || value;\n\t\t\t\tvar idx = labels.indexOf(value);\n\t\t\t\tindex = idx !== -1 ? idx : index;\n\t\t\t}\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar valueWidth = me.width / offsetAmt;\n\t\t\t\tvar widthOffset = (valueWidth * (index - me.minIndex));\n\n\t\t\t\tif (offset) {\n\t\t\t\t\twidthOffset += (valueWidth / 2);\n\t\t\t\t}\n\n\t\t\t\treturn me.left + Math.round(widthOffset);\n\t\t\t}\n\t\t\tvar valueHeight = me.height / offsetAmt;\n\t\t\tvar heightOffset = (valueHeight * (index - me.minIndex));\n\n\t\t\tif (offset) {\n\t\t\t\theightOffset += (valueHeight / 2);\n\t\t\t}\n\n\t\t\treturn me.top + Math.round(heightOffset);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\tvar value;\n\t\t\tvar offsetAmt = Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\t\tvar horz = me.isHorizontal();\n\t\t\tvar valueDimension = (horz ? me.width : me.height) / offsetAmt;\n\n\t\t\tpixel -= horz ? me.left : me.top;\n\n\t\t\tif (offset) {\n\t\t\t\tpixel -= (valueDimension / 2);\n\t\t\t}\n\n\t\t\tif (pixel <= 0) {\n\t\t\t\tvalue = 0;\n\t\t\t} else {\n\t\t\t\tvalue = Math.round(pixel / valueDimension);\n\t\t\t}\n\n\t\t\treturn value + me.minIndex;\n\t\t},\n\t\tgetBasePixel: function() {\n\t\t\treturn this.bottom;\n\t\t}\n\t});\n\n\tscaleService.registerScaleType('category', DatasetScale, defaultConfig);\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar helpers = require('../helpers/index');\nvar scaleService = require('../core/core.scaleService');\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function(Chart) {\n\n\tvar globalDefaults = defaults.global;\n\n\tvar defaultConfig = {\n\t\tdisplay: true,\n\n\t\t// Boolean - Whether to animate scaling the chart from the centre\n\t\tanimate: true,\n\t\tposition: 'chartArea',\n\n\t\tangleLines: {\n\t\t\tdisplay: true,\n\t\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\t\tlineWidth: 1\n\t\t},\n\n\t\tgridLines: {\n\t\t\tcircular: false\n\t\t},\n\n\t\t// label settings\n\t\tticks: {\n\t\t\t// Boolean - Show a backdrop to the scale label\n\t\t\tshowLabelBackdrop: true,\n\n\t\t\t// String - The colour of the label backdrop\n\t\t\tbackdropColor: 'rgba(255,255,255,0.75)',\n\n\t\t\t// Number - The backdrop padding above & below the label in pixels\n\t\t\tbackdropPaddingY: 2,\n\n\t\t\t// Number - The backdrop padding to the side of the label in pixels\n\t\t\tbackdropPaddingX: 2,\n\n\t\t\tcallback: Ticks.formatters.linear\n\t\t},\n\n\t\tpointLabels: {\n\t\t\t// Boolean - if true, show point labels\n\t\t\tdisplay: true,\n\n\t\t\t// Number - Point label font size in pixels\n\t\t\tfontSize: 10,\n\n\t\t\t// Function - Used to convert point labels\n\t\t\tcallback: function(label) {\n\t\t\t\treturn label;\n\t\t\t}\n\t\t}\n\t};\n\n\tfunction getValueCount(scale) {\n\t\tvar opts = scale.options;\n\t\treturn opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n\t}\n\n\tfunction getPointLabelFontOptions(scale) {\n\t\tvar pointLabelOptions = scale.options.pointLabels;\n\t\tvar fontSize = helpers.valueOrDefault(pointLabelOptions.fontSize, globalDefaults.defaultFontSize);\n\t\tvar fontStyle = helpers.valueOrDefault(pointLabelOptions.fontStyle, globalDefaults.defaultFontStyle);\n\t\tvar fontFamily = helpers.valueOrDefault(pointLabelOptions.fontFamily, globalDefaults.defaultFontFamily);\n\t\tvar font = helpers.fontString(fontSize, fontStyle, fontFamily);\n\n\t\treturn {\n\t\t\tsize: fontSize,\n\t\t\tstyle: fontStyle,\n\t\t\tfamily: fontFamily,\n\t\t\tfont: font\n\t\t};\n\t}\n\n\tfunction measureLabelSize(ctx, fontSize, label) {\n\t\tif (helpers.isArray(label)) {\n\t\t\treturn {\n\t\t\t\tw: helpers.longestText(ctx, ctx.font, label),\n\t\t\t\th: (label.length * fontSize) + ((label.length - 1) * 1.5 * fontSize)\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tw: ctx.measureText(label).width,\n\t\t\th: fontSize\n\t\t};\n\t}\n\n\tfunction determineLimits(angle, pos, size, min, max) {\n\t\tif (angle === min || angle === max) {\n\t\t\treturn {\n\t\t\t\tstart: pos - (size / 2),\n\t\t\t\tend: pos + (size / 2)\n\t\t\t};\n\t\t} else if (angle < min || angle > max) {\n\t\t\treturn {\n\t\t\t\tstart: pos - size - 5,\n\t\t\t\tend: pos\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tstart: pos,\n\t\t\tend: pos + size + 5\n\t\t};\n\t}\n\n\t/**\n\t * Helper function to fit a radial linear scale with point labels\n\t */\n\tfunction fitWithPointLabels(scale) {\n\t\t/*\n\t\t * Right, this is really confusing and there is a lot of maths going on here\n\t\t * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n\t\t *\n\t\t * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n\t\t *\n\t\t * Solution:\n\t\t *\n\t\t * We assume the radius of the polygon is half the size of the canvas at first\n\t\t * at each index we check if the text overlaps.\n\t\t *\n\t\t * Where it does, we store that angle and that index.\n\t\t *\n\t\t * After finding the largest index and angle we calculate how much we need to remove\n\t\t * from the shape radius to move the point inwards by that x.\n\t\t *\n\t\t * We average the left and right distances to get the maximum shape radius that can fit in the box\n\t\t * along with labels.\n\t\t *\n\t\t * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n\t\t * on each side, removing that from the size, halving it and adding the left x protrusion width.\n\t\t *\n\t\t * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n\t\t * and position it in the most space efficient manner\n\t\t *\n\t\t * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\t\t */\n\n\t\tvar plFont = getPointLabelFontOptions(scale);\n\n\t\t// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n\t\t// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\t\tvar largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n\t\tvar furthestLimits = {\n\t\t\tr: scale.width,\n\t\t\tl: 0,\n\t\t\tt: scale.height,\n\t\t\tb: 0\n\t\t};\n\t\tvar furthestAngles = {};\n\t\tvar i, textSize, pointPosition;\n\n\t\tscale.ctx.font = plFont.font;\n\t\tscale._pointLabelSizes = [];\n\n\t\tvar valueCount = getValueCount(scale);\n\t\tfor (i = 0; i < valueCount; i++) {\n\t\t\tpointPosition = scale.getPointPosition(i, largestPossibleRadius);\n\t\t\ttextSize = measureLabelSize(scale.ctx, plFont.size, scale.pointLabels[i] || '');\n\t\t\tscale._pointLabelSizes[i] = textSize;\n\n\t\t\t// Add quarter circle to make degree 0 mean top of circle\n\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\tvar angle = helpers.toDegrees(angleRadians) % 360;\n\t\t\tvar hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n\t\t\tvar vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n\t\t\tif (hLimits.start < furthestLimits.l) {\n\t\t\t\tfurthestLimits.l = hLimits.start;\n\t\t\t\tfurthestAngles.l = angleRadians;\n\t\t\t}\n\n\t\t\tif (hLimits.end > furthestLimits.r) {\n\t\t\t\tfurthestLimits.r = hLimits.end;\n\t\t\t\tfurthestAngles.r = angleRadians;\n\t\t\t}\n\n\t\t\tif (vLimits.start < furthestLimits.t) {\n\t\t\t\tfurthestLimits.t = vLimits.start;\n\t\t\t\tfurthestAngles.t = angleRadians;\n\t\t\t}\n\n\t\t\tif (vLimits.end > furthestLimits.b) {\n\t\t\t\tfurthestLimits.b = vLimits.end;\n\t\t\t\tfurthestAngles.b = angleRadians;\n\t\t\t}\n\t\t}\n\n\t\tscale.setReductions(largestPossibleRadius, furthestLimits, furthestAngles);\n\t}\n\n\t/**\n\t * Helper function to fit a radial linear scale with no point labels\n\t */\n\tfunction fit(scale) {\n\t\tvar largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n\t\tscale.drawingArea = Math.round(largestPossibleRadius);\n\t\tscale.setCenterPoint(0, 0, 0, 0);\n\t}\n\n\tfunction getTextAlignForAngle(angle) {\n\t\tif (angle === 0 || angle === 180) {\n\t\t\treturn 'center';\n\t\t} else if (angle < 180) {\n\t\t\treturn 'left';\n\t\t}\n\n\t\treturn 'right';\n\t}\n\n\tfunction fillText(ctx, text, position, fontSize) {\n\t\tif (helpers.isArray(text)) {\n\t\t\tvar y = position.y;\n\t\t\tvar spacing = 1.5 * fontSize;\n\n\t\t\tfor (var i = 0; i < text.length; ++i) {\n\t\t\t\tctx.fillText(text[i], position.x, y);\n\t\t\t\ty += spacing;\n\t\t\t}\n\t\t} else {\n\t\t\tctx.fillText(text, position.x, position.y);\n\t\t}\n\t}\n\n\tfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n\t\tif (angle === 90 || angle === 270) {\n\t\t\tposition.y -= (textSize.h / 2);\n\t\t} else if (angle > 270 || angle < 90) {\n\t\t\tposition.y -= textSize.h;\n\t\t}\n\t}\n\n\tfunction drawPointLabels(scale) {\n\t\tvar ctx = scale.ctx;\n\t\tvar opts = scale.options;\n\t\tvar angleLineOpts = opts.angleLines;\n\t\tvar pointLabelOpts = opts.pointLabels;\n\n\t\tctx.lineWidth = angleLineOpts.lineWidth;\n\t\tctx.strokeStyle = angleLineOpts.color;\n\n\t\tvar outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n\n\t\t// Point Label Font\n\t\tvar plFont = getPointLabelFontOptions(scale);\n\n\t\tctx.textBaseline = 'top';\n\n\t\tfor (var i = getValueCount(scale) - 1; i >= 0; i--) {\n\t\t\tif (angleLineOpts.display) {\n\t\t\t\tvar outerPosition = scale.getPointPosition(i, outerDistance);\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(scale.xCenter, scale.yCenter);\n\t\t\t\tctx.lineTo(outerPosition.x, outerPosition.y);\n\t\t\t\tctx.stroke();\n\t\t\t\tctx.closePath();\n\t\t\t}\n\n\t\t\tif (pointLabelOpts.display) {\n\t\t\t\t// Extra 3px out for some label spacing\n\t\t\t\tvar pointLabelPosition = scale.getPointPosition(i, outerDistance + 5);\n\n\t\t\t\t// Keep this in loop since we may support array properties here\n\t\t\t\tvar pointLabelFontColor = helpers.valueAtIndexOrDefault(pointLabelOpts.fontColor, i, globalDefaults.defaultFontColor);\n\t\t\t\tctx.font = plFont.font;\n\t\t\t\tctx.fillStyle = pointLabelFontColor;\n\n\t\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\t\tvar angle = helpers.toDegrees(angleRadians);\n\t\t\t\tctx.textAlign = getTextAlignForAngle(angle);\n\t\t\t\tadjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n\t\t\t\tfillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.size);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction drawRadiusLine(scale, gridLineOpts, radius, index) {\n\t\tvar ctx = scale.ctx;\n\t\tctx.strokeStyle = helpers.valueAtIndexOrDefault(gridLineOpts.color, index - 1);\n\t\tctx.lineWidth = helpers.valueAtIndexOrDefault(gridLineOpts.lineWidth, index - 1);\n\n\t\tif (scale.options.gridLines.circular) {\n\t\t\t// Draw circular arcs between the points\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n\t\t\tctx.closePath();\n\t\t\tctx.stroke();\n\t\t} else {\n\t\t\t// Draw straight lines connecting each index\n\t\t\tvar valueCount = getValueCount(scale);\n\n\t\t\tif (valueCount === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tctx.beginPath();\n\t\t\tvar pointPosition = scale.getPointPosition(0, radius);\n\t\t\tctx.moveTo(pointPosition.x, pointPosition.y);\n\n\t\t\tfor (var i = 1; i < valueCount; i++) {\n\t\t\t\tpointPosition = scale.getPointPosition(i, radius);\n\t\t\t\tctx.lineTo(pointPosition.x, pointPosition.y);\n\t\t\t}\n\n\t\t\tctx.closePath();\n\t\t\tctx.stroke();\n\t\t}\n\t}\n\n\tfunction numberOrZero(param) {\n\t\treturn helpers.isNumber(param) ? param : 0;\n\t}\n\n\tvar LinearRadialScale = Chart.LinearScaleBase.extend({\n\t\tsetDimensions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\t// Set the unconstrained dimension before label rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.height = me.maxHeight;\n\t\t\tme.xCenter = Math.round(me.width / 2);\n\t\t\tme.yCenter = Math.round(me.height / 2);\n\n\t\t\tvar minSize = helpers.min([me.height, me.width]);\n\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\tme.drawingArea = opts.display ? (minSize / 2) - (tickFontSize / 2 + tickOpts.backdropPaddingY) : (minSize / 2);\n\t\t},\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar min = Number.POSITIVE_INFINITY;\n\t\t\tvar max = Number.NEGATIVE_INFINITY;\n\n\t\t\thelpers.each(chart.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\n\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmin = Math.min(value, min);\n\t\t\t\t\t\tmax = Math.max(value, max);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tme.min = (min === Number.POSITIVE_INFINITY ? 0 : min);\n\t\t\tme.max = (max === Number.NEGATIVE_INFINITY ? 0 : max);\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\t\tme.handleTickRangeOptions();\n\t\t},\n\t\tgetTickLimit: function() {\n\t\t\tvar tickOpts = this.options.ticks;\n\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\treturn Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(this.drawingArea / (1.5 * tickFontSize)));\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\n\t\t\tChart.LinearScaleBase.prototype.convertTicksToLabels.call(me);\n\n\t\t\t// Point labels\n\t\t\tme.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n\t\t},\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\tfit: function() {\n\t\t\tif (this.options.pointLabels.display) {\n\t\t\t\tfitWithPointLabels(this);\n\t\t\t} else {\n\t\t\t\tfit(this);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Set radius reductions and determine new radius and center point\n\t\t * @private\n\t\t */\n\t\tsetReductions: function(largestPossibleRadius, furthestLimits, furthestAngles) {\n\t\t\tvar me = this;\n\t\t\tvar radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n\t\t\tvar radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n\t\t\tvar radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n\t\t\tvar radiusReductionBottom = -Math.max(furthestLimits.b - me.height, 0) / Math.cos(furthestAngles.b);\n\n\t\t\tradiusReductionLeft = numberOrZero(radiusReductionLeft);\n\t\t\tradiusReductionRight = numberOrZero(radiusReductionRight);\n\t\t\tradiusReductionTop = numberOrZero(radiusReductionTop);\n\t\t\tradiusReductionBottom = numberOrZero(radiusReductionBottom);\n\n\t\t\tme.drawingArea = Math.min(\n\t\t\t\tMath.round(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n\t\t\t\tMath.round(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n\t\t\tme.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n\t\t},\n\t\tsetCenterPoint: function(leftMovement, rightMovement, topMovement, bottomMovement) {\n\t\t\tvar me = this;\n\t\t\tvar maxRight = me.width - rightMovement - me.drawingArea;\n\t\t\tvar maxLeft = leftMovement + me.drawingArea;\n\t\t\tvar maxTop = topMovement + me.drawingArea;\n\t\t\tvar maxBottom = me.height - bottomMovement - me.drawingArea;\n\n\t\t\tme.xCenter = Math.round(((maxLeft + maxRight) / 2) + me.left);\n\t\t\tme.yCenter = Math.round(((maxTop + maxBottom) / 2) + me.top);\n\t\t},\n\n\t\tgetIndexAngle: function(index) {\n\t\t\tvar angleMultiplier = (Math.PI * 2) / getValueCount(this);\n\t\t\tvar startAngle = this.chart.options && this.chart.options.startAngle ?\n\t\t\t\tthis.chart.options.startAngle :\n\t\t\t\t0;\n\n\t\t\tvar startAngleRadians = startAngle * Math.PI * 2 / 360;\n\n\t\t\t// Start from the top instead of right, so remove a quarter of the circle\n\t\t\treturn index * angleMultiplier + startAngleRadians;\n\t\t},\n\t\tgetDistanceFromCenterForValue: function(value) {\n\t\t\tvar me = this;\n\n\t\t\tif (value === null) {\n\t\t\t\treturn 0; // null always in center\n\t\t\t}\n\n\t\t\t// Take into account half font size + the yPadding of the top value\n\t\t\tvar scalingFactor = me.drawingArea / (me.max - me.min);\n\t\t\tif (me.options.ticks.reverse) {\n\t\t\t\treturn (me.max - value) * scalingFactor;\n\t\t\t}\n\t\t\treturn (value - me.min) * scalingFactor;\n\t\t},\n\t\tgetPointPosition: function(index, distanceFromCenter) {\n\t\t\tvar me = this;\n\t\t\tvar thisAngle = me.getIndexAngle(index) - (Math.PI / 2);\n\t\t\treturn {\n\t\t\t\tx: Math.round(Math.cos(thisAngle) * distanceFromCenter) + me.xCenter,\n\t\t\t\ty: Math.round(Math.sin(thisAngle) * distanceFromCenter) + me.yCenter\n\t\t\t};\n\t\t},\n\t\tgetPointPositionForValue: function(index, value) {\n\t\t\treturn this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n\t\t},\n\n\t\tgetBasePosition: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\n\t\t\treturn me.getPointPositionForValue(0,\n\t\t\t\tme.beginAtZero ? 0 :\n\t\t\t\tmin < 0 && max < 0 ? max :\n\t\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t\t0);\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar gridLineOpts = opts.gridLines;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\n\t\t\tif (opts.display) {\n\t\t\t\tvar ctx = me.ctx;\n\t\t\t\tvar startAngle = this.getIndexAngle(0);\n\n\t\t\t\t// Tick Font\n\t\t\t\tvar tickFontSize = valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\t\tvar tickFontStyle = valueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\t\tvar tickFontFamily = valueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\n\n\t\t\t\thelpers.each(me.ticks, function(label, index) {\n\t\t\t\t\t// Don't draw a centre value (if it is minimum)\n\t\t\t\t\tif (index > 0 || tickOpts.reverse) {\n\t\t\t\t\t\tvar yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]);\n\n\t\t\t\t\t\t// Draw circular lines around the scale\n\t\t\t\t\t\tif (gridLineOpts.display && index !== 0) {\n\t\t\t\t\t\t\tdrawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (tickOpts.display) {\n\t\t\t\t\t\t\tvar tickFontColor = valueOrDefault(tickOpts.fontColor, globalDefaults.defaultFontColor);\n\t\t\t\t\t\t\tctx.font = tickLabelFont;\n\n\t\t\t\t\t\t\tctx.save();\n\t\t\t\t\t\t\tctx.translate(me.xCenter, me.yCenter);\n\t\t\t\t\t\t\tctx.rotate(startAngle);\n\n\t\t\t\t\t\t\tif (tickOpts.showLabelBackdrop) {\n\t\t\t\t\t\t\t\tvar labelWidth = ctx.measureText(label).width;\n\t\t\t\t\t\t\t\tctx.fillStyle = tickOpts.backdropColor;\n\t\t\t\t\t\t\t\tctx.fillRect(\n\t\t\t\t\t\t\t\t\t-labelWidth / 2 - tickOpts.backdropPaddingX,\n\t\t\t\t\t\t\t\t\t-yCenterOffset - tickFontSize / 2 - tickOpts.backdropPaddingY,\n\t\t\t\t\t\t\t\t\tlabelWidth + tickOpts.backdropPaddingX * 2,\n\t\t\t\t\t\t\t\t\ttickFontSize + tickOpts.backdropPaddingY * 2\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\t\tctx.textBaseline = 'middle';\n\t\t\t\t\t\t\tctx.fillStyle = tickFontColor;\n\t\t\t\t\t\t\tctx.fillText(label, 0, -yCenterOffset);\n\t\t\t\t\t\t\tctx.restore();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (opts.angleLines.display || opts.pointLabels.display) {\n\t\t\t\t\tdrawPointLabels(me);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tscaleService.registerScaleType('radialLinear', LinearRadialScale, defaultConfig);\n};\n"],"sourceRoot":""}